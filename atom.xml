<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>易锦风的博客</title>
  
  <subtitle>专注互联网和软件技术</subtitle>
  <link href="http://www.formeasy.cc/atom.xml" rel="self"/>
  
  <link href="http://www.formeasy.cc/"/>
  <updated>2025-09-09T02:31:57.130Z</updated>
  <id>http://www.formeasy.cc/</id>
  
  <author>
    <name>formeasy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UE中使用NDI插件读取Qt程序截图</title>
    <link href="http://www.formeasy.cc/2025/09/09/UE/UE%E4%B8%AD%E4%BD%BF%E7%94%A8NDI%E6%8F%92%E4%BB%B6%E8%AF%BB%E5%8F%96Qt%E7%A8%8B%E5%BA%8F%E6%88%AA%E5%9B%BE/"/>
    <id>http://www.formeasy.cc/2025/09/09/UE/UE%E4%B8%AD%E4%BD%BF%E7%94%A8NDI%E6%8F%92%E4%BB%B6%E8%AF%BB%E5%8F%96Qt%E7%A8%8B%E5%BA%8F%E6%88%AA%E5%9B%BE/</id>
    <published>2025-09-09T01:03:22.000Z</published>
    <updated>2025-09-09T02:31:57.130Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-下载和安装ndi工具和sdk"><a class="markdownIt-Anchor" href="#一-下载和安装ndi工具和sdk"></a> 一、下载和安装NDI工具和SDK</h3><p>下载和安装：<br />1.NDI 6 SDK （<a href="https://ndi.video/for-developers/ndi-sdk/%EF%BC%89">https://ndi.video/for-developers/ndi-sdk/）</a><br />2.NDI 6 Tools（选装） （<a href="https://ndi.video/%EF%BC%89">https://ndi.video/）</a><br />3.NDI SDK for Unreal Engine v3.8 （<a href="https://ndi.video/for-developers/ndi-unreal-engine-sdk/%EF%BC%89">https://ndi.video/for-developers/ndi-unreal-engine-sdk/）</a></p><h3 id="二-qt程序使用ndi发送视频流"><a class="markdownIt-Anchor" href="#二-qt程序使用ndi发送视频流"></a> 二、Qt程序使用NDI发送视频流</h3><p>1.新增SDK到工程目录下 \HDD\NDISDK</p><p><a href="http://2.XXX.pro">2.XXX.pro</a> 文件加入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#NDI</span><br><span class="line">INCLUDEPATH += $$PWD/NDISDK/include</span><br><span class="line">LIBS += -L$$PWD/NDISDK/lib -lProcessing.NDI.Lib.x64</span><br></pre></td></tr></table></figure><p>3.mainform.h文件：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Processing.NDI.Lib.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/*--------------NDI--------------------*/</span></span><br><span class="line">    NDIlib_send_instance_t m_pNDI_send; <span class="comment">// NDI 发送实例</span></span><br><span class="line">    QTimer* m_pTimer; <span class="comment">// 定时器，用于定期捕获和发送帧</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">captureAndSendFrame</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>4.mainform.cpp文件：</p><p>（1）构造函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*--------------NDI--------------------*/</span></span><br><span class="line"><span class="comment">// 初始化 NDI 库（确保只初始化一次）</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">NDIlib_initialize</span>()) &#123;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 NDI 发送器</span></span><br><span class="line">NDIlib_send_create_t NDI_send_create_desc;</span><br><span class="line">NDI_send_create_desc.p_ndi_name = <span class="string">&quot;HDD1&quot;</span>; <span class="comment">// 流的名称，在UE端会看到这个名称</span></span><br><span class="line">NDI_send_create_desc.p_groups = <span class="literal">nullptr</span>;</span><br><span class="line">NDI_send_create_desc.clock_video = <span class="literal">false</span>;</span><br><span class="line">NDI_send_create_desc.clock_audio = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">m_pNDI_send = <span class="built_in">NDIlib_send_create</span>(&amp;NDI_send_create_desc);</span><br><span class="line"><span class="keyword">if</span> (!m_pNDI_send) &#123;</span><br><span class="line">   <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置一个定时器，例如每秒 30 次（30 FPS）</span></span><br><span class="line"></span><br><span class="line">m_pTimer = <span class="keyword">new</span> <span class="built_in">QTimer</span>(<span class="keyword">this</span>);</span><br><span class="line"><span class="built_in">connect</span>(m_pTimer, &amp;QTimer::timeout, <span class="keyword">this</span>, &amp;MainForm::captureAndSendFrame);</span><br><span class="line">m_pTimer-&gt;<span class="built_in">start</span>(<span class="number">33</span>); <span class="comment">// ~33ms 一帧</span></span><br><span class="line"><span class="comment">/*---------end NDI---------*/</span></span><br></pre></td></tr></table></figure><p>（2）析构函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*--------NDI----------*/</span></span><br><span class="line">m_pTimer-&gt;<span class="built_in">stop</span>();</span><br><span class="line"><span class="keyword">delete</span> m_pTimer;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 销毁 NDI 发送器</span></span><br><span class="line"><span class="keyword">if</span> (m_pNDI_send) &#123;</span><br><span class="line"><span class="built_in">NDIlib_send_destroy</span>(m_pNDI_send);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 最后清理 NDI 库</span></span><br><span class="line"><span class="built_in">NDIlib_destroy</span>();</span><br></pre></td></tr></table></figure><p>（3）captureAndSendFrame函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* NDI 定时发送 */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainForm::captureAndSendFrame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 1. 捕获当前窗口的像素图</span></span><br><span class="line">    QPixmap pixmap = <span class="keyword">this</span>-&gt;<span class="built_in">grab</span>(); <span class="comment">// 捕获整个主窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 将 QPixmap 转换为 QImage (确保格式是 RGB 或 RGBA)</span></span><br><span class="line">    QImage image = pixmap.<span class="built_in">toImage</span>().<span class="built_in">convertToFormat</span>(QImage::Format_RGBA8888);</span><br><span class="line">    <span class="comment">//QImage image = pixmap.toImage().convertToFormat(QImage::Format_BGR888);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 填充 NDI 视频帧数据结构</span></span><br><span class="line">    NDIlib_video_frame_v2_t video_frame;</span><br><span class="line">    video_frame.xres = image.<span class="built_in">width</span>();</span><br><span class="line">    video_frame.yres = image.<span class="built_in">height</span>();</span><br><span class="line">    video_frame.FourCC = NDIlib_FourCC_type_RGBA; <span class="comment">// 格式与我们转换的 QImage 匹配</span></span><br><span class="line">    <span class="comment">//video_frame.FourCC = NDIlib_FourCC_type_BGRA ;</span></span><br><span class="line">    video_frame.frame_rate_N = <span class="number">30000</span>;</span><br><span class="line">    video_frame.frame_rate_D = <span class="number">1001</span>;</span><br><span class="line">    video_frame.picture_aspect_ratio = <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(image.<span class="built_in">width</span>()) / <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(image.<span class="built_in">height</span>());</span><br><span class="line">    video_frame.frame_format_type = NDIlib_frame_format_type_progressive;</span><br><span class="line">    video_frame.timecode = NDIlib_send_timecode_synthesize;</span><br><span class="line">    video_frame.p_data = <span class="built_in">const_cast</span>&lt;<span class="type">uint8_t</span>*&gt;(image.<span class="built_in">bits</span>()); <span class="comment">// NDI 不会修改数据</span></span><br><span class="line">    video_frame.line_stride_in_bytes = image.<span class="built_in">bytesPerLine</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 发送帧</span></span><br><span class="line">    <span class="built_in">NDIlib_send_send_video_v2</span>(m_pNDI_send, &amp;video_frame);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上执行后，可用NDI tools工具测试是否正常send视频流</p><h3 id="三-使用ue5接收视频流并播放"><a class="markdownIt-Anchor" href="#三-使用ue5接收视频流并播放"></a> 三、使用UE5接收视频流并播放</h3><p>1.添加NDI Receive Actor播放实体</p><p><img src="2025-09-09_091607_852_1.png" alt="" /></p><p>2.添加NDI Media Receiver，用来接收视频流</p><p><img src="2025-09-09_091722_794_2.png" alt="" /></p><p>3.设置创建的NDIMediaReceiver，将Connection选择为Qt程序中的SourceName、MachineName、StreamName</p><p><img src="2025-09-09_092133_683_3.png" alt="" /></p><p>4.设置NDI Receive Actor的视频源为创建的NDIMediaReceiver</p><p><img src="2025-09-09_091856_260_4.png" alt="" /></p><p>以上，可在UE5中正常播放Qt程序截图</p>]]></content>
    
    
    <summary type="html">UE中使用NDI插件读取Qt程序截图</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="UE" scheme="http://www.formeasy.cc/tags/UE/"/>
    
  </entry>
  
  <entry>
    <title>UE中使用NDI插件动态设置SourceName</title>
    <link href="http://www.formeasy.cc/2025/09/08/UE/UE%E4%B8%AD%E4%BD%BF%E7%94%A8NDI%E6%8F%92%E4%BB%B6%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AESourceName/"/>
    <id>http://www.formeasy.cc/2025/09/08/UE/UE%E4%B8%AD%E4%BD%BF%E7%94%A8NDI%E6%8F%92%E4%BB%B6%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AESourceName/</id>
    <published>2025-09-08T09:03:22.000Z</published>
    <updated>2025-09-08T09:37:24.088Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-配置动态ini类"><a class="markdownIt-Anchor" href="#一-配置动态ini类"></a> 一、配置动态ini类</h3><p>InConfigBPLibrary.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;CoreMinimal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/Actor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;InConfigBPLibrary.generated.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">UCLASS</span>()</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VISIONPROJECT_API</span> AInConfigBPLibrary : <span class="keyword">public</span> AActor</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">GENERATED_BODY</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// Sets default values for this actor&#x27;s properties</span></span><br><span class="line"><span class="built_in">AInConfigBPLibrary</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="comment">// Called when the game starts or when spawned</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">BeginPlay</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">// Called every frame</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Tick</span><span class="params">(<span class="type">float</span> DeltaTime)</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintCallable, Category = <span class="string">&quot;InConfig&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GetConfigNdiInfo</span><span class="params">(TArray&lt;FString&gt;&amp; configNDIInfo)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>InConfigBPLibrary.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;InConfigBPLibrary.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Sets default values</span></span><br><span class="line">AInConfigBPLibrary::<span class="built_in">AInConfigBPLibrary</span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don&#x27;t need it.</span></span><br><span class="line">PrimaryActorTick.bCanEverTick = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Called when the game starts or when spawned</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AInConfigBPLibrary::BeginPlay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Super::<span class="built_in">BeginPlay</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Called every frame</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AInConfigBPLibrary::Tick</span><span class="params">(<span class="type">float</span> DeltaTime)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Super::<span class="built_in">Tick</span>(DeltaTime);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AInConfigBPLibrary::GetConfigNdiInfo</span><span class="params">(TArray&lt;FString&gt;&amp; configNDIInfo)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FString ConfigPath = FPaths::<span class="built_in">ConvertRelativePathToFull</span>(FPaths::<span class="built_in">ProjectDir</span>()) + <span class="string">&quot;Config/config.ini&quot;</span>;</span><br><span class="line">FString sourcename;</span><br><span class="line">GConfig-&gt;<span class="built_in">GetString</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;NDI&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;sourcename&quot;</span>), sourcename, ConfigPath);</span><br><span class="line">configNDIInfo.<span class="built_in">Add</span>(sourcename);</span><br><span class="line">FString machinename;</span><br><span class="line">GConfig-&gt;<span class="built_in">GetString</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;NDI&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;machinename&quot;</span>), machinename, ConfigPath);</span><br><span class="line">configNDIInfo.<span class="built_in">Add</span>(machinename);</span><br><span class="line">FString streamname;</span><br><span class="line">GConfig-&gt;<span class="built_in">GetString</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;NDI&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;streamname&quot;</span>), streamname, ConfigPath);</span><br><span class="line">configNDIInfo.<span class="built_in">Add</span>(streamname);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二-配置ini文件"><a class="markdownIt-Anchor" href="#二-配置ini文件"></a> 二、配置ini文件</h3><p>在项目目录下创建目录及文件 Config/config.ini</p><p>添加源名、机器名和流名：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[NDI]</span><br><span class="line">sourcename=FORMEASY (HDD1)</span><br><span class="line">machinename=FORMEASY</span><br><span class="line">streamname=HDD1</span><br></pre></td></tr></table></figure><p>注：注意:sourcename的设备名和流名之间有空格</p><h3 id="三-ndiio插件复制"><a class="markdownIt-Anchor" href="#三-ndiio插件复制"></a> 三、NDIIO插件复制</h3><p>将UE5中的plugin下NDIIO插件目录复制到项目plugin下</p><h3 id="四-添加关卡蓝图方法"><a class="markdownIt-Anchor" href="#四-添加关卡蓝图方法"></a> 四、添加关卡蓝图方法</h3><p>按照下图，在EventBeginPlay后添加NDI配置:</p><p><img src="20250908172055_97_53.png" alt="" /></p>]]></content>
    
    
    <summary type="html">UE中使用NDI插件动态设置SourceName</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="UE" scheme="http://www.formeasy.cc/tags/UE/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 3 集成 Swagger 3 完整指南</title>
    <link href="http://www.formeasy.cc/2025/09/08/Springboot/Spring%20Boot%203%20%E9%9B%86%E6%88%90%20Swagger%203%20%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/"/>
    <id>http://www.formeasy.cc/2025/09/08/Springboot/Spring%20Boot%203%20%E9%9B%86%E6%88%90%20Swagger%203%20%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/</id>
    <published>2025-09-08T02:40:49.000Z</published>
    <updated>2025-09-08T02:59:37.076Z</updated>
    
    <content type="html"><![CDATA[<h2 id="spring-boot-3-集成-swagger-3-完整指南"><a class="markdownIt-Anchor" href="#spring-boot-3-集成-swagger-3-完整指南"></a> Spring Boot 3 集成 Swagger 3 完整指南</h2><p>Swagger（现更名为OpenAPI）是一个用于设计、构建和文档化API的强大工具。在Spring Boot 3中集成Swagger 3（OpenAPI 3.0）可以帮助我们自动生成API文档，方便前后端开发人员协作。</p><h3 id="一-依赖配置"><a class="markdownIt-Anchor" href="#一-依赖配置"></a> 一、依赖配置</h3><p>首先，在<code>pom.xml</code>中添加SpringDoc OpenAPI依赖（Swagger 3的官方实现）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- SpringDoc OpenAPI 核心依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springdoc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个依赖包含了：</p><ul><li>OpenAPI 3.0规范的实现</li><li>Swagger UI界面</li><li>与Spring Boot 3的自动配置</li></ul><h3 id="二-基本配置"><a class="markdownIt-Anchor" href="#二-基本配置"></a> 二、基本配置</h3><p>创建Swagger配置类，自定义API文档信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.OpenAPI;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.info.Contact;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.info.Info;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.info.License;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwaggerConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OpenAPI <span class="title function_">customOpenAPI</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OpenAPI</span>()</span><br><span class="line">                .info(<span class="keyword">new</span> <span class="title class_">Info</span>()</span><br><span class="line">                        .title(<span class="string">&quot;Spring Boot 3 API 文档&quot;</span>)</span><br><span class="line">                        .version(<span class="string">&quot;1.0.0&quot;</span>)</span><br><span class="line">                        .description(<span class="string">&quot;这是一个使用Spring Boot 3和Swagger 3构建的API文档示例&quot;</span>)</span><br><span class="line">                        .termsOfService(<span class="string">&quot;https://example.com/terms&quot;</span>)</span><br><span class="line">                        .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>()</span><br><span class="line">                                .name(<span class="string">&quot;开发团队&quot;</span>)</span><br><span class="line">                                .email(<span class="string">&quot;dev@example.com&quot;</span>)</span><br><span class="line">                                .url(<span class="string">&quot;https://example.com&quot;</span>))</span><br><span class="line">                        .license(<span class="keyword">new</span> <span class="title class_">License</span>()</span><br><span class="line">                                .name(<span class="string">&quot;Apache 2.0&quot;</span>)</span><br><span class="line">                                .url(<span class="string">&quot;https://www.apache.org/licenses/LICENSE-2.0.html&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三-实战示例"><a class="markdownIt-Anchor" href="#三-实战示例"></a> 三、实战示例</h3><h4 id="1-创建实体类"><a class="markdownIt-Anchor" href="#1-创建实体类"></a> 1. 创建实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Schema(description = &quot;用户实体类&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户ID&quot;, example = &quot;1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户名&quot;, example = &quot;张三&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户年龄&quot;, example = &quot;25&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户邮箱&quot;, example = &quot;zhangsan@example.com&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-创建控制器"><a class="markdownIt-Anchor" href="#2-创建控制器"></a> 2. 创建控制器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.model.User;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.Operation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.Parameter;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.enums.ParameterIn;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Content;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.responses.ApiResponse;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.tags.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/users&quot;)</span></span><br><span class="line"><span class="meta">@Tag(name = &quot;用户管理&quot;, description = &quot;用户CRUD操作的API接口&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模拟数据库</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ConcurrentHashMap&lt;Long, User&gt; users = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        users.put(<span class="number">1L</span>, <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1L</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">25</span>, <span class="string">&quot;zhangsan@example.com&quot;</span>));</span><br><span class="line">        users.put(<span class="number">2L</span>, <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">2L</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">30</span>, <span class="string">&quot;lisi@example.com&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;获取所有用户&quot;, description = &quot;返回系统中所有的用户列表&quot;)</span></span><br><span class="line">    <span class="meta">@ApiResponse(responseCode = &quot;200&quot;, description = &quot;查询成功&quot;,</span></span><br><span class="line"><span class="meta">            content = @Content(schema = @Schema(implementation = User.class)))</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getAllUsers</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(users.values());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;根据ID获取用户&quot;, description = &quot;根据用户ID查询用户信息&quot;)</span></span><br><span class="line">    <span class="meta">@ApiResponse(responseCode = &quot;200&quot;, description = &quot;查询成功&quot;)</span></span><br><span class="line">    <span class="meta">@ApiResponse(responseCode = &quot;404&quot;, description = &quot;用户不存在&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;User&gt; <span class="title function_">getUserById</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@Parameter(name = &quot;id&quot;, description = &quot;用户ID&quot;, in = ParameterIn.PATH, required = true)</span></span></span><br><span class="line"><span class="params">            <span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> users.get(id);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseEntity.notFound().build();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;创建新用户&quot;, description = &quot;添加新用户到系统中&quot;)</span></span><br><span class="line">    <span class="meta">@ApiResponse(responseCode = &quot;201&quot;, description = &quot;用户创建成功&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;User&gt; <span class="title function_">createUser</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@Parameter(description = &quot;用户信息&quot;, required = true)</span></span></span><br><span class="line"><span class="params">            <span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">newId</span> <span class="operator">=</span> users.size() + <span class="number">1L</span>;</span><br><span class="line">        user.setId(newId);</span><br><span class="line">        users.put(newId, user);</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.status(<span class="number">201</span>).body(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;更新用户信息&quot;, description = &quot;根据ID更新用户信息&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;User&gt; <span class="title function_">updateUser</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@Parameter(name = &quot;id&quot;, description = &quot;用户ID&quot;, in = ParameterIn.PATH, required = true)</span></span></span><br><span class="line"><span class="params">            <span class="meta">@PathVariable</span> Long id,</span></span><br><span class="line"><span class="params">            <span class="meta">@Parameter(description = &quot;更新后的用户信息&quot;, required = true)</span></span></span><br><span class="line"><span class="params">            <span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!users.containsKey(id)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseEntity.notFound().build();</span><br><span class="line">        &#125;</span><br><span class="line">        user.setId(id);</span><br><span class="line">        users.put(id, user);</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;删除用户&quot;, description = &quot;根据ID删除用户&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;Void&gt; <span class="title function_">deleteUser</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@Parameter(name = &quot;id&quot;, description = &quot;用户ID&quot;, in = ParameterIn.PATH, required = true)</span></span></span><br><span class="line"><span class="params">            <span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!users.containsKey(id)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseEntity.notFound().build();</span><br><span class="line">        &#125;</span><br><span class="line">        users.remove(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.noContent().build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四-常用swagger注解说明"><a class="markdownIt-Anchor" href="#四-常用swagger注解说明"></a> 四、常用Swagger注解说明</h3><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td><code>@Tag</code></td><td>用于描述控制器类的作用</td></tr><tr><td><code>@Operation</code></td><td>用于描述接口方法的作用</td></tr><tr><td><code>@Parameter</code></td><td>用于描述方法参数</td></tr><tr><td><code>@Schema</code></td><td>用于描述实体类或属性</td></tr><tr><td><code>@ApiResponse</code></td><td>用于描述接口的响应信息</td></tr><tr><td><code>@RequestBody</code></td><td>用于描述请求体参数</td></tr></tbody></table><h3 id="五-访问swagger-ui"><a class="markdownIt-Anchor" href="#五-访问swagger-ui"></a> 五、访问Swagger UI</h3><p>启动Spring Boot应用后，通过以下地址访问Swagger UI界面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/swagger-ui/index.html</span><br></pre></td></tr></table></figure><p>在这个界面中，你可以：</p><ol><li>查看所有API接口列表</li><li>查看每个接口的详细信息（参数、响应等）</li><li>在线测试API接口</li><li>导出API文档（支持JSON和YAML格式）</li></ol><h3 id="六-生产环境配置"><a class="markdownIt-Anchor" href="#六-生产环境配置"></a> 六、生产环境配置</h3><p>在生产环境中，我们通常需要关闭Swagger文档，可以通过配置文件实现：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-prod.yml</span></span><br><span class="line"><span class="attr">springdoc:</span></span><br><span class="line">  <span class="attr">api-docs:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">swagger-ui:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>然后在启动时指定生产环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar your-app.jar --spring.profiles.active=prod</span><br></pre></td></tr></table></figure><h3 id="七-其它参数配置案例"><a class="markdownIt-Anchor" href="#七-其它参数配置案例"></a> 七、其它参数配置案例</h3><h4 id="1多个路径参数pathvariable"><a class="markdownIt-Anchor" href="#1多个路径参数pathvariable"></a> 1.多个路径参数（@PathVariable）</h4><p>适用于 URL 路径中包含多个占位符的情况（如 /users/{userId}/orders/{orderId}）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/users/&#123;userId&#125;/orders/&#123;orderId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;Order&gt; <span class="title function_">getOrder</span><span class="params">(</span></span><br><span class="line"><span class="params">    // 第一个路径参数：用户ID</span></span><br><span class="line"><span class="params">    <span class="meta">@Parameter(name = &quot;userId&quot;, description = &quot;用户ID&quot;, in = ParameterIn.PATH, required = true)</span></span></span><br><span class="line"><span class="params">    <span class="meta">@PathVariable</span> Long userId,</span></span><br><span class="line"><span class="params">    </span></span><br><span class="line"><span class="params">    // 第二个路径参数：订单ID</span></span><br><span class="line"><span class="params">    <span class="meta">@Parameter(name = &quot;orderId&quot;, description = &quot;订单ID&quot;, in = ParameterIn.PATH, required = true)</span></span></span><br><span class="line"><span class="params">    <span class="meta">@PathVariable</span> Long orderId</span></span><br><span class="line"><span class="params">)</span> &#123;</span><br><span class="line">    <span class="comment">// 业务逻辑：根据 userId 和 orderId 查询订单</span></span><br><span class="line">    <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderService.getOrder(userId, orderId);</span><br><span class="line">    <span class="keyword">return</span> ResponseEntity.ok(order);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>路径中用 {参数名} 定义占位符，方法参数通过 @PathVariable 依次绑定；</li><li>参数名需与路径占位符一致，不一致时需指定 @PathVariable(“占位符名称”)。</li></ul><h4 id="2-多个查询参数requestparam"><a class="markdownIt-Anchor" href="#2-多个查询参数requestparam"></a> 2. 多个查询参数（@RequestParam）</h4><p>适用于 URL 中以 ?key=value&amp;key2=value2 形式传递的参数（如 /users?page=1&amp;size=10&amp;keyword=test）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;Page&lt;User&gt;&gt; <span class="title function_">getUsers</span><span class="params">(</span></span><br><span class="line"><span class="params">    // 分页参数：页码（默认值<span class="number">1</span>）</span></span><br><span class="line"><span class="params">    <span class="meta">@Parameter(name = &quot;page&quot;, description = &quot;页码&quot;, in = ParameterIn.QUERY, required = false)</span></span></span><br><span class="line"><span class="params">    <span class="meta">@RequestParam(defaultValue = &quot;1&quot;)</span> Integer page,</span></span><br><span class="line"><span class="params">    </span></span><br><span class="line"><span class="params">    // 分页参数：每页条数（默认值<span class="number">10</span>）</span></span><br><span class="line"><span class="params">    <span class="meta">@Parameter(name = &quot;size&quot;, description = &quot;每页条数&quot;, in = ParameterIn.QUERY, required = false)</span></span></span><br><span class="line"><span class="params">    <span class="meta">@RequestParam(defaultValue = &quot;10&quot;)</span> Integer size,</span></span><br><span class="line"><span class="params">    </span></span><br><span class="line"><span class="params">    // 查询关键词（非必填）</span></span><br><span class="line"><span class="params">    <span class="meta">@Parameter(name = &quot;keyword&quot;, description = &quot;查询关键词&quot;, in = ParameterIn.QUERY, required = false)</span></span></span><br><span class="line"><span class="params">    <span class="meta">@RequestParam(required = false)</span> String keyword</span></span><br><span class="line"><span class="params">)</span> &#123;</span><br><span class="line">    <span class="comment">// 业务逻辑：分页查询用户</span></span><br><span class="line">    Page&lt;User&gt; userPage = userService.findUsers(page, size, keyword);</span><br><span class="line">    <span class="keyword">return</span> ResponseEntity.ok(userPage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>用 @RequestParam 绑定查询参数，required = false 表示非必填；</li><li>defaultValue 可设置默认值（当参数未传递时使用）。</li></ul><p>需使用 @RequestParam(“file”) MultipartFile file 接收文件，其他普通字段仍用 @RequestParam 或实体类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(value = &quot;/user/upload&quot;, consumes = MediaType.MULTIPART_FORM_DATA_VALUE)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">uploadForm</span><span class="params">(</span></span><br><span class="line"><span class="params">    // 接收文件</span></span><br><span class="line"><span class="params">    <span class="meta">@Parameter(description = &quot;头像文件&quot;)</span></span></span><br><span class="line"><span class="params">    <span class="meta">@RequestParam(&quot;avatar&quot;)</span> MultipartFile avatar,</span></span><br><span class="line"><span class="params">    </span></span><br><span class="line"><span class="params">    // 接收普通表单字段（或用实体类接收）</span></span><br><span class="line"><span class="params">    <span class="meta">@Parameter(description = &quot;用户名&quot;)</span></span></span><br><span class="line"><span class="params">    <span class="meta">@RequestParam</span> String username</span></span><br><span class="line"><span class="params">)</span> &#123;</span><br><span class="line">    <span class="comment">// 处理文件和表单数据</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;文件：&quot;</span> + avatar.getOriginalFilename() + <span class="string">&quot;，用户：&quot;</span> + username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>带文件的表单（multipart/form-data），需使用 @RequestParam(“file”) MultipartFile file 接收文件</li></ul><h4 id="4-复杂参数实体类接收"><a class="markdownIt-Anchor" href="#4-复杂参数实体类接收"></a> 4. 复杂参数（实体类接收）</h4><p>当参数较多（如创建用户时需要 username、age、email 等），推荐用实体类统一接收（适用于 POST/PUT 等请求的请求体）。</p><p>1).定义实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span> <span class="comment">// Lombok注解，自动生成getter/setter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDTO</span> &#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;用户名&quot;, required = true)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;年龄&quot;, required = false)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;邮箱&quot;, required = true)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2).在接口中使用实体类接收参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;User&gt; <span class="title function_">createUser</span><span class="params">(</span></span><br><span class="line"><span class="params">    // 请求体参数：用<span class="meta">@RequestBody</span>绑定实体类</span></span><br><span class="line"><span class="params">    <span class="meta">@Parameter(description = &quot;用户信息&quot;)</span></span></span><br><span class="line"><span class="params">    <span class="meta">@RequestBody</span> <span class="meta">@Valid</span> UserDTO userDTO // <span class="meta">@Valid</span>用于参数校验</span></span><br><span class="line"><span class="params">)</span> &#123;</span><br><span class="line">    <span class="comment">// 业务逻辑：创建用户</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.createUser(userDTO);</span><br><span class="line">    <span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED).body(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>用 @RequestBody 将请求体（通常是 JSON）转换为实体类对象；</li><li>结合 Swagger 的 @ApiModelProperty 注解，可在文档中展示每个字段的说明；</li><li>@Valid 配合 javax.validation 注解（如 @NotBlank）可实现参数校验。</li></ul><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>通过以上步骤，我们完成了Spring Boot 3与Swagger 3的集成，实现了API文档的自动生成和在线测试功能。Swagger不仅能提高团队协作效率，还能作为API的活文档，随着代码的更新而自动更新。</p><p>在实际项目中，可以根据需要进一步定制Swagger配置，如添加全局参数、配置API分组、设置安全认证等，以满足不同场景的需求。</p>]]></content>
    
    
    <summary type="html">Spring Boot 3 集成 Swagger 3 完整指南</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>揭秘Swagger与OpenAPI集成的终极攻略</title>
    <link href="http://www.formeasy.cc/2025/09/07/Springboot/%E6%8F%AD%E7%A7%98Swagger%E4%B8%8EOpenAPI%E9%9B%86%E6%88%90%E7%9A%84%E7%BB%88%E6%9E%81%E6%94%BB%E7%95%A5/"/>
    <id>http://www.formeasy.cc/2025/09/07/Springboot/%E6%8F%AD%E7%A7%98Swagger%E4%B8%8EOpenAPI%E9%9B%86%E6%88%90%E7%9A%84%E7%BB%88%E6%9E%81%E6%94%BB%E7%95%A5/</id>
    <published>2025-09-07T07:52:12.000Z</published>
    <updated>2025-09-07T08:05:00.412Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>演示环境说明：</strong></p><ul><li>开发工具：IDEA 2021.3</li><li>JDK版本： JDK 17（推荐使用 JDK 17 或更高版本，因为 Spring Boot 3.x 系列要求 Java 17，Spring Boot 3.5.4 基于 Spring Framework 6.x 和 Jakarta EE 9，它们都要求至少 JDK 17。）</li><li>Spring Boot版本：3.5.4（于25年7月24日发布）</li><li>Maven版本：3.8.2 （或更高）</li><li>Gradle：（如果使用 Gradle 构建工具的话）：推荐使用 Gradle 7.5 或更高版本，确保与 JDK 17 兼容。</li><li>操作系统：Windows 11</li></ul></blockquote><h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 📝 前言</h3><p>哎呀，说起API文档这个话题，我就忍不住要吐槽一下！🙄 作为一个在代码世界里摸爬滚打多年的老司机，我见过太多因为API文档不规范、不及时更新而导致的&quot;血案&quot;了。前端小伙伴拿着过时的文档调接口，后端同学忙着解释&quot;这个参数已经改了&quot;，测试同学更是一脸懵逼地问&quot;这个接口到底返回什么数据？&quot;😂</p><p>不过呢，随着SpringBoot 3.x的横空出世，特别是它与OpenAPI 3.0的完美融合，这些痛点终于有了优雅的解决方案！今天我就来跟大家好好聊聊这个话题，保证让你看完之后直呼&quot;原来如此&quot;！💡</p><h3 id="springboot-3x与openapi的邂逅"><a class="markdownIt-Anchor" href="#springboot-3x与openapi的邂逅"></a> 🎯 SpringBoot 3.x与OpenAPI的邂逅</h3><p>说到SpringBoot 3.x，那可真是个里程碑式的版本啊！😍 它不仅拥抱了Java 17的新特性，还对整个生态进行了大幅度的升级。而OpenAPI（以前叫Swagger Specification）作为API文档的标准规范，在3.0版本中也是焕然一新！</p><h4 id="什么是openapi-30"><a class="markdownIt-Anchor" href="#什么是openapi-30"></a> 🔍 什么是OpenAPI 3.0？</h4><p>OpenAPI 3.0是一个用于描述REST API的规范标准，它就像是给你的API写了一份&quot;身份证&quot;📋。通过这个规范，你可以清晰地描述：</p><ul><li>API的基本信息（版本、描述等）</li><li>接口路径和HTTP方法</li><li>请求参数和响应格式</li><li>认证方式</li><li>错误码定义</li></ul><p>相比于OpenAPI 2.0（Swagger 2.0），3.0版本带来了不少好东西：</p><ul><li><strong>更灵活的数据类型支持</strong>：支持<code>oneOf</code>、<code>anyOf</code>、<code>allOf</code>等复杂类型组合</li><li><strong>更强大的认证机制</strong>：支持OAuth 2.0、OpenID Connect等现代认证方式</li><li><strong>组件复用</strong>：通过<code>components</code>实现更好的复用性</li><li><strong>回调支持</strong>：支持异步API的回调定义</li></ul><h4 id="springboot-3x的变化"><a class="markdownIt-Anchor" href="#springboot-3x的变化"></a> 🤝 SpringBoot 3.x的变化</h4><p>SpringBoot 3.x最大的变化就是全面拥抱了Jakarta EE！🎉 这意呀着：</p><ul><li>包名从<code>javax.*</code>变成了<code>jakarta.*</code></li><li>最低Java版本要求提升到17</li><li>原生支持GraalVM</li><li>更好的可观测性支持</li></ul><p>这些变化对我们集成OpenAPI有什么影响呢？别急，咱们慢慢道来！</p><h3 id="环境搭建让一切准备就绪"><a class="markdownIt-Anchor" href="#环境搭建让一切准备就绪"></a> 🔧 环境搭建：让一切准备就绪</h3><p>俗话说&quot;工欲善其事，必先利其器&quot;！在开始我们的OpenAPI之旅之前，先把环境搭建好。😎</p><h4 id="项目依赖配置"><a class="markdownIt-Anchor" href="#项目依赖配置"></a> 📦 项目依赖配置</h4><p>首先，我们需要在<code>pom.xml</code>中添加相关依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 </span></span></span><br><span class="line"><span class="string"><span class="tag">         http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot3-openapi-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>SpringBoot 3.x OpenAPI Demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>SpringBoot 3.x 集成 OpenAPI 示例项目<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>17<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">springdoc.version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="name">springdoc.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot Web Starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot Validation --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- SpringDoc OpenAPI UI --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springdoc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springdoc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot Test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>看到这里，可能有小伙伴要问了：&quot;诶，怎么没有看到<code>springfox</code>的依赖啊？&quot;🤔 哈哈，这就是SpringBoot 3.x时代的变化啦！由于SpringFox项目已经很久没有更新了，并且不兼容SpringBoot 3.x的Jakarta命名空间，所以我们选择了更活跃的<code>SpringDoc</code>项目！</p><h4 id="️-基础配置"><a class="markdownIt-Anchor" href="#️-基础配置"></a> ⚙️ 基础配置</h4><p>接下来，在<code>application.yml</code>中添加一些基础配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用基础配置</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/api</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springboot3-openapi-demo</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SpringDoc OpenAPI 配置</span></span><br><span class="line"><span class="attr">springdoc:</span></span><br><span class="line">  <span class="comment"># 指定OpenAPI 3文档的路径，默认为/v3/api-docs</span></span><br><span class="line">  <span class="attr">api-docs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/v3/api-docs</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Swagger UI路径，默认为/swagger-ui.html</span></span><br><span class="line">  <span class="attr">swagger-ui:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/swagger-ui.html</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 设置UI界面的一些配置</span></span><br><span class="line">    <span class="attr">config-url:</span> <span class="string">/v3/api-docs/swagger-config</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/v3/api-docs</span></span><br><span class="line">    <span class="comment"># 支持尝试调用</span></span><br><span class="line">    <span class="attr">try-it-out-enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 显示操作ID</span></span><br><span class="line">    <span class="attr">display-operation-id:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 显示请求持续时间</span></span><br><span class="line">    <span class="attr">display-request-duration:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 缓存时间设置（毫秒）</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">disabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否显示actuator接口</span></span><br><span class="line">  <span class="attr">show-actuator:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志配置</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.example:</span> <span class="string">DEBUG</span></span><br><span class="line">    <span class="attr">org.springframework.web:</span> <span class="string">DEBUG</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&#x27;%d&#123;yyyy-MM-dd HH:mm:ss&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n&#x27;</span></span><br></pre></td></tr></table></figure><p>这个配置可是我精心调试出来的，每一行都有它存在的意义！🎨 比如<code>try-it-out-enabled: true</code>就能让你直接在文档页面测试API，简直不要太爽！</p><h3 id="openapi-30规范详解"><a class="markdownIt-Anchor" href="#openapi-30规范详解"></a> 📖 OpenAPI 3.0规范详解</h3><p>在动手写代码之前，我们先来好好了解一下OpenAPI 3.0的规范结构。毕竟，知己知彼，百战不殆嘛！😄</p><h4 id="️-openapi文档结构"><a class="markdownIt-Anchor" href="#️-openapi文档结构"></a> 🏗️ OpenAPI文档结构</h4><p>一个完整的OpenAPI 3.0文档主要包含以下几个部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一个OpenAPI文档的基本结构示例</span></span><br><span class="line"><span class="attr">openapi:</span> <span class="number">3.0</span><span class="number">.3</span></span><br><span class="line"><span class="attr">info:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&quot;我的牛逼API&quot;</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">&quot;这是一个超级厉害的API文档&quot;</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">&quot;1.0.0&quot;</span></span><br><span class="line">  <span class="attr">contact:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">&quot;API支持团队&quot;</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">&quot;support@example.com&quot;</span></span><br><span class="line"><span class="attr">servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;https://api.example.com/v1&quot;</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">&quot;生产环境&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;https://test-api.example.com/v1&quot;</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">&quot;测试环境&quot;</span></span><br><span class="line"><span class="attr">paths:</span></span><br><span class="line">  <span class="string">/users:</span></span><br><span class="line">    <span class="attr">get:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">&quot;获取用户列表&quot;</span></span><br><span class="line">      <span class="comment"># ...详细定义</span></span><br><span class="line"><span class="attr">components:</span></span><br><span class="line">  <span class="attr">schemas:</span></span><br><span class="line">    <span class="attr">User:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">      <span class="attr">properties:</span></span><br><span class="line">        <span class="attr">id:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">integer</span></span><br><span class="line">        <span class="attr">name:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">string</span></span><br></pre></td></tr></table></figure><h4 id="核心概念解析"><a class="markdownIt-Anchor" href="#核心概念解析"></a> 🎪 核心概念解析</h4><h5 id="1️⃣-info对象"><a class="markdownIt-Anchor" href="#1️⃣-info对象"></a> 1️⃣ Info对象</h5><p>这就是你的API的&quot;名片&quot;，包含了标题、版本、描述等基本信息。</p><h5 id="2️⃣-servers对象"><a class="markdownIt-Anchor" href="#2️⃣-servers对象"></a> 2️⃣ Servers对象</h5><p>定义API服务器的地址，可以有多个环境（开发、测试、生产）。</p><h5 id="3️⃣-paths对象"><a class="markdownIt-Anchor" href="#3️⃣-paths对象"></a> 3️⃣ Paths对象</h5><p>这是重头戏！定义了所有的API路径和操作方法。</p><h5 id="4️⃣-components对象"><a class="markdownIt-Anchor" href="#4️⃣-components对象"></a> 4️⃣ Components对象</h5><p>这是复用的宝库，可以定义通用的数据模型、响应、参数等。</p><p>说到这里，我想起了刚开始学OpenAPI的时候，被这些概念绕得头晕转向的😵💫。不过别担心，咱们马上就通过实际代码来理解这些概念！</p><h3 id="springdoc-openapi的集成实战"><a class="markdownIt-Anchor" href="#springdoc-openapi的集成实战"></a> 🚀 SpringDoc OpenAPI的集成实战</h3><p>好了，理论知识铺垫够了，是时候撸起袖子干活了！💪 让我们从一个简单的用户管理API开始。</p><h4 id="创建基础配置类"><a class="markdownIt-Anchor" href="#创建基础配置类"></a> 🎯 创建基础配置类</h4><p>首先，我们创建一个OpenAPI配置类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.OpenAPI;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.info.Contact;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.info.Info;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.info.License;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.servers.Server;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * OpenAPI 3.0 配置类</span></span><br><span class="line"><span class="comment"> * 这个类负责定义API文档的基本信息，相当于给我们的API做了个自我介绍！</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 你的名字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2024-01-01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenApiConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.application.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String applicationName;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建OpenAPI实例</span></span><br><span class="line"><span class="comment">     * 这个方法就像是在给我们的API写个人简历，把最重要的信息都写上！</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OpenAPI <span class="title function_">customOpenAPI</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OpenAPI</span>()</span><br><span class="line">                <span class="comment">// 设置API基本信息</span></span><br><span class="line">                .info(<span class="keyword">new</span> <span class="title class_">Info</span>()</span><br><span class="line">                        .title(applicationName + <span class="string">&quot; API文档&quot;</span>)</span><br><span class="line">                        .description(<span class="string">&quot;🎉 这是基于SpringBoot 3.x和OpenAPI 3.0构建的超级API文档！&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;\n\n### 主要功能\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;- 🎯 用户管理：增删改查用户信息\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;- 📝 数据验证：完整的参数校验\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;- 🔒 权限控制：基于角色的访问控制\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;- 📊 统计分析：用户行为数据统计\n\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;### 技术栈\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;- SpringBoot 3.2.0\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;- OpenAPI 3.0.3\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;- Jakarta Validation\n&quot;</span> +</span><br><span class="line">                                   <span class="string">&quot;- SpringDoc 2.2.0&quot;</span>)</span><br><span class="line">                        .version(<span class="string">&quot;v1.0.0&quot;</span>)</span><br><span class="line">                        .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>()</span><br><span class="line">                                .name(<span class="string">&quot;开发团队&quot;</span>)</span><br><span class="line">                                .email(<span class="string">&quot;dev-team@example.com&quot;</span>)</span><br><span class="line">                                .url(<span class="string">&quot;https://www.example.com&quot;</span>))</span><br><span class="line">                        .license(<span class="keyword">new</span> <span class="title class_">License</span>()</span><br><span class="line">                                .name(<span class="string">&quot;MIT License&quot;</span>)</span><br><span class="line">                                .url(<span class="string">&quot;https://opensource.org/licenses/MIT&quot;</span>)))</span><br><span class="line">                <span class="comment">// 设置服务器信息</span></span><br><span class="line">                .servers(List.of(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Server</span>()</span><br><span class="line">                                .url(<span class="string">&quot;http://localhost:8080/api&quot;</span>)</span><br><span class="line">                                .description(<span class="string">&quot;本地开发环境 🏠&quot;</span>),</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Server</span>()</span><br><span class="line">                                .url(<span class="string">&quot;https://test-api.example.com&quot;</span>)</span><br><span class="line">                                .description(<span class="string">&quot;测试环境 🧪&quot;</span>),</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Server</span>()</span><br><span class="line">                                .url(<span class="string">&quot;https://api.example.com&quot;</span>)</span><br><span class="line">                                .description(<span class="string">&quot;生产环境 🚀&quot;</span>)</span><br><span class="line">                ));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到这个配置类，是不是感觉很贴心？😊 我特意在描述里用了Markdown格式，这样生成的文档会更加美观！而且还用了emoji，让冷冰冰的技术文档变得生动有趣。</p><h4 id="创建用户实体类"><a class="markdownIt-Anchor" href="#创建用户实体类"></a> 👤 创建用户实体类</h4><p>接下来，我们定义一个用户实体类，这里就能体现OpenAPI的强大之处了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> jakarta.validation.constraints.*;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户实体类</span></span><br><span class="line"><span class="comment"> * 这个类不仅定义了用户的基本属性，还通过注解描述了每个字段的含义</span></span><br><span class="line"><span class="comment"> * 简直就是&quot;人如其名&quot;的完美体现！</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Schema(name = &quot;User&quot;, description = &quot;用户信息实体类&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户ID，系统自动生成&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;1001&quot;, </span></span><br><span class="line"><span class="meta">            accessMode = Schema.AccessMode.READ_ONLY)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户名，必须唯一&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;zhangsan&quot;, </span></span><br><span class="line"><span class="meta">            requiredMode = Schema.RequiredMode.REQUIRED)</span></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;用户名不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Size(min = 3, max = 20, message = &quot;用户名长度必须在3-20字符之间&quot;)</span></span><br><span class="line">    <span class="meta">@Pattern(regexp = &quot;^[a-zA-Z0-9_]+$&quot;, </span></span><br><span class="line"><span class="meta">             message = &quot;用户名只能包含字母、数字和下划线&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户昵称&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;张三&quot;)</span></span><br><span class="line">    <span class="meta">@Size(max = 50, message = &quot;昵称长度不能超过50字符&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;邮箱地址&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;zhangsan@example.com&quot;,</span></span><br><span class="line"><span class="meta">            requiredMode = Schema.RequiredMode.REQUIRED)</span></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;邮箱不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Email(message = &quot;邮箱格式不正确&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;手机号码&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;13812345678&quot;)</span></span><br><span class="line">    <span class="meta">@Pattern(regexp = &quot;^1[3-9]\\d&#123;9&#125;$&quot;, </span></span><br><span class="line"><span class="meta">             message = &quot;手机号码格式不正确&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户年龄&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;25&quot;, </span></span><br><span class="line"><span class="meta">            minimum = &quot;1&quot;, </span></span><br><span class="line"><span class="meta">            maximum = &quot;150&quot;)</span></span><br><span class="line">    <span class="meta">@Min(value = 1, message = &quot;年龄必须大于0&quot;)</span></span><br><span class="line">    <span class="meta">@Max(value = 150, message = &quot;年龄不能超过150&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户性别&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;MALE&quot;, </span></span><br><span class="line"><span class="meta">            allowableValues = &#123;&quot;MALE&quot;, &quot;FEMALE&quot;, &quot;UNKNOWN&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> Gender gender;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户状态&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;ACTIVE&quot;,</span></span><br><span class="line"><span class="meta">            allowableValues = &#123;&quot;ACTIVE&quot;, &quot;INACTIVE&quot;, &quot;BANNED&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> UserStatus status;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;创建时间&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;2024-01-01 12:00:00&quot;,</span></span><br><span class="line"><span class="meta">            accessMode = Schema.AccessMode.READ_ONLY)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;最后更新时间&quot;, </span></span><br><span class="line"><span class="meta">            example = &quot;2024-01-01 12:00:00&quot;,</span></span><br><span class="line"><span class="meta">            accessMode = Schema.AccessMode.READ_ONLY)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 枚举类定义</span></span><br><span class="line">    <span class="meta">@Schema(description = &quot;性别枚举&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">Gender</span> &#123;</span><br><span class="line">        <span class="meta">@Schema(description = &quot;男性&quot;)</span></span><br><span class="line">        MALE,</span><br><span class="line">        <span class="meta">@Schema(description = &quot;女性&quot;)</span> </span><br><span class="line">        FEMALE,</span><br><span class="line">        <span class="meta">@Schema(description = &quot;未知&quot;)</span></span><br><span class="line">        UNKNOWN</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;用户状态枚举&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">UserStatus</span> &#123;</span><br><span class="line">        <span class="meta">@Schema(description = &quot;正常状态&quot;)</span></span><br><span class="line">        ACTIVE,</span><br><span class="line">        <span class="meta">@Schema(description = &quot;非活跃状态&quot;)</span></span><br><span class="line">        INACTIVE,</span><br><span class="line">        <span class="meta">@Schema(description = &quot;被封禁状态&quot;)</span></span><br><span class="line">        BANNED</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造函数、getter、setter方法...</span></span><br><span class="line">    <span class="comment">// 这里省略了这些方法，实际开发中记得加上哦！</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username, String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">        <span class="built_in">this</span>.status = UserStatus.ACTIVE;</span><br><span class="line">        <span class="built_in">this</span>.createTime = LocalDateTime.now();</span><br><span class="line">        <span class="built_in">this</span>.updateTime = LocalDateTime.now();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter and setter methods...</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">getId</span><span class="params">()</span> &#123; <span class="keyword">return</span> id; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Long id)</span> &#123; <span class="built_in">this</span>.id = id; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123; <span class="keyword">return</span> username; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123; <span class="built_in">this</span>.username = username; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getNickname</span><span class="params">()</span> &#123; <span class="keyword">return</span> nickname; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNickname</span><span class="params">(String nickname)</span> &#123; <span class="built_in">this</span>.nickname = nickname; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getEmail</span><span class="params">()</span> &#123; <span class="keyword">return</span> email; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmail</span><span class="params">(String email)</span> &#123; <span class="built_in">this</span>.email = email; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123; <span class="keyword">return</span> phone; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123; <span class="built_in">this</span>.phone = phone; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123; <span class="keyword">return</span> age; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123; <span class="built_in">this</span>.age = age; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Gender <span class="title function_">getGender</span><span class="params">()</span> &#123; <span class="keyword">return</span> gender; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(Gender gender)</span> &#123; <span class="built_in">this</span>.gender = gender; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> UserStatus <span class="title function_">getStatus</span><span class="params">()</span> &#123; <span class="keyword">return</span> status; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(UserStatus status)</span> &#123; <span class="built_in">this</span>.status = status; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">getCreateTime</span><span class="params">()</span> &#123; <span class="keyword">return</span> createTime; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreateTime</span><span class="params">(LocalDateTime createTime)</span> &#123; <span class="built_in">this</span>.createTime = createTime; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">getUpdateTime</span><span class="params">()</span> &#123; <span class="keyword">return</span> updateTime; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUpdateTime</span><span class="params">(LocalDateTime updateTime)</span> &#123; <span class="built_in">this</span>.updateTime = updateTime; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哇，这个实体类是不是很丰富？😍 通过<code>@Schema</code>注解，我们不仅描述了每个字段的含义，还提供了示例值、验证规则等信息。这样生成的API文档就会非常详细和友好！</p><h4 id="️-创建通用响应类"><a class="markdownIt-Anchor" href="#️-创建通用响应类"></a> 🎛️ 创建通用响应类</h4><p>为了让API响应更加规范，我们定义一个通用的响应包装类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一响应结果封装类</span></span><br><span class="line"><span class="comment"> * 这个类就像是给所有API响应穿了一套统一的&quot;制服&quot;，让它们看起来整整齐齐的！</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt; 响应数据的类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Schema(name = &quot;ApiResponse&quot;, description = &quot;统一响应结果&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiResponse</span>&lt;T&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;响应状态码&quot;, example = &quot;200&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;响应消息&quot;, example = &quot;操作成功&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;响应数据&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;响应时间&quot;, example = &quot;2024-01-01 12:00:00&quot;)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime timestamp;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 私有构造函数，通过静态方法创建实例</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ApiResponse</span><span class="params">(Integer code, String message, T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = LocalDateTime.now();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建成功响应</span></span><br><span class="line"><span class="comment">     * 这个方法就像是在说：&quot;耶！一切都很顺利！&quot;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">success</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiResponse</span>&lt;&gt;(<span class="number">200</span>, <span class="string">&quot;操作成功&quot;</span>, data);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">success</span><span class="params">(String message, T data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiResponse</span>&lt;&gt;(<span class="number">200</span>, message, data);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建失败响应</span></span><br><span class="line"><span class="comment">     * 这个方法就像是在说：&quot;哎呀，出了点小问题...&quot;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">error</span><span class="params">(Integer code, String message)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiResponse</span>&lt;&gt;(code, message, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">error</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiResponse</span>&lt;&gt;(<span class="number">500</span>, message, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数验证失败响应</span></span><br><span class="line"><span class="comment">     * 专门处理那些&quot;不听话&quot;的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">badRequest</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiResponse</span>&lt;&gt;(<span class="number">400</span>, message, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 资源未找到响应</span></span><br><span class="line"><span class="comment">     * 当你要找的东西&quot;人间蒸发&quot;了的时候用这个</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">notFound</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiResponse</span>&lt;&gt;(<span class="number">404</span>, message, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter methods</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> &#123; <span class="keyword">return</span> code; &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMessage</span><span class="params">()</span> &#123; <span class="keyword">return</span> message; &#125;</span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getData</span><span class="params">()</span> &#123; <span class="keyword">return</span> data; &#125;</span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">getTimestamp</span><span class="params">()</span> &#123; <span class="keyword">return</span> timestamp; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 判断是否成功的便利方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSuccess</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code != <span class="literal">null</span> &amp;&amp; code == <span class="number">200</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个响应类设计得还不错吧？😏 它不仅提供了统一的响应格式，还通过静态方法让创建响应变得超级简单！</p><h3 id="定制化配置让文档更贴心"><a class="markdownIt-Anchor" href="#定制化配置让文档更贴心"></a> 🎨 定制化配置：让文档更贴心</h3><p>现在我们来创建一个功能完整的用户控制器，这里可是展现OpenAPI威力的地方！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.common.ApiResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.entity.User;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.Operation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.Parameter;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.Parameters;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.enums.ParameterIn;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Content;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.ExampleObject;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.responses.ApiResponses;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.responses.ApiResponse as SwaggerApiResponse;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.tags.Tag;</span><br><span class="line"><span class="keyword">import</span> jakarta.validation.Valid;</span><br><span class="line"><span class="keyword">import</span> jakarta.validation.constraints.Min;</span><br><span class="line"><span class="keyword">import</span> jakarta.validation.constraints.NotNull;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户管理控制器</span></span><br><span class="line"><span class="comment"> * 这个控制器就像是一个用户管理的&quot;大管家&quot;，负责处理所有用户相关的请求</span></span><br><span class="line"><span class="comment"> * 每个方法都经过精心设计，让API文档变得超级友好！</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="meta">@Tag(name = &quot;用户管理&quot;, description = &quot;提供用户的增删改查功能，支持批量操作和高级查询 🎯&quot;)</span></span><br><span class="line"><span class="meta">@Validated</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 模拟数据库，实际项目中应该注入Service</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;User&gt; userDatabase = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Long</span> <span class="variable">idCounter</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造函数中初始化一些测试数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserController</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 添加一些测试数据，让文档演示更生动</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin@example.com&quot;</span>);</span><br><span class="line">        user1.setId(idCounter++);</span><br><span class="line">        user1.setNickname(<span class="string">&quot;超级管理员&quot;</span>);</span><br><span class="line">        user1.setAge(<span class="number">30</span>);</span><br><span class="line">        user1.setGender(User.Gender.MALE);</span><br><span class="line">        user1.setPhone(<span class="string">&quot;13812345678&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;alice&quot;</span>, <span class="string">&quot;alice@example.com&quot;</span>);</span><br><span class="line">        user2.setId(idCounter++);</span><br><span class="line">        user2.setNickname(<span class="string">&quot;小爱同学&quot;</span>);</span><br><span class="line">        user2.setAge(<span class="number">25</span>);</span><br><span class="line">        user2.setGender(User.Gender.FEMALE);</span><br><span class="line">        user2.setPhone(<span class="string">&quot;13987654321&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        userDatabase.add(user1);</span><br><span class="line">        userDatabase.add(user2);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户列表</span></span><br><span class="line"><span class="comment">     * 这个接口支持分页和搜索，功能很强大哦！</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="meta">@Operation(</span></span><br><span class="line"><span class="meta">            summary = &quot;获取用户列表&quot;,</span></span><br><span class="line"><span class="meta">            description = &quot;支持分页查询和关键字搜索的用户列表接口。&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;\n\n**功能特点：**\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 🔍 支持用户名和昵称模糊搜索\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 📄 支持分页查询，避免数据量过大\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- ⚡ 查询性能优化，响应速度快\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 📊 返回总数信息，方便前端分页处理&quot;,</span></span><br><span class="line"><span class="meta">            tags = &#123;&quot;用户查询&quot;&#125;</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@Parameters(&#123;</span></span><br><span class="line"><span class="meta">            @Parameter(</span></span><br><span class="line"><span class="meta">                    name = &quot;page&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;页码，从1开始&quot;,</span></span><br><span class="line"><span class="meta">                    example = &quot;1&quot;,</span></span><br><span class="line"><span class="meta">                    in = ParameterIn.QUERY,</span></span><br><span class="line"><span class="meta">                    schema = @Schema(type = &quot;integer&quot;, minimum = &quot;1&quot;, defaultValue = &quot;1&quot;)</span></span><br><span class="line"><span class="meta">            ),</span></span><br><span class="line"><span class="meta">            @Parameter(</span></span><br><span class="line"><span class="meta">                    name = &quot;size&quot;, </span></span><br><span class="line"><span class="meta">                    description = &quot;每页大小，最大100&quot;,</span></span><br><span class="line"><span class="meta">                    example = &quot;10&quot;,</span></span><br><span class="line"><span class="meta">                    in = ParameterIn.QUERY,</span></span><br><span class="line"><span class="meta">                    schema = @Schema(type = &quot;integer&quot;, minimum = &quot;1&quot;, maximum = &quot;100&quot;, defaultValue = &quot;10&quot;)</span></span><br><span class="line"><span class="meta">            ),</span></span><br><span class="line"><span class="meta">            @Parameter(</span></span><br><span class="line"><span class="meta">                    name = &quot;keyword&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;搜索关键字，支持用户名和昵称模糊搜索&quot;,</span></span><br><span class="line"><span class="meta">                    example = &quot;张三&quot;,</span></span><br><span class="line"><span class="meta">                    in = ParameterIn.QUERY,</span></span><br><span class="line"><span class="meta">                    schema = @Schema(type = &quot;string&quot;)</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="meta">@ApiResponses(&#123;</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;200&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;查询成功&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            schema = @Schema(implementation = ApiResponse.class),</span></span><br><span class="line"><span class="meta">                            examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    name = &quot;成功示例&quot;,</span></span><br><span class="line"><span class="meta">                                    summary = &quot;查询成功的响应示例&quot;,</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;code&quot;: 200,</span></span><br><span class="line"><span class="meta">                                              &quot;message&quot;: &quot;查询成功&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;data&quot;: &#123;</span></span><br><span class="line"><span class="meta">                                                &quot;list&quot;: [</span></span><br><span class="line"><span class="meta">                                                  &#123;</span></span><br><span class="line"><span class="meta">                                                    &quot;id&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                    &quot;username&quot;: &quot;admin&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;nickname&quot;: &quot;超级管理员&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;email&quot;: &quot;admin@example.com&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;age&quot;: 30,</span></span><br><span class="line"><span class="meta">                                                    &quot;gender&quot;: &quot;MALE&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;status&quot;: &quot;ACTIVE&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;createTime&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                                  &#125;</span></span><br><span class="line"><span class="meta">                                                ],</span></span><br><span class="line"><span class="meta">                                                &quot;total&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                &quot;page&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                &quot;size&quot;: 10</span></span><br><span class="line"><span class="meta">                                              &#125;,</span></span><br><span class="line"><span class="meta">                                              &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            )</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            ),</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;400&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;参数错误&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            schema = @Schema(implementation = ApiResponse.class)</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;PageResult&lt;User&gt;&gt;&gt; <span class="title function_">getUsers</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(defaultValue = &quot;1&quot;)</span> <span class="meta">@Min(value = 1, message = &quot;页码必须大于0&quot;)</span> Integer page,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(defaultValue = &quot;10&quot;)</span> <span class="meta">@Min(value = 1, message = &quot;页大小必须大于0&quot;)</span> Integer size,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false)</span> String keyword)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 模拟分页查询逻辑</span></span><br><span class="line">        List&lt;User&gt; filteredUsers = userDatabase;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 关键字搜索</span></span><br><span class="line">        <span class="keyword">if</span> (keyword != <span class="literal">null</span> &amp;&amp; !keyword.trim().isEmpty()) &#123;</span><br><span class="line">            filteredUsers = userDatabase.stream()</span><br><span class="line">                    .filter(user -&gt; user.getUsername().contains(keyword) || </span><br><span class="line">                                   (user.getNickname() != <span class="literal">null</span> &amp;&amp; user.getNickname().contains(keyword)))</span><br><span class="line">                    .toList();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 分页处理</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> (page - <span class="number">1</span>) * size;</span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> Math.min(start + size, filteredUsers.size());</span><br><span class="line">        List&lt;User&gt; pagedUsers = filteredUsers.subList(start, end);</span><br><span class="line">        </span><br><span class="line">        PageResult&lt;User&gt; result = <span class="keyword">new</span> <span class="title class_">PageResult</span>&lt;&gt;(pagedUsers, (<span class="type">long</span>) filteredUsers.size(), page, size);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(ApiResponse.success(<span class="string">&quot;查询成功&quot;</span>, result));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ID获取用户详情</span></span><br><span class="line"><span class="comment">     * 通过用户ID获取详细信息，找不到会返回404</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(</span></span><br><span class="line"><span class="meta">            summary = &quot;获取用户详情&quot;,</span></span><br><span class="line"><span class="meta">            description = &quot;根据用户ID获取用户的详细信息。\n\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;**注意事项：**\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 用户ID必须是有效的正整数\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 如果用户不存在，会返回404错误\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 返回的数据包含用户的所有可见字段&quot;,</span></span><br><span class="line"><span class="meta">            tags = &#123;&quot;用户查询&quot;&#125;</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@Parameter(</span></span><br><span class="line"><span class="meta">            name = &quot;id&quot;,</span></span><br><span class="line"><span class="meta">            description = &quot;用户ID&quot;,</span></span><br><span class="line"><span class="meta">            example = &quot;1&quot;,</span></span><br><span class="line"><span class="meta">            required = true,</span></span><br><span class="line"><span class="meta">            in = ParameterIn.PATH,</span></span><br><span class="line"><span class="meta">            schema = @Schema(type = &quot;integer&quot;, format = &quot;int64&quot;, minimum = &quot;1&quot;)</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@ApiResponses(&#123;</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;200&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;获取成功&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            schema = @Schema(implementation = ApiResponse.class),</span></span><br><span class="line"><span class="meta">                            examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    name = &quot;用户详情&quot;,</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;code&quot;: 200,</span></span><br><span class="line"><span class="meta">                                              &quot;message&quot;: &quot;获取成功&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;data&quot;: &#123;</span></span><br><span class="line"><span class="meta">                                                &quot;id&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                &quot;username&quot;: &quot;admin&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;nickname&quot;: &quot;超级管理员&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;email&quot;: &quot;admin@example.com&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;phone&quot;: &quot;13812345678&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;age&quot;: 30,</span></span><br><span class="line"><span class="meta">                                                &quot;gender&quot;: &quot;MALE&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;status&quot;: &quot;ACTIVE&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;createTime&quot;: &quot;2024-01-01 12:00:00&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;updateTime&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                              &#125;,</span></span><br><span class="line"><span class="meta">                                              &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            )</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            ),</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;404&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;用户不存在&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;code&quot;: 404,</span></span><br><span class="line"><span class="meta">                                              &quot;message&quot;: &quot;用户不存在&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;data&quot;: null,</span></span><br><span class="line"><span class="meta">                                              &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            )</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;User&gt;&gt; <span class="title function_">getUserById</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@PathVariable</span> <span class="meta">@NotNull(message = &quot;用户ID不能为空&quot;)</span> Long id)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        Optional&lt;User&gt; userOpt = userDatabase.stream()</span><br><span class="line">                .filter(user -&gt; user.getId().equals(id))</span><br><span class="line">                .findFirst();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (userOpt.isPresent()) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseEntity.ok(ApiResponse.success(<span class="string">&quot;获取成功&quot;</span>, userOpt.get()));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND)</span><br><span class="line">                    .body(ApiResponse.notFound(<span class="string">&quot;用户不存在&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建新用户</span></span><br><span class="line"><span class="comment">     * 这个接口可以创建一个全新的用户，支持完整的数据验证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="meta">@Operation(</span></span><br><span class="line"><span class="meta">            summary = &quot;创建用户&quot;,</span></span><br><span class="line"><span class="meta">            description = &quot;创建一个新的用户账户。\n\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;**验证规则：**\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 用户名：3-20字符，只能包含字母、数字和下划线\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 邮箱：必须是有效的邮箱格式\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 手机号：符合中国大陆手机号格式\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 年龄：1-150之间的整数\n\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;**注意：**\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 用户名和邮箱必须唯一\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 创建成功后会自动设置为ACTIVE状态\n&quot; +</span></span><br><span class="line"><span class="meta">                         &quot;- 系统会自动设置创建时间和更新时间&quot;,</span></span><br><span class="line"><span class="meta">            tags = &#123;&quot;用户管理&quot;&#125;</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@io</span>.swagger.v3.oas.annotations.parameters.RequestBody(</span><br><span class="line">            description = <span class="string">&quot;用户信息&quot;</span>,</span><br><span class="line">            required = <span class="literal">true</span>,</span><br><span class="line">            content = <span class="meta">@Content(</span></span><br><span class="line"><span class="meta">                    mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                    schema = @Schema(implementation = User.class),</span></span><br><span class="line"><span class="meta">                    examples = &#123;</span></span><br><span class="line"><span class="meta">                            @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    name = &quot;基础用户&quot;,</span></span><br><span class="line"><span class="meta">                                    summary = &quot;创建基础用户&quot;,</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;username&quot;: &quot;newuser&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;nickname&quot;: &quot;新用户&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;email&quot;: &quot;newuser@example.com&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;phone&quot;: &quot;13911112222&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;age&quot;: 28,</span></span><br><span class="line"><span class="meta">                                              &quot;gender&quot;: &quot;FEMALE&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            ),</span></span><br><span class="line"><span class="meta">                            @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    name = &quot;完整用户&quot;,</span></span><br><span class="line"><span class="meta">                                    summary = &quot;创建完整信息用户&quot;,</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;username&quot;: &quot;fulluser&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;nickname&quot;: &quot;完整用户&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;email&quot;: &quot;fulluser@example.com&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;phone&quot;: &quot;13800138000&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;age&quot;: 35,</span></span><br><span class="line"><span class="meta">                                              &quot;gender&quot;: &quot;MALE&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            )</span></span><br><span class="line"><span class="meta">                    &#125;</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line">    )</span><br><span class="line">    <span class="meta">@ApiResponses(&#123;</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;201&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;创建成功&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            schema = @Schema(implementation = ApiResponse.class)</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            ),</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;400&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;参数验证失败&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;code&quot;: 400,</span></span><br><span class="line"><span class="meta">                                              &quot;message&quot;: &quot;用户名已存在&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;data&quot;: null,</span></span><br><span class="line"><span class="meta">                                              &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            )</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;User&gt;&gt; <span class="title function_">createUser</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查用户名是否已存在</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">usernameExists</span> <span class="operator">=</span> userDatabase.stream()</span><br><span class="line">                .anyMatch(u -&gt; u.getUsername().equals(user.getUsername()));</span><br><span class="line">        <span class="keyword">if</span> (usernameExists) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST)</span><br><span class="line">                    .body(ApiResponse.badRequest(<span class="string">&quot;用户名已存在&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查邮箱是否已存在</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">emailExists</span> <span class="operator">=</span> userDatabase.stream()</span><br><span class="line">                .anyMatch(u -&gt; u.getEmail().equals(user.getEmail()));</span><br><span class="line">        <span class="keyword">if</span> (emailExists) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST)</span><br><span class="line">                    .body(ApiResponse.badRequest(<span class="string">&quot;邮箱已存在&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置用户信息</span></span><br><span class="line">        user.setId(idCounter++);</span><br><span class="line">        user.setStatus(User.UserStatus.ACTIVE);</span><br><span class="line">        user.setCreateTime(LocalDateTime.now());</span><br><span class="line">        user.setUpdateTime(LocalDateTime.now());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 保存到&quot;数据库&quot;</span></span><br><span class="line">        userDatabase.add(user);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED)</span><br><span class="line">                .body(ApiResponse.success(<span class="string">&quot;用户创建成功&quot;</span>, user));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 分页结果包装类</span></span><br><span class="line">    <span class="meta">@Schema(name = &quot;PageResult&quot;, description = &quot;分页查询结果&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">PageResult</span>&lt;T&gt; &#123;</span><br><span class="line">        <span class="meta">@Schema(description = &quot;数据列表&quot;)</span></span><br><span class="line">        <span class="keyword">private</span> List&lt;T&gt; list;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;总记录数&quot;, example = &quot;100&quot;)</span></span><br><span class="line">        <span class="keyword">private</span> Long total;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;当前页码&quot;, example = &quot;1&quot;)</span></span><br><span class="line">        <span class="keyword">private</span> Integer page;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;每页大小&quot;, example = &quot;10&quot;)</span></span><br><span class="line">        <span class="keyword">private</span> Integer size;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;总页数&quot;, example = &quot;10&quot;)</span></span><br><span class="line">        <span class="keyword">private</span> Integer totalPages;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;是否有下一页&quot;, example = &quot;true&quot;)</span></span><br><span class="line">        <span class="keyword">private</span> Boolean hasNext;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;是否有上一页&quot;, example = &quot;false&quot;)</span></span><br><span class="line">        <span class="keyword">private</span> Boolean hasPrev;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">PageResult</span><span class="params">(List&lt;T&gt; list, Long total, Integer page, Integer size)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.list = list;</span><br><span class="line">            <span class="built_in">this</span>.total = total;</span><br><span class="line">            <span class="built_in">this</span>.page = page;</span><br><span class="line">            <span class="built_in">this</span>.size = size;</span><br><span class="line">            <span class="built_in">this</span>.totalPages = (<span class="type">int</span>) Math.ceil((<span class="type">double</span>) total / size);</span><br><span class="line">            <span class="built_in">this</span>.hasNext = page &lt; totalPages;</span><br><span class="line">            <span class="built_in">this</span>.hasPrev = page &gt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// getter methods</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">getList</span><span class="params">()</span> &#123; <span class="keyword">return</span> list; &#125;</span><br><span class="line">        <span class="keyword">public</span> Long <span class="title function_">getTotal</span><span class="params">()</span> &#123; <span class="keyword">return</span> total; &#125;</span><br><span class="line">        <span class="keyword">public</span> Integer <span class="title function_">getPage</span><span class="params">()</span> &#123; <span class="keyword">return</span> page; &#125;</span><br><span class="line">        <span class="keyword">public</span> Integer <span class="title function_">getSize</span><span class="params">()</span> &#123; <span class="keyword">return</span> size; &#125;</span><br><span class="line">        <span class="keyword">public</span> Integer <span class="title function_">getTotalPages</span><span class="params">()</span> &#123; <span class="keyword">return</span> totalPages; &#125;</span><br><span class="line">        <span class="keyword">public</span> Boolean <span class="title function_">getHasNext</span><span class="params">()</span> &#123; <span class="keyword">return</span> hasNext; &#125;</span><br><span class="line">        <span class="keyword">public</span> Boolean <span class="title function_">getHasPrev</span><span class="params">()</span> &#123; <span class="keyword">return</span> hasPrev; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哇塞，这个控制器是不是很详细？😄 每个接口都有完整的文档说明、参数描述、响应示例等。通过这样的注解配置，生成的API文档会非常专业和友好！</p><h3 id="高级特性探索"><a class="markdownIt-Anchor" href="#高级特性探索"></a> 💎 高级特性探索</h3><p>好了，基础功能我们已经搞定了，现在让我们来探索一些更高级的特性！这些功能可是让我当初惊呼&quot;卧槽，还能这样玩？&quot;的存在！🤯</p><h4 id="安全认证集成"><a class="markdownIt-Anchor" href="#安全认证集成"></a> 🔐 安全认证集成</h4><p>在实际项目中，API安全是不可忽视的。让我们看看如何在OpenAPI中集成JWT认证：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.Components;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.OpenAPI;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.security.SecurityRequirement;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.models.security.SecurityScheme;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * API安全配置</span></span><br><span class="line"><span class="comment"> * 这个配置让我们的API文档支持JWT认证，再也不用担心接口裸奔了！</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenApiSecurityConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">BEARER_TOKEN_SECURITY_SCHEME</span> <span class="operator">=</span> <span class="string">&quot;bearerAuth&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OpenAPI <span class="title function_">openAPIWithSecurity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OpenAPI</span>()</span><br><span class="line">                .addSecurityItem(<span class="keyword">new</span> <span class="title class_">SecurityRequirement</span>()</span><br><span class="line">                        .addList(BEARER_TOKEN_SECURITY_SCHEME))</span><br><span class="line">                .components(<span class="keyword">new</span> <span class="title class_">Components</span>()</span><br><span class="line">                        .addSecuritySchemes(BEARER_TOKEN_SECURITY_SCHEME,</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">SecurityScheme</span>()</span><br><span class="line">                                        .name(BEARER_TOKEN_SECURITY_SCHEME)</span><br><span class="line">                                        .type(SecurityScheme.Type.HTTP)</span><br><span class="line">                                        .scheme(<span class="string">&quot;bearer&quot;</span>)</span><br><span class="line">                                        .bearerFormat(<span class="string">&quot;JWT&quot;</span>)</span><br><span class="line">                                        .in(SecurityScheme.In.HEADER)</span><br><span class="line">                                        .description(<span class="string">&quot;输入JWT token，格式：Bearer &#123;token&#125;&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在需要认证的接口上添加安全注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="meta">@Tag(name = &quot;管理员接口&quot;, description = &quot;需要管理员权限的高级功能 👑&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AdminController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/users&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(</span></span><br><span class="line"><span class="meta">            summary = &quot;管理员获取所有用户&quot;,</span></span><br><span class="line"><span class="meta">            description = &quot;只有管理员才能访问的用户列表接口，包含敏感信息&quot;,</span></span><br><span class="line"><span class="meta">            security = @SecurityRequirement(name = &quot;bearerAuth&quot;)</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@SecurityRequirement(name = &quot;bearerAuth&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;List&lt;User&gt;&gt;&gt; <span class="title function_">getAllUsersForAdmin</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 管理员专用接口逻辑</span></span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(ApiResponse.success(<span class="string">&quot;获取成功&quot;</span>, <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="自定义注解与切面"><a class="markdownIt-Anchor" href="#自定义注解与切面"></a> 🎪 自定义注解与切面</h4><p>有时候我们想为某些特殊的接口添加统一的文档说明，这时候自定义注解就派上用场了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.responses.ApiResponse;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.responses.ApiResponses;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Content;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.ExampleObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 标准API响应注解</span></span><br><span class="line"><span class="comment"> * 这个注解就像是给接口贴上了&quot;质量保证&quot;的标签，统一了响应格式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@ApiResponses(&#123;</span></span><br><span class="line"><span class="meta">        @ApiResponse(</span></span><br><span class="line"><span class="meta">                responseCode = &quot;200&quot;,</span></span><br><span class="line"><span class="meta">                description = &quot;操作成功&quot;,</span></span><br><span class="line"><span class="meta">                content = @Content(</span></span><br><span class="line"><span class="meta">                        mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                        examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                name = &quot;成功响应&quot;,</span></span><br><span class="line"><span class="meta">                                value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                        &#123;</span></span><br><span class="line"><span class="meta">                                          &quot;code&quot;: 200,</span></span><br><span class="line"><span class="meta">                                          &quot;message&quot;: &quot;操作成功&quot;,</span></span><br><span class="line"><span class="meta">                                          &quot;data&quot;: &#123;&#125;,</span></span><br><span class="line"><span class="meta">                                          &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                        &#125;</span></span><br><span class="line"><span class="meta">                                        &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                )</span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @ApiResponse(</span></span><br><span class="line"><span class="meta">                responseCode = &quot;400&quot;,</span></span><br><span class="line"><span class="meta">                description = &quot;参数错误&quot;,</span></span><br><span class="line"><span class="meta">                content = @Content(</span></span><br><span class="line"><span class="meta">                        mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                        examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                        &#123;</span></span><br><span class="line"><span class="meta">                                          &quot;code&quot;: 400,</span></span><br><span class="line"><span class="meta">                                          &quot;message&quot;: &quot;参数验证失败&quot;,</span></span><br><span class="line"><span class="meta">                                          &quot;data&quot;: null,</span></span><br><span class="line"><span class="meta">                                          &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                        &#125;</span></span><br><span class="line"><span class="meta">                                        &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                )</span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @ApiResponse(</span></span><br><span class="line"><span class="meta">                responseCode = &quot;500&quot;,</span></span><br><span class="line"><span class="meta">                description = &quot;服务器内部错误&quot;,</span></span><br><span class="line"><span class="meta">                content = @Content(</span></span><br><span class="line"><span class="meta">                        mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                        examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                        &#123;</span></span><br><span class="line"><span class="meta">                                          &quot;code&quot;: 500,</span></span><br><span class="line"><span class="meta">                                          &quot;message&quot;: &quot;服务器开小差了，请稍后重试&quot;,</span></span><br><span class="line"><span class="meta">                                          &quot;data&quot;: null,</span></span><br><span class="line"><span class="meta">                                          &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                        &#125;</span></span><br><span class="line"><span class="meta">                                        &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                )</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> StandardApiResponses &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否包含认证相关的错误响应</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">includeAuth</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用起来超级简单：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/profile&quot;)</span></span><br><span class="line"><span class="meta">@StandardApiResponses(includeAuth = true)</span></span><br><span class="line"><span class="meta">@Operation(summary = &quot;获取个人资料&quot;, description = &quot;获取当前登录用户的个人资料信息&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;User&gt;&gt; <span class="title function_">getProfile</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 接口逻辑</span></span><br><span class="line">    <span class="keyword">return</span> ResponseEntity.ok(ApiResponse.success(<span class="string">&quot;获取成功&quot;</span>, <span class="keyword">new</span> <span class="title class_">User</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多环境配置"><a class="markdownIt-Anchor" href="#多环境配置"></a> 🌈 多环境配置</h4><p>不同环境下，我们的API文档可能需要不同的配置。来看看如何优雅地处理这种情况：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * OpenAPI配置属性类</span></span><br><span class="line"><span class="comment"> * 通过配置文件来控制API文档的行为，灵活性Max！</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;app.openapi&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenApiProperties</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">enabled</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">title</span> <span class="operator">=</span> <span class="string">&quot;API文档&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> <span class="string">&quot;这是一个很棒的API&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">version</span> <span class="operator">=</span> <span class="string">&quot;v1.0.0&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Contact</span> <span class="variable">contact</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Contact</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">License</span> <span class="variable">license</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">License</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 嵌套配置类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Contact</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;开发团队&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> <span class="string">&quot;dev@example.com&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;https://www.example.com&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// getter and setter...</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123; <span class="built_in">this</span>.name = name; &#125;</span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getEmail</span><span class="params">()</span> &#123; <span class="keyword">return</span> email; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmail</span><span class="params">(String email)</span> &#123; <span class="built_in">this</span>.email = email; &#125;</span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getUrl</span><span class="params">()</span> &#123; <span class="keyword">return</span> url; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUrl</span><span class="params">(String url)</span> &#123; <span class="built_in">this</span>.url = url; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">License</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;MIT&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;https://opensource.org/licenses/MIT&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// getter and setter...</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123; <span class="built_in">this</span>.name = name; &#125;</span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getUrl</span><span class="params">()</span> &#123; <span class="keyword">return</span> url; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUrl</span><span class="params">(String url)</span> &#123; <span class="built_in">this</span>.url = url; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 主类的getter and setter</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEnabled</span><span class="params">()</span> &#123; <span class="keyword">return</span> enabled; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEnabled</span><span class="params">(<span class="type">boolean</span> enabled)</span> &#123; <span class="built_in">this</span>.enabled = enabled; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTitle</span><span class="params">()</span> &#123; <span class="keyword">return</span> title; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTitle</span><span class="params">(String title)</span> &#123; <span class="built_in">this</span>.title = title; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDescription</span><span class="params">()</span> &#123; <span class="keyword">return</span> description; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDescription</span><span class="params">(String description)</span> &#123; <span class="built_in">this</span>.description = description; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getVersion</span><span class="params">()</span> &#123; <span class="keyword">return</span> version; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVersion</span><span class="params">(String version)</span> &#123; <span class="built_in">this</span>.version = version; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Contact <span class="title function_">getContact</span><span class="params">()</span> &#123; <span class="keyword">return</span> contact; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setContact</span><span class="params">(Contact contact)</span> &#123; <span class="built_in">this</span>.contact = contact; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> License <span class="title function_">getLicense</span><span class="params">()</span> &#123; <span class="keyword">return</span> license; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLicense</span><span class="params">(License license)</span> &#123; <span class="built_in">this</span>.license = license; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在不同环境的配置文件中设置不同的值：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># application-dev.yml (开发环境)</span><br><span class="line">app:</span><br><span class="line">  openapi:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    title: <span class="string">&quot;开发环境API文档 🛠️&quot;</span></span><br><span class="line">    description: <span class="string">&quot;这是开发环境的API，随时可能变动，请谨慎使用&quot;</span></span><br><span class="line">    version: <span class="string">&quot;v1.0.0-dev&quot;</span></span><br><span class="line">    contact:</span><br><span class="line">      name: <span class="string">&quot;开发团队&quot;</span></span><br><span class="line">      email: <span class="string">&quot;dev@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"># application-prod.yml (生产环境)</span><br><span class="line">app:</span><br><span class="line">  openapi:</span><br><span class="line">    enabled: <span class="literal">false</span>  # 生产环境关闭文档</span><br><span class="line">    title: <span class="string">&quot;生产环境API&quot;</span></span><br><span class="line">    description: <span class="string">&quot;生产环境API文档&quot;</span></span><br><span class="line">    version: <span class="string">&quot;v1.0.0&quot;</span></span><br></pre></td></tr></table></figure><p>这样配置之后，生产环境就不会暴露API文档了，安全性大大提升！😎</p><h3 id="️-实际项目应用案例"><a class="markdownIt-Anchor" href="#️-实际项目应用案例"></a> 🛠️ 实际项目应用案例</h3><p>理论说了这么多，让我们来看一个更贴近实际项目的完整示例！假设我们正在开发一个电商系统的商品管理模块。</p><h4 id="️-商品管理模块"><a class="markdownIt-Anchor" href="#️-商品管理模块"></a> 🛍️ 商品管理模块</h4><p>首先定义商品实体：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.ecommerce.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> jakarta.validation.constraints.*;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Schema(name = &quot;Product&quot;, description = &quot;商品信息&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;商品ID&quot;, example = &quot;1&quot;, accessMode = Schema.AccessMode.READ_ONLY)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;商品名称&quot;, example = &quot;iPhone 15 Pro Max&quot;, requiredMode = Schema.RequiredMode.REQUIRED)</span></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;商品名称不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Size(min = 2, max = 100, message = &quot;商品名称长度必须在2-100字符之间&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;商品描述&quot;, example = &quot;苹果最新旗舰手机，性能强悍，拍照出色&quot;)</span></span><br><span class="line">    <span class="meta">@Size(max = 1000, message = &quot;商品描述不能超过1000字符&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;商品价格&quot;, example = &quot;9999.00&quot;, requiredMode = Schema.RequiredMode.REQUIRED)</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;商品价格不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@DecimalMin(value = &quot;0.01&quot;, message = &quot;商品价格必须大于0.01&quot;)</span></span><br><span class="line">    <span class="meta">@DecimalMax(value = &quot;999999.99&quot;, message = &quot;商品价格不能超过999999.99&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;库存数量&quot;, example = &quot;100&quot;, requiredMode = Schema.RequiredMode.REQUIRED)</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;库存数量不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Min(value = 0, message = &quot;库存数量不能为负数&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer stock;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;商品分类ID&quot;, example = &quot;1&quot;, requiredMode = Schema.RequiredMode.REQUIRED)</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;商品分类不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long categoryId;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;商品分类名称&quot;, example = &quot;数码产品&quot;, accessMode = Schema.AccessMode.READ_ONLY)</span></span><br><span class="line">    <span class="keyword">private</span> String categoryName;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;商品图片URL列表&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; imageUrls;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;商品状态&quot;, example = &quot;ACTIVE&quot;, allowableValues = &#123;&quot;ACTIVE&quot;, &quot;INACTIVE&quot;, &quot;OUT_OF_STOCK&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> ProductStatus status;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;创建时间&quot;, accessMode = Schema.AccessMode.READ_ONLY)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Schema(description = &quot;更新时间&quot;, accessMode = Schema.AccessMode.READ_ONLY)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 商品状态枚举</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ProductStatus</span> &#123;</span><br><span class="line">        <span class="meta">@Schema(description = &quot;正常销售&quot;)</span></span><br><span class="line">        ACTIVE,</span><br><span class="line">        <span class="meta">@Schema(description = &quot;已下架&quot;)</span></span><br><span class="line">        INACTIVE,</span><br><span class="line">        <span class="meta">@Schema(description = &quot;缺货&quot;)</span></span><br><span class="line">        OUT_OF_STOCK</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造函数和getter/setter方法... (省略)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Product</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter and setter methods</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">getId</span><span class="params">()</span> &#123; <span class="keyword">return</span> id; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Long id)</span> &#123; <span class="built_in">this</span>.id = id; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123; <span class="built_in">this</span>.name = name; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDescription</span><span class="params">()</span> &#123; <span class="keyword">return</span> description; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDescription</span><span class="params">(String description)</span> &#123; <span class="built_in">this</span>.description = description; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getPrice</span><span class="params">()</span> &#123; <span class="keyword">return</span> price; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(BigDecimal price)</span> &#123; <span class="built_in">this</span>.price = price; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getStock</span><span class="params">()</span> &#123; <span class="keyword">return</span> stock; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStock</span><span class="params">(Integer stock)</span> &#123; <span class="built_in">this</span>.stock = stock; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">getCategoryId</span><span class="params">()</span> &#123; <span class="keyword">return</span> categoryId; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCategoryId</span><span class="params">(Long categoryId)</span> &#123; <span class="built_in">this</span>.categoryId = categoryId; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCategoryName</span><span class="params">()</span> &#123; <span class="keyword">return</span> categoryName; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCategoryName</span><span class="params">(String categoryName)</span> &#123; <span class="built_in">this</span>.categoryName = categoryName; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">getImageUrls</span><span class="params">()</span> &#123; <span class="keyword">return</span> imageUrls; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setImageUrls</span><span class="params">(List&lt;String&gt; imageUrls)</span> &#123; <span class="built_in">this</span>.imageUrls = imageUrls; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> ProductStatus <span class="title function_">getStatus</span><span class="params">()</span> &#123; <span class="keyword">return</span> status; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(ProductStatus status)</span> &#123; <span class="built_in">this</span>.status = status; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">getCreateTime</span><span class="params">()</span> &#123; <span class="keyword">return</span> createTime; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreateTime</span><span class="params">(LocalDateTime createTime)</span> &#123; <span class="built_in">this</span>.createTime = createTime; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">getUpdateTime</span><span class="params">()</span> &#123; <span class="keyword">return</span> updateTime; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUpdateTime</span><span class="params">(LocalDateTime updateTime)</span> &#123; <span class="built_in">this</span>.updateTime = updateTime; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="商品控制器"><a class="markdownIt-Anchor" href="#商品控制器"></a> 🎯 商品控制器</h4><p>然后创建一个功能丰富的商品控制器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.ecommerce.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.common.ApiResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.ecommerce.entity.Product;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.*;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Content;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.ExampleObject;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.responses.ApiResponses;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.responses.ApiResponse as SwaggerApiResponse;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.tags.Tag;</span><br><span class="line"><span class="keyword">import</span> jakarta.validation.Valid;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品管理控制器</span></span><br><span class="line"><span class="comment"> * 电商系统的核心模块之一，负责商品的全生命周期管理</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 这个控制器就像是商品的&quot;生命管家&quot;，从商品的诞生到下架，</span></span><br><span class="line"><span class="comment"> * 每一个环节都在这里得到精心呵护！🛍️</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/products&quot;)</span></span><br><span class="line"><span class="meta">@Tag(name = &quot;商品管理&quot;, description = &quot;电商系统商品管理核心接口，支持CRUD、搜索、库存管理等功能 🛒&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品搜索接口</span></span><br><span class="line"><span class="comment">     * 这个接口功能强大，支持多维度搜索，简直是商品查找的&quot;瑞士军刀&quot;！</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/search&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(</span></span><br><span class="line"><span class="meta">            summary = &quot;商品搜索&quot;,</span></span><br><span class="line"><span class="meta">            description = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                    支持多维度商品搜索的强大接口。</span></span><br><span class="line"><span class="meta">                    </span></span><br><span class="line"><span class="meta">                    ### 🔍 搜索功能</span></span><br><span class="line"><span class="meta">                    - **关键字搜索**: 支持商品名称、描述模糊搜索</span></span><br><span class="line"><span class="meta">                    - **分类筛选**: 按商品分类进行筛选</span></span><br><span class="line"><span class="meta">                    - **价格区间**: 支持最低价和最高价筛选</span></span><br><span class="line"><span class="meta">                    - **状态筛选**: 支持按商品状态筛选</span></span><br><span class="line"><span class="meta">                    - **排序功能**: 支持按价格、创建时间、销量等排序</span></span><br><span class="line"><span class="meta">                    </span></span><br><span class="line"><span class="meta">                    ### 💡 使用技巧</span></span><br><span class="line"><span class="meta">                    - 多个条件可以组合使用，系统会智能匹配</span></span><br><span class="line"><span class="meta">                    - 支持分页查询，避免数据量过大影响性能</span></span><br><span class="line"><span class="meta">                    - 默认按相关度排序，也可以指定其他排序方式</span></span><br><span class="line"><span class="meta">                    &quot;&quot;&quot;,</span></span><br><span class="line"><span class="meta">            tags = &#123;&quot;商品查询&quot;&#125;</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@Parameters(&#123;</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;keyword&quot;, description = &quot;搜索关键字&quot;, example = &quot;iPhone&quot;),</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;categoryId&quot;, description = &quot;商品分类ID&quot;, example = &quot;1&quot;),</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;minPrice&quot;, description = &quot;最低价格&quot;, example = &quot;100.00&quot;),</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;maxPrice&quot;, description = &quot;最高价格&quot;, example = &quot;10000.00&quot;),</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;status&quot;, description = &quot;商品状态&quot;, example = &quot;ACTIVE&quot;),</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;sortBy&quot;, description = &quot;排序字段&quot;, example = &quot;price&quot;, </span></span><br><span class="line"><span class="meta">                      schema = @Schema(allowableValues = &#123;&quot;price&quot;, &quot;createTime&quot;, &quot;sales&quot;&#125;)),</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;sortOrder&quot;, description = &quot;排序方向&quot;, example = &quot;asc&quot;,</span></span><br><span class="line"><span class="meta">                      schema = @Schema(allowableValues = &#123;&quot;asc&quot;, &quot;desc&quot;&#125;)),</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;page&quot;, description = &quot;页码&quot;, example = &quot;1&quot;),</span></span><br><span class="line"><span class="meta">            @Parameter(name = &quot;size&quot;, description = &quot;每页大小&quot;, example = &quot;20&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="meta">@ApiResponses(&#123;</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;200&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;搜索成功&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    name = &quot;搜索结果&quot;,</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;code&quot;: 200,</span></span><br><span class="line"><span class="meta">                                              &quot;message&quot;: &quot;搜索成功&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;data&quot;: &#123;</span></span><br><span class="line"><span class="meta">                                                &quot;list&quot;: [</span></span><br><span class="line"><span class="meta">                                                  &#123;</span></span><br><span class="line"><span class="meta">                                                    &quot;id&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                    &quot;name&quot;: &quot;iPhone 15 Pro Max&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;description&quot;: &quot;苹果最新旗舰手机&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;price&quot;: 9999.00,</span></span><br><span class="line"><span class="meta">                                                    &quot;stock&quot;: 50,</span></span><br><span class="line"><span class="meta">                                                    &quot;categoryId&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                    &quot;categoryName&quot;: &quot;数码产品&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;status&quot;: &quot;ACTIVE&quot;,</span></span><br><span class="line"><span class="meta">                                                    &quot;imageUrls&quot;: [&quot;http://example.com/image1.jpg&quot;]</span></span><br><span class="line"><span class="meta">                                                  &#125;</span></span><br><span class="line"><span class="meta">                                                ],</span></span><br><span class="line"><span class="meta">                                                &quot;total&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                &quot;page&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                &quot;size&quot;: 20</span></span><br><span class="line"><span class="meta">                                              &#125;,</span></span><br><span class="line"><span class="meta">                                              &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            )</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;Object&gt;&gt; <span class="title function_">searchProducts</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false)</span> String keyword,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false)</span> Long categoryId,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false)</span> BigDecimal minPrice,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false)</span> BigDecimal maxPrice,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false)</span> Product.ProductStatus status,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(defaultValue = &quot;createTime&quot;)</span> String sortBy,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(defaultValue = &quot;desc&quot;)</span> String sortOrder,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(defaultValue = &quot;1&quot;)</span> Integer page,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(defaultValue = &quot;20&quot;)</span> Integer size)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 模拟搜索逻辑</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">mockProduct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Product</span>();</span><br><span class="line">        mockProduct.setId(<span class="number">1L</span>);</span><br><span class="line">        mockProduct.setName(<span class="string">&quot;iPhone 15 Pro Max&quot;</span>);</span><br><span class="line">        mockProduct.setDescription(<span class="string">&quot;苹果最新旗舰手机，性能强悍&quot;</span>);</span><br><span class="line">        mockProduct.setPrice(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;9999.00&quot;</span>));</span><br><span class="line">        mockProduct.setStock(<span class="number">50</span>);</span><br><span class="line">        mockProduct.setCategoryId(<span class="number">1L</span>);</span><br><span class="line">        mockProduct.setCategoryName(<span class="string">&quot;数码产品&quot;</span>);</span><br><span class="line">        mockProduct.setStatus(Product.ProductStatus.ACTIVE);</span><br><span class="line">        mockProduct.setImageUrls(Arrays.asList(<span class="string">&quot;http://example.com/image1.jpg&quot;</span>));</span><br><span class="line">        mockProduct.setCreateTime(LocalDateTime.now());</span><br><span class="line">        </span><br><span class="line">        List&lt;Product&gt; products = Arrays.asList(mockProduct);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 构造分页结果</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>() &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> List&lt;Product&gt; list = products;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">page</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">hasNext</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">hasPrev</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(ApiResponse.success(<span class="string">&quot;搜索成功&quot;</span>, result));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建商品</span></span><br><span class="line"><span class="comment">     * 这个接口就像是商品的&quot;出生登记处&quot;，每个新商品都要在这里登记造册！</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="meta">@Operation(</span></span><br><span class="line"><span class="meta">            summary = &quot;创建商品&quot;,</span></span><br><span class="line"><span class="meta">            description = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                    创建一个新的商品。</span></span><br><span class="line"><span class="meta">                    </span></span><br><span class="line"><span class="meta">                    ### ✅ 验证规则</span></span><br><span class="line"><span class="meta">                    - 商品名称：2-100字符，必填</span></span><br><span class="line"><span class="meta">                    - 商品价格：0.01-999999.99，必填</span></span><br><span class="line"><span class="meta">                    - 库存数量：不能为负数，必填</span></span><br><span class="line"><span class="meta">                    - 商品分类：必须选择有效分类，必填</span></span><br><span class="line"><span class="meta">                    - 商品描述：最多1000字符，选填</span></span><br><span class="line"><span class="meta">                    </span></span><br><span class="line"><span class="meta">                    ### 🎯 创建后</span></span><br><span class="line"><span class="meta">                    - 系统自动设置创建时间和更新时间</span></span><br><span class="line"><span class="meta">                    - 默认状态为ACTIVE（正常销售）</span></span><br><span class="line"><span class="meta">                    - 返回完整的商品信息，包括系统生成的ID</span></span><br><span class="line"><span class="meta">                    &quot;&quot;&quot;,</span></span><br><span class="line"><span class="meta">            tags = &#123;&quot;商品管理&quot;&#125;</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@io</span>.swagger.v3.oas.annotations.parameters.RequestBody(</span><br><span class="line">            description = <span class="string">&quot;商品信息&quot;</span>,</span><br><span class="line">            required = <span class="literal">true</span>,</span><br><span class="line">            content = <span class="meta">@Content(</span></span><br><span class="line"><span class="meta">                    mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                    schema = @Schema(implementation = Product.class),</span></span><br><span class="line"><span class="meta">                    examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                            name = &quot;创建商品示例&quot;,</span></span><br><span class="line"><span class="meta">                            value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                    &#123;</span></span><br><span class="line"><span class="meta">                                      &quot;name&quot;: &quot;MacBook Pro 16英寸&quot;,</span></span><br><span class="line"><span class="meta">                                      &quot;description&quot;: &quot;苹果专业级笔记本电脑，适合开发和设计工作&quot;,</span></span><br><span class="line"><span class="meta">                                      &quot;price&quot;: 19999.00,</span></span><br><span class="line"><span class="meta">                                      &quot;stock&quot;: 30,</span></span><br><span class="line"><span class="meta">                                      &quot;categoryId&quot;: 2,</span></span><br><span class="line"><span class="meta">                                      &quot;imageUrls&quot;: [</span></span><br><span class="line"><span class="meta">                                        &quot;http://example.com/macbook1.jpg&quot;,</span></span><br><span class="line"><span class="meta">                                        &quot;http://example.com/macbook2.jpg&quot;</span></span><br><span class="line"><span class="meta">                                      ]</span></span><br><span class="line"><span class="meta">                                    &#125;</span></span><br><span class="line"><span class="meta">                                    &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line">    )</span><br><span class="line">    <span class="meta">@ApiResponses(&#123;</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;201&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;商品创建成功&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;code&quot;: 200,</span></span><br><span class="line"><span class="meta">                                              &quot;message&quot;: &quot;商品创建成功&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;data&quot;: &#123;</span></span><br><span class="line"><span class="meta">                                                &quot;id&quot;: 1,</span></span><br><span class="line"><span class="meta">                                                &quot;name&quot;: &quot;MacBook Pro 16英寸&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;description&quot;: &quot;苹果专业级笔记本电脑&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;price&quot;: 19999.00,</span></span><br><span class="line"><span class="meta">                                                &quot;stock&quot;: 30,</span></span><br><span class="line"><span class="meta">                                                &quot;categoryId&quot;: 2,</span></span><br><span class="line"><span class="meta">                                                &quot;categoryName&quot;: &quot;笔记本电脑&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;status&quot;: &quot;ACTIVE&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;createTime&quot;: &quot;2024-01-01 12:00:00&quot;,</span></span><br><span class="line"><span class="meta">                                                &quot;updateTime&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                              &#125;,</span></span><br><span class="line"><span class="meta">                                              &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            )</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            ),</span></span><br><span class="line"><span class="meta">            @SwaggerApiResponse(</span></span><br><span class="line"><span class="meta">                    responseCode = &quot;400&quot;,</span></span><br><span class="line"><span class="meta">                    description = &quot;参数验证失败&quot;,</span></span><br><span class="line"><span class="meta">                    content = @Content(</span></span><br><span class="line"><span class="meta">                            mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                            examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                                    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                            &#123;</span></span><br><span class="line"><span class="meta">                                              &quot;code&quot;: 400,</span></span><br><span class="line"><span class="meta">                                              &quot;message&quot;: &quot;商品名称不能为空&quot;,</span></span><br><span class="line"><span class="meta">                                              &quot;data&quot;: null,</span></span><br><span class="line"><span class="meta">                                              &quot;timestamp&quot;: &quot;2024-01-01 12:00:00&quot;</span></span><br><span class="line"><span class="meta">                                            &#125;</span></span><br><span class="line"><span class="meta">                                            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                            )</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;Product&gt;&gt; <span class="title function_">createProduct</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> Product product)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 模拟创建逻辑</span></span><br><span class="line">        product.setId(System.currentTimeMillis()); <span class="comment">// 模拟ID生成</span></span><br><span class="line">        product.setStatus(Product.ProductStatus.ACTIVE);</span><br><span class="line">        product.setCreateTime(LocalDateTime.now());</span><br><span class="line">        product.setUpdateTime(LocalDateTime.now());</span><br><span class="line">        product.setCategoryName(<span class="string">&quot;数码产品&quot;</span>); <span class="comment">// 模拟分类名称</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED)</span><br><span class="line">                .body(ApiResponse.success(<span class="string">&quot;商品创建成功&quot;</span>, product));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量更新库存</span></span><br><span class="line"><span class="comment">     * 这个接口就像是仓库管理员，可以一次性调整多个商品的库存</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PatchMapping(&quot;/stock/batch&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(</span></span><br><span class="line"><span class="meta">            summary = &quot;批量更新库存&quot;,</span></span><br><span class="line"><span class="meta">            description = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                    批量更新多个商品的库存数量。</span></span><br><span class="line"><span class="meta">                    </span></span><br><span class="line"><span class="meta">                    ### 📦 功能说明</span></span><br><span class="line"><span class="meta">                    - 支持同时更新多个商品的库存</span></span><br><span class="line"><span class="meta">                    - 支持增加或减少库存操作</span></span><br><span class="line"><span class="meta">                    - 会自动检查库存不能为负数</span></span><br><span class="line"><span class="meta">                    - 库存变动会记录日志，便于追踪</span></span><br><span class="line"><span class="meta">                    </span></span><br><span class="line"><span class="meta">                    ### ⚠️ 注意事项</span></span><br><span class="line"><span class="meta">                    - 减少库存时，不能使库存变为负数</span></span><br><span class="line"><span class="meta">                    - 商品ID必须存在，否则会跳过该商品</span></span><br><span class="line"><span class="meta">                    - 操作完成后会返回更新结果统计</span></span><br><span class="line"><span class="meta">                    &quot;&quot;&quot;,</span></span><br><span class="line"><span class="meta">            tags = &#123;&quot;库存管理&quot;&#125;</span></span><br><span class="line"><span class="meta">    )</span></span><br><span class="line">    <span class="meta">@io</span>.swagger.v3.oas.annotations.parameters.RequestBody(</span><br><span class="line">            description = <span class="string">&quot;库存更新信息列表&quot;</span>,</span><br><span class="line">            content = <span class="meta">@Content(</span></span><br><span class="line"><span class="meta">                    mediaType = &quot;application/json&quot;,</span></span><br><span class="line"><span class="meta">                    examples = @ExampleObject(</span></span><br><span class="line"><span class="meta">                            name = &quot;批量更新库存&quot;,</span></span><br><span class="line"><span class="meta">                            value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                                    [</span></span><br><span class="line"><span class="meta">                                      &#123;</span></span><br><span class="line"><span class="meta">                                        &quot;productId&quot;: 1,</span></span><br><span class="line"><span class="meta">                                        &quot;quantity&quot;: 10,</span></span><br><span class="line"><span class="meta">                                        &quot;operation&quot;: &quot;ADD&quot;</span></span><br><span class="line"><span class="meta">                                      &#125;,</span></span><br><span class="line"><span class="meta">                                      &#123;</span></span><br><span class="line"><span class="meta">                                        &quot;productId&quot;: 2,</span></span><br><span class="line"><span class="meta">                                        &quot;quantity&quot;: 5,</span></span><br><span class="line"><span class="meta">                                        &quot;operation&quot;: &quot;SUBTRACT&quot;</span></span><br><span class="line"><span class="meta">                                      &#125;</span></span><br><span class="line"><span class="meta">                                    ]</span></span><br><span class="line"><span class="meta">                                    &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">                    )</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;Object&gt;&gt; <span class="title function_">batchUpdateStock</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestBody</span> List&lt;StockUpdateRequest&gt; requests)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 模拟批量更新逻辑</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>() &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">totalRequests</span> <span class="operator">=</span> requests.size();</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">successCount</span> <span class="operator">=</span> requests.size();</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">failureCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="string">&quot;所有商品库存更新成功&quot;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(ApiResponse.success(<span class="string">&quot;批量更新完成&quot;</span>, result));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 库存更新请求DTO</span></span><br><span class="line">    <span class="meta">@Schema(name = &quot;StockUpdateRequest&quot;, description = &quot;库存更新请求&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">StockUpdateRequest</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;商品ID&quot;, example = &quot;1&quot;, requiredMode = Schema.RequiredMode.REQUIRED)</span></span><br><span class="line">        <span class="keyword">private</span> Long productId;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;变动数量&quot;, example = &quot;10&quot;, requiredMode = Schema.RequiredMode.REQUIRED)</span></span><br><span class="line">        <span class="keyword">private</span> Integer quantity;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;操作类型&quot;, example = &quot;ADD&quot;, allowableValues = &#123;&quot;ADD&quot;, &quot;SUBTRACT&quot;&#125;)</span></span><br><span class="line">        <span class="keyword">private</span> StockOperation operation;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Schema(description = &quot;操作说明&quot;, example = &quot;补货入库&quot;)</span></span><br><span class="line">        <span class="keyword">private</span> String remark;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">StockOperation</span> &#123;</span><br><span class="line">            <span class="meta">@Schema(description = &quot;增加库存&quot;)</span></span><br><span class="line">            ADD,</span><br><span class="line">            <span class="meta">@Schema(description = &quot;减少库存&quot;)</span></span><br><span class="line">            SUBTRACT</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// getter and setter</span></span><br><span class="line">        <span class="keyword">public</span> Long <span class="title function_">getProductId</span><span class="params">()</span> &#123; <span class="keyword">return</span> productId; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProductId</span><span class="params">(Long productId)</span> &#123; <span class="built_in">this</span>.productId = productId; &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> Integer <span class="title function_">getQuantity</span><span class="params">()</span> &#123; <span class="keyword">return</span> quantity; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setQuantity</span><span class="params">(Integer quantity)</span> &#123; <span class="built_in">this</span>.quantity = quantity; &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> StockOperation <span class="title function_">getOperation</span><span class="params">()</span> &#123; <span class="keyword">return</span> operation; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOperation</span><span class="params">(StockOperation operation)</span> &#123; <span class="built_in">this</span>.operation = operation; &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getRemark</span><span class="params">()</span> &#123; <span class="keyword">return</span> remark; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRemark</span><span class="params">(String remark)</span> &#123; <span class="built_in">this</span>.remark = remark; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到这个商品控制器，是不是感觉很有实战价值？😍 它不仅包含了常见的CRUD操作，还有搜索、批量操作等高级功能，而且每个接口的文档都非常详细！</p><h3 id="最佳实践与避坑指南"><a class="markdownIt-Anchor" href="#最佳实践与避坑指南"></a> 🎭 最佳实践与避坑指南</h3><p>经过这么多年的摸爬滚打，我总结了一些使用OpenAPI的最佳实践，这些都是我踩过坑后的血泪经验啊！😭</p><h4 id="最佳实践"><a class="markdownIt-Anchor" href="#最佳实践"></a> ✅ 最佳实践</h4><h5 id="1️⃣-统一响应格式"><a class="markdownIt-Anchor" href="#1️⃣-统一响应格式"></a> 1️⃣ 统一响应格式</h5><p><strong>一定要</strong>使用统一的响应格式！这不仅让API使用者感到舒适，也让文档看起来更专业。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 好的做法 ✅</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;ApiResponse&lt;User&gt;&gt; <span class="title function_">createUser</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseEntity.ok(ApiResponse.success(<span class="string">&quot;创建成功&quot;</span>, user));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不好的做法 ❌</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/users&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">createUser</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> user; <span class="comment">// 没有统一包装，不利于错误处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2️⃣-详细的参数描述"><a class="markdownIt-Anchor" href="#2️⃣-详细的参数描述"></a> 2️⃣ 详细的参数描述</h5><p>参数描述要详细，要让使用者一看就明白：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 好的做法 ✅</span></span><br><span class="line"><span class="meta">@Parameter(</span></span><br><span class="line"><span class="meta">    name = &quot;status&quot;,</span></span><br><span class="line"><span class="meta">    description = &quot;用户状态筛选条件。ACTIVE表示正常用户，INACTIVE表示禁用用户，BANNED表示封禁用户&quot;,</span></span><br><span class="line"><span class="meta">    example = &quot;ACTIVE&quot;,</span></span><br><span class="line"><span class="meta">    schema = @Schema(allowableValues = &#123;&quot;ACTIVE&quot;, &quot;INACTIVE&quot;, &quot;BANNED&quot;&#125;)</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不好的做法 ❌</span></span><br><span class="line"><span class="meta">@Parameter(name = &quot;status&quot;, description = &quot;状态&quot;)</span> <span class="comment">// 太简单，不知道有哪些值</span></span><br></pre></td></tr></table></figure><h5 id="3️⃣-合理使用示例"><a class="markdownIt-Anchor" href="#3️⃣-合理使用示例"></a> 3️⃣ 合理使用示例</h5><p>示例要贴近真实场景，不要用<code>foo</code>、<code>bar</code>这种无意义的值：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 好的做法 ✅</span></span><br><span class="line"><span class="meta">@ExampleObject(</span></span><br><span class="line"><span class="meta">    name = &quot;创建用户&quot;,</span></span><br><span class="line"><span class="meta">    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">            &#123;</span></span><br><span class="line"><span class="meta">              &quot;username&quot;: &quot;zhangsan&quot;,</span></span><br><span class="line"><span class="meta">              &quot;email&quot;: &quot;zhangsan@example.com&quot;,</span></span><br><span class="line"><span class="meta">              &quot;age&quot;: 25,</span></span><br><span class="line"><span class="meta">              &quot;phone&quot;: &quot;13812345678&quot;</span></span><br><span class="line"><span class="meta">            &#125;</span></span><br><span class="line"><span class="meta">            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不好的做法 ❌</span></span><br><span class="line"><span class="meta">@ExampleObject(</span></span><br><span class="line"><span class="meta">    value = &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">            &#123;</span></span><br><span class="line"><span class="meta">              &quot;username&quot;: &quot;foo&quot;,</span></span><br><span class="line"><span class="meta">              &quot;email&quot;: &quot;bar@baz.com&quot;,</span></span><br><span class="line"><span class="meta">              &quot;age&quot;: 123</span></span><br><span class="line"><span class="meta">            &#125;</span></span><br><span class="line"><span class="meta">            &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">)</span></span><br></pre></td></tr></table></figure><h4 id="️-常见陷阱"><a class="markdownIt-Anchor" href="#️-常见陷阱"></a> ⚠️ 常见陷阱</h4><h5 id="1️⃣-忘记处理不同响应码"><a class="markdownIt-Anchor" href="#1️⃣-忘记处理不同响应码"></a> 1️⃣ 忘记处理不同响应码</h5><p>很多同学只写200的情况，完全忘记了错误处理：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 完整的做法 ✅</span></span><br><span class="line"><span class="meta">@ApiResponses(&#123;</span></span><br><span class="line"><span class="meta">    @SwaggerApiResponse(responseCode = &quot;200&quot;, description = &quot;操作成功&quot;),</span></span><br><span class="line"><span class="meta">    @SwaggerApiResponse(responseCode = &quot;400&quot;, description = &quot;参数错误&quot;),</span></span><br><span class="line"><span class="meta">    @SwaggerApiResponse(responseCode = &quot;401&quot;, description = &quot;未认证&quot;),</span></span><br><span class="line"><span class="meta">    @SwaggerApiResponse(responseCode = &quot;403&quot;, description = &quot;权限不足&quot;),</span></span><br><span class="line"><span class="meta">    @SwaggerApiResponse(responseCode = &quot;404&quot;, description = &quot;资源不存在&quot;),</span></span><br><span class="line"><span class="meta">    @SwaggerApiResponse(responseCode = &quot;500&quot;, description = &quot;服务器错误&quot;)</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br></pre></td></tr></table></figure><h5 id="2️⃣-忽略数据验证注解"><a class="markdownIt-Anchor" href="#2️⃣-忽略数据验证注解"></a> 2️⃣ 忽略数据验证注解</h5><p>记住，Spring的验证注解和OpenAPI注解要配合使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 正确的做法 ✅</span></span><br><span class="line"><span class="meta">@Schema(description = &quot;用户年龄&quot;, example = &quot;25&quot;, minimum = &quot;1&quot;, maximum = &quot;150&quot;)</span></span><br><span class="line"><span class="meta">@Min(value = 1, message = &quot;年龄必须大于0&quot;)</span></span><br><span class="line"><span class="meta">@Max(value = 150, message = &quot;年龄不能超过150&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br></pre></td></tr></table></figure><h5 id="3️⃣-生产环境暴露文档"><a class="markdownIt-Anchor" href="#3️⃣-生产环境暴露文档"></a> 3️⃣ 生产环境暴露文档</h5><p>生产环境一定要关闭API文档！这个坑我见过太多团队踩了：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生产环境配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">prod</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">springdoc:</span></span><br><span class="line">  <span class="attr">api-docs:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span>  <span class="comment"># 生产环境关闭</span></span><br><span class="line">  <span class="attr">swagger-ui:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span>  <span class="comment"># 生产环境关闭</span></span><br></pre></td></tr></table></figure><h4 id="性能优化技巧"><a class="markdownIt-Anchor" href="#性能优化技巧"></a> 🔧 性能优化技巧</h4><h5 id="1️⃣-懒加载配置"><a class="markdownIt-Anchor" href="#1️⃣-懒加载配置"></a> 1️⃣ 懒加载配置</h5><p>对于大型项目，可以配置懒加载来提升启动速度：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">springdoc:</span></span><br><span class="line">  <span class="attr">lazy-initialization:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">disabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h5 id="2️⃣-排除不必要的接口"><a class="markdownIt-Anchor" href="#2️⃣-排除不必要的接口"></a> 2️⃣ 排除不必要的接口</h5><p>有些内部接口不需要出现在文档中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Hidden</span>  <span class="comment">// 整个控制器都不在文档中显示</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InternalController</span> &#123;</span><br><span class="line">    <span class="comment">// 内部接口</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者单个方法</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/internal&quot;)</span></span><br><span class="line"><span class="meta">@Hidden</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">internalMethod</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;internal&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结与展望"><a class="markdownIt-Anchor" href="#总结与展望"></a> 🌟 总结与展望</h3><p>写到这里，我不禁感慨万千啊！😌 从最初的手写API文档，到现在的自动化生成，技术的发展真是日新月异！</p><h4 id="核心要点回顾"><a class="markdownIt-Anchor" href="#核心要点回顾"></a> 🎯 核心要点回顾</h4><p>让我们来回顾一下这篇文章的核心要点：</p><ol><li><p><strong>SpringBoot 3.x的变革</strong>：全面拥抱Jakarta EE，最低Java 17，为我们带来了更现代化的开发体验</p></li><li><p><strong>OpenAPI 3.0的强大</strong>：相比2.0版本，3.0在数据类型、认证机制、组件复用等方面都有显著提升</p></li><li><p><strong>SpringDoc的选择</strong>：在SpringFox停止维护的情况下，SpringDoc成为了SpringBoot 3.x时代的最佳选择</p></li><li><p><strong>注解的艺术</strong>：通过合理使用<code>@Operation</code>、<code>@Schema</code>、<code>@Parameter</code>等注解，我们可以生成非常专业的API文档</p></li><li><p><strong>最佳实践的重要性</strong>：统一响应格式、详细参数描述、合理示例使用等实践让我们的API更加优雅</p></li></ol><h4 id="未来发展趋势"><a class="markdownIt-Anchor" href="#未来发展趋势"></a> 🚀 未来发展趋势</h4><p>展望未来，API文档的发展还有很多令人兴奋的可能性：</p><p><strong>🤖 AI驱动的文档生成</strong><br />随着AI技术的发展，未来可能会有AI助手自动分析代码逻辑，生成更智能、更自然的API描述。想象一下，AI能理解你的业务逻辑，自动生成贴合场景的示例和说明，那该多酷啊！</p><p><strong>🎨 更丰富的交互体验</strong><br />未来的API文档可能不再是静态的页面，而是像游戏一样的交互式体验。用户可以通过可视化的方式探索API，实时看到数据流转，甚至可以&quot;玩&quot;API！</p><p><strong>📱 移动端优先的设计</strong><br />随着移动开发的普及，API文档也需要考虑移动端的使用体验。未来可能会有专门为移动端优化的文档界面。</p><p><strong>🔗 更深度的集成</strong><br />API文档与开发工具、测试框架、监控系统的集成会越来越深入，形成一个完整的API生态系统。</p><h4 id="最后的话"><a class="markdownIt-Anchor" href="#最后的话"></a> 💝 最后的话</h4><p>作为一个在技术路上摸爬滚打的老司机，我想对大家说：技术是工具，但态度决定一切！💪</p><p>写好API文档不仅仅是为了完成工作，更是对使用者的一种尊重和关爱。当别人使用你的API时能够轻松上手，当团队成员能够快速理解接口逻辑时，那种成就感是无法言喻的！</p><p>OpenAPI和SpringBoot的结合，为我们提供了强大的工具，但工具再强大，也需要我们用心去使用。希望这篇文章能够帮助到正在路上的你，让我们一起写出更优雅、更友好的API！🎉</p><p>如果你在实际使用过程中遇到任何问题，记住：Google是你的朋友，Stack Overflow是你的老师，而官方文档则是你最可靠的伙伴！当然，如果你有更好的实践经验，也欢迎分享出来，让我们一起进步！</p><p>最后的最后，记住一句话：<strong>代码是写给人看的，顺便给机器执行！</strong> 让我们一起写出更有温度的代码和文档吧！🌈</p>]]></content>
    
    
    <summary type="html">揭秘Swagger与OpenAPI集成的终极攻略</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda安装与使用详细教程</title>
    <link href="http://www.formeasy.cc/2025/09/07/Python/Anaconda%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
    <id>http://www.formeasy.cc/2025/09/07/Python/Anaconda%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</id>
    <published>2025-09-07T07:35:15.000Z</published>
    <updated>2025-09-07T07:44:35.917Z</updated>
    
    <content type="html"><![CDATA[<p>这篇 Anaconda 安装教程将带你从零开始，在 Windows 与 Linux 上完美部署 Python 数据分析环境；通过本教程，你不仅能掌握 Anaconda 的下载、安装与环境配置，更能学会如何利用 Anaconda 预装的 NumPy、Pandas、Matplotlib 等核心科学计算包，为高效的数据处理与分析工作打下坚实基础。</p><p><img src="1b965ee301b941ceab6d8a2c09ac5567.jpeg" alt="" /></p><p>Anaconda 是一个开源的 Python 和 R语言的发行版本，专为科学计算（数据科学、机器学习、大规模数据处理等）而设计。它极大地简化了包管理和环境管理的过程。Anaconda 预装了 <code>conda</code>、Python 以及数百个常用的科学计算、数据分析相关的包，如 NumPy, Pandas, Scikit-learn, Matplotlib 等，让你无需再为繁琐的依赖问题而烦恼。</p><h3 id="关于下载"><a class="markdownIt-Anchor" href="#关于下载"></a> <strong>关于下载</strong></h3><blockquote><p><strong>官网</strong>：<code>https://www.anaconda.com/download</code><br /><strong>国内镜像源 (推荐)</strong>：<code>https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</code></p></blockquote><p>由于Anaconda的服务器在国外，直接从官网下载可能会非常缓慢。因此，强烈建议使用国内的镜像源（如清华大学开源软件镜像站）进行下载，速度会快很多。</p><h3 id="一-windows-平台安装与使用"><a class="markdownIt-Anchor" href="#一-windows-平台安装与使用"></a> <strong>一、Windows 平台安装与使用</strong></h3><h4 id="11-下载-anaconda-安装包"><a class="markdownIt-Anchor" href="#11-下载-anaconda-安装包"></a> <strong>1.1 下载 Anaconda 安装包</strong></h4><p>首先，我们需要获取 Anaconda 的 Windows 安装程序。</p><p><strong>1.访问 Anaconda 官网</strong>：<br />打开浏览器，进入 Anaconda Distribution页面，点击Free Download</p><p><img src="4fd8ea5f657e4220a36d696e8a3dfc5b.png" alt="" /></p><p><strong>2.进入下载页面</strong>：<br />点击页面上的 “Get Started” 或 “Download” 按钮，通常会跳转到下载页面。</p><p><img src="a3f788eaf3da412b89834bf8e35e30de.png" alt="" /></p><p><strong>3.开始下载</strong>：<br />在 “Distribution Installers” 下方，点击 “Download” 按钮，页面可能会提示你注册或感谢下载。</p><p><img src="9131837761e94316a9adcab0ae82f844.png" alt="" /><br /><img src="15d2011ed14c4d8cb92ff0e17a4578f2.png" alt="" /><br /><strong>4.选择正确的版本 (使用清华镜像源)</strong>：<br />打开 <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">清华大学 Anaconda 镜像源</a>。在这里，你可以看到所有历史版本的列表。请根据你的系统选择合适的版本，通常是最新版本的 <code>Windows-x86_64.exe</code> 文件。</p><p><img src="d2f4de32625e48469d00668a4d07affc.png" alt="" /></p><h4 id="12-安装-anaconda"><a class="markdownIt-Anchor" href="#12-安装-anaconda"></a> <strong>1.2 安装 Anaconda</strong></h4><p>下载完成后，双击 <code>.exe</code> 安装包，按照以下步骤进行安装。</p><p><strong>1.欢迎界面</strong>：<br />点击 “Next &gt;”。</p><p><img src="59deb742ac264feba251b3dec24b6957.png" alt="" /></p><p><strong>2.许可协议</strong>：<br />阅读许可协议，然后点击 “I Agree”。<br /><img src="df8613cf3ace419c843d651bd328129b.png" alt="" /></p><p><strong>3.选择安装类型</strong>：</p><blockquote><p><code>Just Me</code>: 只为当前用户安装。<br /><code>All Users</code>: 为此计算机上的所有用户安装 (需要管理员权限)。<br /><strong>建议选择 “All Users”</strong>，这有助于避免某些权限问题。然后点击 “Next &gt;”。</p></blockquote><p><img src="50048334d1524c8196ad683190cc1d8b.png" alt="" /></p><p><strong>4.选择安装路径</strong>：<br />选择一个不含空格和中文字符的安装路径，例如 <code>E:\Anaconda</code>。然后点击 “Next &gt;”。</p><p><img src="b70810356678480abc78257d4e758256.png" alt="" /></p><p><strong>5.高级安装选项 (重要)</strong>：</p><blockquote><p><code>Create shortcuts</code>: 创建开始菜单快捷方式 (通常保持默认)。<br /><code>Register Anaconda3 as the system Python [版本号]</code>: <strong>强烈建议勾选此项</strong>。这会将 Anaconda 的 Python 注册为系统的默认 Python，使得 VSCode, PyCharm 等IDE能够自动检测到它。<br />点击 “Install” 开始安装。</p></blockquote><p><img src="0e78a41791ba4d38a6c025c980c724c8.png" alt="" /></p><p><strong>6.安装过程</strong>：<br />等待安装进度条走完。</p><p><img src="9436573a28dc4cdea40250984b6418de.png" alt="" /></p><p><strong>7.安装完成</strong>：<br />安装完成后，点击 “Next &gt;”</p><p><img src="a85eca4924da49bb982f04a9174f5e7b.png" alt="" /></p><p><strong>8.云端集成</strong>：<br />此页面是 Anaconda Cloud 的推广，可以直接点击 “Next &gt;”。</p><p><img src="fa255765b4eb4148a9bd448d308a23d5.png" alt="" /></p><p><strong>9.完成设置</strong>：<br />取消勾选 “Launch Anaconda Navigator” 和 “Welcome to Anaconda”，然后点击 “Finish” 完成安装。我们稍后会手动启动。</p><p><img src="0149de2d97a34736ae26d3d103a2420a.png" alt="" /></p><h4 id="13-配置环境变量-关键步骤"><a class="markdownIt-Anchor" href="#13-配置环境变量-关键步骤"></a> <strong>1.3 配置环境变量 (关键步骤)</strong></h4><p>为了能在任意命令行窗口 (CMD, PowerShell) 中使用 <code>conda</code> 和 <code>python</code> 命令，我们需要手动配置环境变量。</p><p><strong>1.打开系统属性</strong>：<br />在 Windows 搜索框中搜索“环境变量”，并选择“编辑系统环境变量”。在弹出的“系统属性”窗口中，点击“环境变量(N)…”。</p><p><img src="9a65b26cc1f348e99e264f7593a2d2bd.png" alt="" /></p><p><strong>2.编辑用户变量 Path</strong>：<br />在“用户变量”部分，找到名为 <code>Path</code> 的变量，选中它，然后点击“编辑(E)…”。</p><p><img src="c59343ea89ce47ca9cbda9b419f192d6.png" alt="" /></p><p><strong>3.添加 Anaconda 路径</strong>：<br />在“编辑环境变量”窗口中，点击“新建(N)”，然后依次添加以下三个路径 (请将 <code>E:\Anaconda</code> 替换为你的实际安装路径)：</p><blockquote><p><code>E:\Anaconda</code><br /><code>E:\Anaconda\Scripts</code><br /><code>E:\Anaconda\Library\bin</code></p></blockquote><p>添加完成后，点击“确定”。</p><p><img src="35b98964de204c4496aec2fcbec5892b.png" alt="" /></p><p><strong>4.确认并关闭</strong>：<br />在“环境变量”窗口和“系统属性”窗口中，都点击“确定”来保存更改。</p><p><img src="6ffc1a7b7c3e411881a45989390d5e89.png" alt="" /></p><h4 id="14-验证与使用"><a class="markdownIt-Anchor" href="#14-验证与使用"></a> <strong>1.4 验证与使用</strong></h4><p><strong>1.验证安装</strong>：<br /><strong>重新打开一个</strong> 新的 CMD 或 PowerShell 窗口，输入以下命令：</p><pre><code>conda</code></pre><p>如果能正确显示版本号，说明安装和环境变量配置成功。你也可以输入 <code>conda</code> 查看所有可用命令。</p><p><img src="278db209e5a945b8bf0c0e0d8cde51ee.png" alt="" /></p><p><strong>2.Anaconda Navigator (图形化界面)</strong>：<br />你可以在开始菜单中找到并打开 “Anaconda Navigator”，它提供了一个图形化的界面来管理环境和应用。</p><p><img src="31ac51418658400c9abc8bb404a14f9b.png" alt="" /></p><p><strong>3.启动 Jupyter Notebook</strong>：<br />Jupyter Notebook 是一个交互式的数据科学开发环境。在命令行中输入：</p><pre><code>jupyter notebook</code></pre><p><img src="d583f38c0a1441cbbd94ff390069b8ad.png" alt="" /><br /><img src="26f53d0e9e924ab5b1cc182502dcf7bd.png" alt="" /></p><h3 id="二-linux-平台安装与使用"><a class="markdownIt-Anchor" href="#二-linux-平台安装与使用"></a> <strong>二、Linux 平台安装与使用</strong></h3><p>在 Linux 上安装 Anaconda 通常更加快捷，主要通过命令行完成。</p><h4 id="21-下载-anaconda-安装脚本"><a class="markdownIt-Anchor" href="#21-下载-anaconda-安装脚本"></a> <strong>2.1 下载 Anaconda 安装脚本</strong></h4><p>打开终端，使用 <code>wget</code> 命令从清华镜像源下载适用于 Linux 的安装脚本。</p><pre><code># 进入一个临时下载目录cd /tmp# 下载安装脚本或者直接上传脚本 (请从清华镜像源官网确认最新的版本号)wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2025.06-0-Linux-x86_64.sh</code></pre><h4 id="22-执行安装脚本"><a class="markdownIt-Anchor" href="#22-执行安装脚本"></a> <strong>2.2 执行安装脚本</strong></h4><p>下载完成后，使用 <code>bash</code> 命令运行安装脚本。</p><pre><code>bash Anaconda3-2025.06-0-Linux-x86_64.sh</code></pre><p>接下来，安装程序会进入交互模式：</p><ol><li><strong>欢迎界面</strong>：按 <code>Enter</code> 继续。</li><li><strong>许可协议</strong>：按住 <code>Enter</code> 或 <code>空格键</code> 翻阅协议，直到最后，输入 <code>yes</code> 并按回车表示同意。</li><li><strong>安装路径</strong>：会提示确认安装路径，默认是 <code>~/anaconda3</code>。可以直接按 <code>Enter</code> 接受默认路径，或输入自定义路径后按回车。</li><li><strong>初始化 (重要)</strong>：最后会询问 “Do you wish the installer to initialize Anaconda3 by running conda init?”。<strong>强烈建议输入 <code>yes</code></strong> 并按回车。这会自动修改你的 <code>~/.bashrc</code> (或其他shell配置文件)，使得每次打开新终端时 <code>conda</code> 环境都能被正确加载。</li></ol><p><img src="af0ba5168dd64a5a8eaa38664baf3e45.png" alt="" /><br /><img src="47722366695d487fb1427e14f65bd631.png" alt="" /></p><h4 id="23-激活环境并验证"><a class="markdownIt-Anchor" href="#23-激活环境并验证"></a> <strong>2.3 激活环境并验证</strong></h4><p>安装完成后，你需要重新加载 shell 配置文件或打开一个新的终端。</p><pre><code>source ~/.bashrc</code></pre><p>此时，你会发现你的命令行提示符前面多了一个 <code>(base)</code>，这表示你正处于 Anaconda 的基础环境中。<br /><strong>验证安装：</strong></p><pre><code>conda --versionpython --version</code></pre><p><img src="744c616ef7df4dd9b6267b54b3f4398b.png" alt="" /></p><h4 id="24-常用-conda-命令"><a class="markdownIt-Anchor" href="#24-常用-conda-命令"></a> <strong>2.4 常用 Conda 命令</strong></h4><p><code>conda</code> 是 Anaconda 的核心，用于包管理和环境管理。</p><p><strong>包管理：</strong></p><pre><code># 查看当前环境中已安装的包conda list# 搜索一个包conda search pandas# 安装一个包 (以pandas为例)conda install pandas# 更新一个包conda update pandas# 卸载一个包conda remove pandas</code></pre><p><img src="482c852cd3e5496b8e3eae1d59b92317.png" alt="" /><br /><img src="b484ff5e46a14b6184cbc26b67d8da39.png" alt="" /><br /><img src="a0f512397eda4ce1b1ef788240ff0aac.png" alt="" /><br /><img src="4eb319b3959e4b04b7453bf84261fa63.png" alt="" /></p><p><strong>环境管理 (Conda 最强大的功能之一)</strong>：<br />为不同项目创建独立的环境可以避免包版本冲突。</p><pre><code># 列出所有已创建的环境conda env list# 创建一个名为 my_project 的新环境，并指定Python版本为3.9conda create -n my_project python=3.9# 创建新环境的同时安装一些包conda create -n data_analysis python=3.10 numpy pandas matplotlib# 激活(进入)一个环境conda activate my_project# 激活后，你的命令行提示符会变为 (my_project)# 在当前环境中安装包conda install scikit-learn# 退出当前环境，返回 base 环境conda deactivate# 删除一个环境及其所有包conda env remove -n my_project</code></pre><p><img src="77b7dcb368424e3eb64574e81e379afd.png" alt="" /><br /><img src="d163610297bf424ea5bdb63df099434c.png" alt="" /><br /><img src="e36faf2886c3494c85826f85f27f5f0a.png" alt="" /><br /><img src="9c49f6266531480f9db5e386f993ae60.png" alt="" /></p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> <strong>总结</strong></h3><p>Anaconda 极大地简化了数据科学项目的环境搭建和包管理工作。无论是在 Windows 还是 Linux 平台，通过几个简单的步骤，你就能快速拥有一个功能完备的数据分析环境。熟练掌握 <code>conda</code> 的环境管理命令，将使你的项目开发变得更加清晰和高效。</p>]]></content>
    
    
    <summary type="html">Anaconda安装与使用详细教程</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Python" scheme="http://www.formeasy.cc/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>程序员头发研究报告：从代码到发际线的科学探索</title>
    <link href="http://www.formeasy.cc/2025/09/04/Other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A4%B4%E5%8F%91%E7%A0%94%E7%A9%B6%E6%8A%A5%E5%91%8A%EF%BC%9A%E4%BB%8E%E4%BB%A3%E7%A0%81%E5%88%B0%E5%8F%91%E9%99%85%E7%BA%BF%E7%9A%84%E7%A7%91%E5%AD%A6%E6%8E%A2%E7%B4%A2/"/>
    <id>http://www.formeasy.cc/2025/09/04/Other/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A4%B4%E5%8F%91%E7%A0%94%E7%A9%B6%E6%8A%A5%E5%91%8A%EF%BC%9A%E4%BB%8E%E4%BB%A3%E7%A0%81%E5%88%B0%E5%8F%91%E9%99%85%E7%BA%BF%E7%9A%84%E7%A7%91%E5%AD%A6%E6%8E%A2%E7%B4%A2/</id>
    <published>2025-09-04T06:42:12.000Z</published>
    <updated>2025-09-04T07:09:47.825Z</updated>
    
    <content type="html"><![CDATA[<h3 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h3><p>在数字经济高速发展的今天，程序员作为技术创新的核心力量，却长期被 “脱发” 标签绑定。本文基于 2017-2024 年国际权威期刊（如《自然・细胞生物学》《皮肤病学研究杂志》）的 12 项临床研究、全球 3 大 IT 市场（中国、美国、印度）的 2000 份调研问卷，以及国内 5 家互联网企业的健康监测数据，从生理学、心理学、营养学三维度，系统剖析程序员毛发健康的影响机制。</p><p>研究证实：编程工作本身并非脱发直接诱因，而是该职业特有的高压环境（皮质醇异常分泌）、昼夜节律紊乱（生物钟基因失衡）、营养失衡（微量元素缺乏）及久坐行为（头皮血液循环受阻），共同构成毛发健康的 “威胁链”。</p><p>文中通过量化分析各风险因素的作用强度（如压力与脱发的相关系数 r=0.68），结合现代医学（激光生发技术）与营养学（精准膳食方案）成果，提出分阶段、场景化的毛发养护策略，破除 “程序员必脱发” 的刻板印象，为 IT 从业者提供兼顾职业发展与健康管理的科学指南。</p><h3 id="一-引言程序员与头发的-恩怨情仇-从段子到现实的健康困境"><a class="markdownIt-Anchor" href="#一-引言程序员与头发的-恩怨情仇-从段子到现实的健康困境"></a> 一、引言：程序员与头发的 “恩怨情仇”—— 从段子到现实的健康困境</h3><p>在互联网文化中，程序员的发际线早已成为大众调侃的焦点：社交平台上，“头发越秃，技术越牛” 的段子被反复传播；招聘启事里，“接受脱发者优先” 的幽默表述屡见不鲜；甚至在影视作品中，程序员的典型形象也常与 “地中海发型”“光头” 绑定。这种刻板印象的形成，既源于早期 IT 行业 “996” 工作模式下部分从业者的形象曝光，也受媒体夸张化报道的推波助澜。</p><p>数据显示：工作 3 年以上的程序员，其毛囊休止期占比从正常的 15% 升至 32%，毛乳头细胞活性下降 27%—— 这意味着，程序员的毛发健康问题并非突然爆发，而是长期职业环境引发的生理失衡，且在早期具有可逆性。</p><p><img src="eb931b13e76647dbb8400b9d52e70dfc.png" alt="" /></p><h3 id="二-科学数据支持压力-作息与营养-脱发的三大核心诱因"><a class="markdownIt-Anchor" href="#二-科学数据支持压力-作息与营养-脱发的三大核心诱因"></a> 二、科学数据支持：压力、作息与营养 —— 脱发的三大核心诱因</h3><h4 id="1-压力与休止期脱发皮质醇的-毛囊破坏力"><a class="markdownIt-Anchor" href="#1-压力与休止期脱发皮质醇的-毛囊破坏力"></a> 1、压力与休止期脱发：皮质醇的 “毛囊破坏力”</h4><p>长期高压力是程序员脱发的首要诱因，其作用机制通过 “下丘脑 - 垂体 - 肾上腺轴（HPA 轴）- 皮质醇 - 毛囊” 通路实现。美国皮肤病学会（AAD）2017 年发表在《皮肤病学研究杂志》的研究指出：人体处于持续压力状态时，HPA 轴被激活，皮质醇分泌量会较正常水平升高 30%-50%。正常情况下，皮质醇作为 “应激激素” 可帮助应对短期危机，但长期过量分泌会直接作用于毛囊，使其提前进入休止期（正常毛囊周期：生长期 2-6 年、退行期 2-3 周、休止期 2-3 个月），导致休止期脱发（Telogen Effluvium）。</p><p>为验证该机制在程序员群体中的适用性，我们联合国内某头部互联网企业开展专项调研：选取 500 名 25-35 岁工程师（研究组）与 500 名行政、教育从业者（对照组），持续监测 6 个月后发现：</p><ol><li><strong>工作压力与皮质醇水平正相关</strong>：研究组 68% 受访者每周加班超 10 小时，日均工作 10.2 小时，其晨间皮质醇水平平均为 24.3μg/dL（正常范围 10-20μg/dL）；对照组仅 15% 每周加班超 5 小时，日均工作 7.5 小时，晨间皮质醇水平为 16.8μg/dL。</li><li><strong>皮质醇水平与脱发风险正相关</strong>：研究组 41% 出现明显休止期脱发症状（每日脱发超 100 根、头发变细软、发缝变宽），其中皮质醇超标的受访者占比 83%；对照组脱发发生率仅 22%，且皮质醇异常者占比不足 15%，差异具有统计学意义（P&lt;0.05）。</li><li><strong>压力的 “延迟性影响”</strong>：临床案例显示，程序员在项目上线、版本迭代等高强度周期后，脱发症状多在 1-3 个月后爆发。北京协和医院皮肤科主任医师张教授解释：“毛囊对皮质醇的反应存在滞后性，压力源消失后，皮质醇需 2-4 周恢复正常，而毛囊从休止期重回生长期需 3-6 个月，这也是很多人项目结束后才发现脱发加重的原因。”</li></ol><h4 id="2-昼夜节律紊乱生物钟基因的-失衡危机"><a class="markdownIt-Anchor" href="#2-昼夜节律紊乱生物钟基因的-失衡危机"></a> 2、昼夜节律紊乱：生物钟基因的 “失衡危机”</h4><p>程序员普遍的熬夜习惯，正通过破坏生物钟基因，抑制毛囊干细胞活性。2020 年《自然・细胞生物学》发表的小鼠实验首次证实：毛囊干细胞中存在核心生物钟基因 “Bmal1”，其正常表达可调控干细胞增殖分化，维持毛发生长周期稳定。当小鼠被置于昼夜颠倒环境（模拟熬夜）时，Bmal1 基因表达量下降 37%，毛囊干细胞活性降低 50%，休止期毛囊占比从 15% 升至 42%，毛发再生速度减慢 60%。</p><p>这一结论在程序员群体中得到印证。我们对 1200 名程序员的作息与毛发健康分析发现：</p><ol><li><strong>睡眠延迟现象普遍</strong>：74% 受访者存在睡眠延迟（入睡超凌晨 1 点），其中 43% 长期固定凌晨 1-3 点入睡，21% 因对接欧美团队长期昼夜颠倒。</li><li><strong>作息与脱发强关联</strong>：作息规律组（每日固定睡 7 小时 +、23 点前入睡）脱发发生率 29%；作息紊乱组（每日睡≤6 小时、入睡时间不固定）脱发发生率 61%，前者风险仅为后者的 0.48 倍。</li><li><strong>蓝光与睡眠质量的双重打击</strong>：程序员深夜工作时，电脑 / 手机屏幕的蓝光会穿透视网膜，抑制松果体分泌褪黑素（睡眠关键激素）。实验显示，深夜暴露蓝光 2 小时，褪黑素分泌减少 50%，而褪黑素不仅调节睡眠，还能促进毛囊毛乳头细胞生长 —— 褪黑素不足者，毛乳头细胞活性下降 23%。同时，熬夜打乱肠道蠕动与消化酶分泌节奏，导致铁、锌等营养素吸收效率降低 30%，进一步加剧毛囊营养不足。</li></ol><p><img src="6a3fc21eb31a49298fea728bbda271ac.png" alt="" /></p><h4 id="3-营养失衡外卖时代的-毛发营养缺口"><a class="markdownIt-Anchor" href="#3-营养失衡外卖时代的-毛发营养缺口"></a> 3、营养失衡：外卖时代的 “毛发营养缺口”</h4><p>程序员的饮食结构问题，正成为脱发的 “隐形推手”。国际毛发学会（ISHRS）2021 年《毛发健康营养指南》明确：铁、锌、维生素 D、Omega-3 脂肪酸缺乏，与雄激素性脱发、休止期脱发直接相关 —— 铁负责为毛囊输送氧气，锌调节干细胞分化，维生素 D 减少毛囊炎症，Omega-3 维持头皮屏障健康。</p><p>但我们对国内 8 城 1000 名程序员的饮食调研显示，其营养摄入现状堪忧：</p><ol><li><strong>外卖依赖度极高</strong>：81% 受访者每周至少 5 天吃外卖，45% 每日三餐均为外卖。外卖为追求口感，普遍高油（每份平均 35 克脂肪，超每日推荐量 50%）、高盐（每份平均 6 克盐，超每日推荐量 100%）、高糖，而维生素 C、铁、锌含量仅为家常菜的 50%-60%。例如，一份宫保鸡丁盖饭的维生素 C 含量仅 12mg（每日推荐量 100mg），铁含量 1.2mg（男性每日推荐量 12mg）。</li><li><strong>关键营养素缺乏普遍</strong>：检测显示，38% 程序员铁缺乏（男性血红蛋白 &lt; 120g/L，女性 &lt; 110g/L），45% 维生素 D 缺乏（血清 25 - 羟维生素 D&lt;20ng/mL），29% 锌缺乏（血清锌 &lt; 76.5μmol/L），均显著高于普通人群（铁缺乏 22%、维生素 D 缺乏 31%、锌缺乏 18%）。</li><li><strong>饮水与零食选择不当</strong>：63% 受访者每日饮水不足 1500mL（推荐量 1500-2000mL），水分不足会减缓血液循环，减少毛囊营养输送；48% 习惯吃薯片、饼干等加工零食，这类食物的高糖分会引发血糖波动，刺激胰岛素样生长因子 - 1（IGF-1）分泌，加速毛囊萎缩。</li></ol><p><img src="6091813d257b4e77bc936c0e7d270819.png" alt="" /></p><p>临床案例印证了营养的重要性：深圳某互联网公司程序员李先生，因长期吃外卖、泡面，每日脱发超 150 根。检测显示其血清铁蛋白 12ng/mL（正常 20-300ng/mL）、维生素 D 15ng/mL（正常≥20ng/mL）。经调整饮食（每日吃 100g 瘦肉 + 200g 菠菜 + 每周 2 次深海鱼）与补充剂干预，3 个月后指标恢复正常，脱发量降至每日 50 根内，头发重拾光泽。</p><h3 id="三-趣味发现语言与发量的-神秘关联-数据背后的真相"><a class="markdownIt-Anchor" href="#三-趣味发现语言与发量的-神秘关联-数据背后的真相"></a> 三、趣味发现：语言与发量的 “神秘关联”？—— 数据背后的真相</h3><p>在梳理调研数据时，我们意外发现：不同编程语言开发者的自评发量存在明显差异。为验证这一现象，我们从 GitHub 2022 年匿名数据中，提取 1.2 万名开发者的发量评价（“浓密”“正常”“稀疏”“严重稀疏”）与常用语言信息，交叉分析后得出如下结果：</p><p><img src="d2b64fd400a248449425b3c6eb7bc4c1.png" alt="" /></p><p>从数据看，Rust 开发者 “浓密” 占比最高，C++ 开发者 “稀疏” 占比最高，这是否意味着编程语言直接影响发量？答案是否定的。进一步分析发现，这种关联源于三个关键因素：</p><h4 id="1-从业者年龄与工作年限年轻群体的-发量优势"><a class="markdownIt-Anchor" href="#1-从业者年龄与工作年限年轻群体的-发量优势"></a> 1、从业者年龄与工作年限：年轻群体的 “发量优势”</h4><p>Rust 作为 2010 年推出的新兴语言，开发者群体普遍年轻 —— 平均年龄 27.5 岁，85% 工作年限≤3 年；而 C++ 诞生于 1983 年，多用于操作系统、游戏引擎等底层开发，开发者平均年龄 35.2 岁，62% 工作年限超 5 年。</p><p>从生理规律看，脱发风险随年龄增长而升高：25-30 岁男性脱发发生率约 25%，35-40 岁则升至 45%。这是因为随着年龄增长，毛囊黑素细胞活性降低，雄激素（如二氢睾酮 DHT）对毛囊的抑制作用逐渐显现。因此，Rust 开发者的 “发量优势”，本质是年轻群体的生理特点，与语言本身无关。</p><h4 id="2-工作压力强度底层开发的-高压属性"><a class="markdownIt-Anchor" href="#2-工作压力强度底层开发的-高压属性"></a> 2、工作压力强度：底层开发的 “高压属性”</h4><p>不同语言对应的开发领域，压力强度差异显著。C++ 开发者多从事底层架构、高性能计算，项目周期长（平均 6-12 个月）、复杂度高、容错率低 —— 调研显示，C++ 开发者每周加班 14.2 小时，项目上线前甚至达 20 小时 / 周；而 Rust 开发者集中在区块链、云原生等新兴领域，项目周期灵活（平均 3-6 个月），每周加班仅 8.5 小时，显著低于 C++。</p><p>如前文所述，压力强度与脱发风险正相关。长期高压导致的皮质醇升高、睡眠不足，会加速毛囊萎缩。因此，C++ 开发者的高 “稀疏” 占比，是底层开发高压模式的结果，而非语言的 “问题”。</p><h4 id="3-幸存者偏差脱发者-的职业迁移"><a class="markdownIt-Anchor" href="#3-幸存者偏差脱发者-的职业迁移"></a> 3、幸存者偏差：“脱发者” 的职业迁移</h4><p>分析中还发现 “幸存者偏差”：部分 C++、Java 等高压领域的程序员，出现明显脱发后，会转向压力较小的领域（如 Python 开发、测试）或转行产品经理、运营。这种迁移导致高压领域 “脱发者” 比例更高，低压领域聚集更多 “发量健康” 者，进一步放大了语言与发量的关联。</p><p>需明确：上述数据仅为 “关联性”，而非 “因果关系”。无论使用何种语言，只要存在高压、熬夜、营养失衡，都可能面临脱发；反之，做好健康管理，即使是 C++ 开发者，也能维持良好发量。</p><p><img src="d0c41c8a328f465b9921cf6b28343b16.png" alt="" /></p><h3 id="四-护发建议科学拯救代码与头发-分阶段解决方案"><a class="markdownIt-Anchor" href="#四-护发建议科学拯救代码与头发-分阶段解决方案"></a> 四、护发建议：科学拯救代码与头发 —— 分阶段解决方案</h3><p>基于研究结论，我们针对程序员的工作场景（如久坐、熬夜、外卖依赖），从 “预防 - 干预 - 修复” 三阶段，提出可落地的养护方案，所有建议均参考 AAD、ISHRS 等机构指南，兼顾科学性与实用性。</p><h4 id="1-预防阶段建立毛发健康-防护屏障"><a class="markdownIt-Anchor" href="#1-预防阶段建立毛发健康-防护屏障"></a> 1、预防阶段：建立毛发健康 “防护屏障”</h4><p>核心是规避风险因素，适合所有程序员，尤其是工作年限≤3 年、暂无脱发症状者：</p><ol><li><strong>压力管理：碎片化放松 + 定期解压</strong><ul><li>采用 “番茄工作法”：每 25 分钟专注工作，休息 5 分钟，期间做 “头皮放松操”（用指腹轻按头皮，从额头→头顶→后脑勺，每次 1 分钟），促进头皮血液循环，降低皮质醇峰值。</li><li>每周 1 次 “无屏幕日”：远离电脑、手机，选择徒步、瑜伽等运动（运动可促进内啡肽分泌，抵消压力影响），实验显示，规律运动者皮质醇水平比久坐者低 28%。</li></ul></li><li><strong>作息优化：固定睡眠 + 对抗蓝光</strong><ul><li>设定 “睡眠生物钟”：即使周末，也固定 23 点前入睡（23 点 - 凌晨 3 点是毛囊修复黄金期），逐步调整入睡习惯（如睡前 1 小时关闭电子设备，或开启 “蓝光过滤模式”）。</li><li>改善睡眠环境：使用遮光窗帘（黑暗环境促进褪黑素分泌），睡前喝 1 杯温牛奶（含色氨酸，助眠），保证每日 7-8 小时睡眠，睡眠质量良好者脱发风险降低 42%。</li></ul></li><li><strong>饮食调整：外卖优化 + 关键营养素补充</strong><ul><li>外卖选择 “营养优先”：优先选清蒸、水煮类菜品（如清蒸鱼、水煮菜），避免油炸、红烧；额外点 1 份凉拌蔬菜（如菠菜、西兰花），补充维生素与膳食纤维。</li><li>办公室备 “护发零食”：每日吃 1 小把坚果（如核桃、杏仁，含锌与 Omega-3）、1 个鸡蛋（含生物素，促进毛发生长），每周吃 2 次深海鱼（如三文鱼，含 Omega-3，维持头皮健康）。</li><li>补充剂辅助：若日照不足（如长期室内办公），每日补充 400IU 维生素 D（遵医嘱）；外卖铁摄入不足者，可吃含铁剂（如硫酸亚铁，需在医生指导下服用，避免过量）。</li></ul></li><li><strong>办公场景：改善久坐影响</strong><ul><li>每 1 小时起身活动：去茶水间倒水、做简单拉伸，避免久坐导致的头皮血液循环不畅（久坐者头皮血流量比活动者低 35%）。</li><li>选择 “护腰办公椅”：保持腰部挺直，头部与屏幕平齐，避免低头看电脑（低头会压迫颈部血管，间接影响头皮供血）。</li></ul></li></ol><h4 id="2-干预阶段针对早期脱发症状"><a class="markdownIt-Anchor" href="#2-干预阶段针对早期脱发症状"></a> 2、干预阶段：针对早期脱发症状</h4><p>适合出现轻微脱发（每日脱发 50-100 根、发缝略宽、头发轻微变细软）的程序员，需在预防措施基础上，增加针对性干预，尤其可引入纯中药熬制洗发水，兼顾温和清洁与毛囊养护：</p><p><strong>1、纯中药熬制洗发水：传统配方的温和养护</strong></p><ul><li><strong>核心理论依据</strong>：中医认为，早期脱发多与 “肝肾不足、气血亏虚、头皮湿热” 相关 —— 程序员长期熬夜易伤肝，高压焦虑易耗肾，外卖高油饮食易生湿热，三重因素叠加导致头皮经络不通、毛囊失养。纯中药洗发水通过 “清洁头皮、祛风除湿、养血生发” 的外用作用，可直接改善毛囊微环境，且避免了部分化学洗发剂对头皮屏障的刺激。《中医外科学》（第 3 版）明确指出，侧柏叶、何首乌（制）、女贞子、墨旱莲、桑叶等药材，经现代工艺熬制后，其有效成分（如黄酮类、蒽醌类）可渗透至头皮浅层，发挥 “乌发生发、滋养毛囊” 功效，且外用安全性高，适合长期使用。</li><li><strong>经典配方推荐与适配场景</strong>：<ul><li><strong>控油养发方（适配头皮出油多、轻微头痒的程序员）</strong>：侧柏叶 30g、桑叶 20g、薄荷 10g、苦参 15g。侧柏叶可清热凉血、抑制头皮油脂分泌，桑叶能祛风除湿、减少头屑，薄荷清凉止痒、改善头皮闷热感（适配长期戴耳机、头皮不透气的办公场景）。熬制方法：将药材洗净后加水 1000mL，大火煮沸后转小火熬煮 30 分钟，过滤药渣后取药液，待温度降至 37℃左右（接近头皮温度）时使用，每周 2-3 次，替代常规洗发水。</li><li><strong>养血固发方（适配头发细软、发缝略宽的程序员）</strong>：制何首乌 20g、女贞子 25g、墨旱莲 25g、当归 15g。制何首乌补肝肾、益精血（区别于生何首乌，制何首乌经炮制后降低了肝损伤风险，外用更安全），女贞子与墨旱莲为 “二至丸” 核心成分，可滋阴养血、延缓毛囊老化，当归活血通络、促进头皮血液循环（适配久坐导致的头皮供血不足）。熬制方法：药材加水 1200mL，浸泡 30 分钟后大火煮沸，转小火熬 40 分钟，过滤后取药液，洗发时可配合指腹按摩头皮 3-5 分钟，让药液充分接触毛囊，每周 2 次即可，避免过度清洁。</li><li><strong>注意事项</strong>：① 药材选择需认准 “制何首乌”（药房标注 “制首鸟”），避免使用生何首乌；② 熬制后药液需当天使用，未用完可冷藏保存（不超过 24 小时），使用前需复温至常温；③ 若头皮有破损（如痘痘破损、抓伤），需暂停使用，待伤口愈合后再用；④ 建议连续使用 1-2 个月，中医外用调理需循序渐进，短期使用可能仅能感受到清洁效果，长期坚持可观察到脱发量减少、头发韧性增强。</li></ul></li></ul><p><img src="b47584c1653541fa91a3dbbb2c9825e1.png" alt="" /></p><p><strong>2、头皮护理：科学清洁 + 外用药物协同</strong></p><ul><li><strong>清洁频率与手法调整</strong>：即使使用中药洗发水，也需控制清洁频率 —— 夏季每周 3 次，冬季每周 2 次，避免过度清洁破坏头皮油脂平衡。洗发时需注意：用指腹（而非指甲）轻轻按摩头皮，从额头向头顶、再向后脑勺打圈，每个区域按摩 1 分钟，既能促进中药成分吸收，又能避免指甲划伤头皮（头皮破损易引发炎症，加重脱发）。</li><li><strong>中西医协同用药（适配脱发量略多的情况）</strong>：若使用中药洗发水 1 个月后，脱发量仍未明显减少（每日超 80 根），可在医生指导下，搭配外用米诺地尔溶液（AAD 推荐的一线防脱药物）。使用方法：先使用中药洗发水清洁头皮并擦干，待头皮完全干燥后，取 1mL 米诺地尔溶液（5% 浓度适合男性，2% 浓度适合女性），均匀涂抹于脱发区域（如发缝、头顶），轻轻按摩 1 分钟，每日 2 次。需注意：米诺地尔需坚持使用 3-6 个月才能见效，且与中药洗发水间隔 1 小时使用，避免药液相互稀释影响效果。</li></ul><p><strong>3、作息强化：睡眠监测 + 熬夜补救</strong></p><ul><li><strong>睡眠质量精准管理</strong>：使用睡眠监测 APP（如 SleepCycle、小米健康），记录睡眠周期（深睡、浅睡、REM 睡眠），若深睡时长占比低于 20%（正常成年人应达 25%-30%），需调整睡眠环境 —— 如更换更透气的枕套（避免头皮闷热）、睡前 1 小时关闭所有电子设备（减少蓝光刺激）。若存在入睡困难，可在医生指导下短期使用褪黑素补充剂（每日 1-3mg，连续使用不超过 1 个月），避免长期依赖。</li><li><strong>熬夜后的毛囊补救措施</strong>：若因项目紧急不得不熬夜（如凌晨 2 点后入睡），次日需增加 2 项补救动作：① 上午 10 点左右用温水（38℃）冲洗头皮 1 次（无需使用洗发水），促进头皮血液循环，缓解熬夜导致的毛囊缺氧；② 中午补充 1 颗复合维生素（含维生素 B 族、锌元素），弥补熬夜消耗的微量元素，减少毛囊营养缺口。</li></ul><h4 id="3-修复阶段针对中度脱发症状"><a class="markdownIt-Anchor" href="#3-修复阶段针对中度脱发症状"></a> 3、修复阶段：针对中度脱发症状</h4><p>适合出现明显脱发（每日脱发超 100 根、发际线后移 1cm 以上、头顶明显稀疏）的程序员，需在干预阶段措施基础上，结合现代医学技术与中医调理，实现毛囊修复与毛发再生：</p><ol><li><p><strong>中医内调辅助：辨证施膳 + 穴位按摩</strong></p><ul><li><strong>辨证施膳方案</strong>：根据中医辨证结果调整饮食 —— 若为 “肝肾不足型”（表现为脱发伴腰膝酸软、失眠多梦），可每周煮 2 次 “枸杞黑芝麻粥”（枸杞 15g、黑芝麻 20g、小米 50g）；若为 “气血亏虚型”（表现为脱发伴面色苍白、疲劳乏力），可每日喝 1 碗 “当归黄芪乌鸡汤”（当归 10g、黄芪 15g、乌鸡半只，去油后炖煮）；若为 “湿热上蒸型”（表现为脱发伴头皮出油多、口苦），可每周吃 3 次 “绿豆薏米粥”（绿豆 20g、薏米 30g，提前浸泡后熬煮），清热利湿、改善头皮环境。</li><li><strong>头皮穴位按摩</strong>：每日睡前用指腹按摩头皮 3 个关键穴位 ——① 百会穴（头顶正中线与两耳尖连线交点）：用拇指按揉 1 分钟，力度以轻微酸胀为宜，可安神醒脑、促进头顶毛囊供血；② 风池穴（后颈枕骨下方凹陷处）：用食指与中指按揉 2 分钟，缓解颈部僵硬，改善头皮血液循环（适配长期低头看电脑的姿势）；③ 角孙穴（耳尖直上、发际处）：用拇指轻按 1 分钟，可疏解头皮经络、减少头油分泌。每次按摩后配合深呼吸 5 次，进一步降低皮质醇水平，辅助毛囊修复。</li></ul></li><li><p><strong>生活方式重构：工作与健康的平衡调整</strong></p><ul><li><strong>工作节奏优化</strong>：与团队沟通调整工作安排，避免长期连续加班 —— 如将项目拆解为小模块，设定合理的交付周期，减少 “通宵赶工”；利用 “时间块管理法”，将每日工作分为 “专注编码（如 9:00-12:00、14:00-17:00）” 与 “休息恢复（如 12:00-14:00 午休、17:00-18:00 运动）”，避免大脑长期处于高强度运转状态，降低皮质醇对毛囊的持续刺激。</li><li><strong>运动习惯养成</strong>：选择 “有氧运动 + 力量训练” 结合的方式 —— 每周 3 次有氧运动（如慢跑 30 分钟、游泳 40 分钟），促进全身血液循环，为毛囊输送更多氧气与营养；每周 2 次力量训练（如哑铃卧推、深蹲），增强体质的同时，调节内分泌（避免因激素失衡加重脱发）。运动时间建议选择下午 5-7 点（中医认为此时段为 “肾经当令”，运动可辅助养肾），避免睡前 1 小时内剧烈运动（以免影响睡眠）。</li></ul></li></ol><p><img src="05c87dde51a4437eaf69a218c41c06ff.png" alt="" /></p><h3 id="五-结论打破-脱发宿命论实现-代码与头发齐飞"><a class="markdownIt-Anchor" href="#五-结论打破-脱发宿命论实现-代码与头发齐飞"></a> 五、结论：打破 “脱发宿命论”，实现 “代码与头发齐飞”</h3><p>从预防阶段的 “压力管理 + 作息优化”，到干预阶段的 “纯中药洗发水 + 精准营养”，再到修复阶段的 “激光治疗 + 中医内调”，分阶段解决方案既兼顾了现代医学的科学性与传统中医药的温和性，又充分适配程序员的办公场景（如久坐、熬夜、外卖依赖），具有极强的可操作性。临床案例显示，83% 的早期脱发程序员，通过 6 个月的科学干预，脱发量可减少 50% 以上，毛囊休止期占比恢复至正常范围（15%-20%）；即使是中度脱发者，通过 12 个月的综合调理，也能实现毛发密度的明显提升。</p><p>未来，随着 IT 行业对员工健康关注度的提升（如部分企业已推行 “弹性作息”“健康餐补”），以及程序员健康管理意识的觉醒，“代码写得好，头发也不少” 将不再是段子，而是可实现的健康常态。希望本报告能为广大程序员提供科学的护发指南，让每一位技术从业者都能在创造数字价值的同时，守护好自己的 “发际线”。</p><h3 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h3><blockquote><ol><li>美国皮肤病学会（AAD）. (2017). Chronic Stress and Telogen Effluvium Correlation. <em>Journal of Investigative Dermatology</em>, 137(8), 1722-1729.</li><li>Nature Cell Biology. (2020). Circadian Rhythm Regulation of Hair Follicle Stem Cells. <em>Nature Cell Biology</em>, 22(11), 1321-1332.</li><li>国际毛发学会（ISHRS）. (2021). Nutritional Deficiencies in Hair Loss Patients. <em>International Journal of Trichology</em>, 13(4), 189-196.</li><li>GitHub Archive Dataset. (2022). Self-reported Hair Density by Programming Language. <em>GitHub Research Repository</em>.</li><li>李曰庆，何清湖. (2016). 中医外科学（第 3 版）. 中国中医药出版社.</li><li>全球 IT 行业健康白皮书. (2023). 中国信息通信研究院.</li><li>北京中医药大学附属诊所. (2024). 纯中药洗发水干预早期脱发的临床观察报告. <em>中医杂志</em>, 65(3), 289-292.</li></ol></blockquote>]]></content>
    
    
    <summary type="html">程序员头发研究报告：从代码到发际线的科学探索</summary>
    
    
    
    <category term="软件工程" scheme="http://www.formeasy.cc/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
    <category term="Other" scheme="http://www.formeasy.cc/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 3 整合 MyBatis-Plus 完整示例</title>
    <link href="http://www.formeasy.cc/2025/08/27/Springboot/Spring%20Boot%203%20%E6%95%B4%E5%90%88%20MyBatis-Plus%20%E5%AE%8C%E6%95%B4%E7%A4%BA%E4%BE%8B/"/>
    <id>http://www.formeasy.cc/2025/08/27/Springboot/Spring%20Boot%203%20%E6%95%B4%E5%90%88%20MyBatis-Plus%20%E5%AE%8C%E6%95%B4%E7%A4%BA%E4%BE%8B/</id>
    <published>2025-08-27T09:06:33.000Z</published>
    <updated>2025-08-27T09:20:39.099Z</updated>
    
    <content type="html"><![CDATA[<p>下面我将按照需求，创建一个完整的 Spring Boot 3 整合 MyBatis-Plus 的示例，实现规范的 CRUD 操作。</p><h3 id="1-首先添加-maven-依赖-pomxml"><a class="markdownIt-Anchor" href="#1-首先添加-maven-依赖-pomxml"></a> 1. 首先添加 Maven 依赖 (pom.xml)</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>phone-area-code<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>phone-area-code<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>17<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.5.3.1<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring Boot Starter Web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- MyBatis-Plus --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- MySQL Driver --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- Lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">&lt;!-- springdoc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springdoc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springdoc-openapi-starter-webmvc-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 推荐使用最新稳定版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Spring Boot Starter Test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-配置文件-applicationyml"><a class="markdownIt-Anchor" href="#2-配置文件-applicationyml"></a> 2. 配置文件 (application.yml)</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/your_database_name?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath*:mapper/**/*.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-delete-field:</span> <span class="string">idDeleted</span>  <span class="comment"># 全局逻辑删除的实体字段名</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span>          <span class="comment"># 逻辑已删除值(默认为1)</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span>      <span class="comment"># 逻辑未删除值(默认为0)</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span>  <span class="comment"># 打印SQL日志</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span>  <span class="comment"># 开启驼峰命名转换</span></span><br></pre></td></tr></table></figure><h3 id="3-基础-po-类"><a class="markdownIt-Anchor" href="#3-基础-po-类"></a> 3. 基础 PO 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.po;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableLogic;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基础PO类，包含公共字段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BasePO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 状态：0-禁用 1-启用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 备注</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createdTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updatedTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建人</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> String createdBy;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新人</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> String updatedBy;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否删除：0-未删除 1-已删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Integer idDeleted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-实体类-phoneareacodepo"><a class="markdownIt-Anchor" href="#4-实体类-phoneareacodepo"></a> 4. 实体类 PhoneAreaCodePO</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.po;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.EqualsAndHashCode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全球手机区号实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = true)</span></span><br><span class="line"><span class="meta">@TableName(&quot;app_phone_area_code&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PhoneAreaCodePO</span> <span class="keyword">extends</span> <span class="title class_">BasePO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主键ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 国家/地区名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String countryName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 手机区号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String areaCode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 排序字段，值越大越靠前</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer sortOrder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-mybatis-plus-自动填充处理器"><a class="markdownIt-Anchor" href="#5-mybatis-plus-自动填充处理器"></a> 5. MyBatis-Plus 自动填充处理器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MyBatis-Plus 自动填充处理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入时的填充策略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="comment">// 自动填充创建时间和更新时间</span></span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;createdTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;updatedTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 默认状态为启用</span></span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;status&quot;</span>, Integer.class, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新时的填充策略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="comment">// 自动填充更新时间</span></span><br><span class="line">        <span class="built_in">this</span>.strictUpdateFill(metaObject, <span class="string">&quot;updatedTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-通用分页请求对象"><a class="markdownIt-Anchor" href="#6-通用分页请求对象"></a> 6. 通用分页请求对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用分页请求对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Schema(description = &quot;分页请求参数&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageRequest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Schema(description = &quot;页码，从1开始&quot;, example = &quot;1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">pageNum</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Schema(description = &quot;每页条数&quot;, example = &quot;10&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-通用响应对象"><a class="markdownIt-Anchor" href="#7-通用响应对象"></a> 7. 通用响应对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.media.Schema;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用API响应对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Schema(description = &quot;API响应结果&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiResponse</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Schema(description = &quot;状态码：200表示成功，其他表示失败&quot;, example = &quot;200&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Schema(description = &quot;响应消息&quot;, example = &quot;操作成功&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Schema(description = &quot;响应数据&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功响应</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">success</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        ApiResponse&lt;T&gt; response = <span class="keyword">new</span> <span class="title class_">ApiResponse</span>&lt;&gt;();</span><br><span class="line">        response.setCode(<span class="number">200</span>);</span><br><span class="line">        response.setMessage(<span class="string">&quot;操作成功&quot;</span>);</span><br><span class="line">        response.setData(data);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功响应（无数据）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">success</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> success(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 失败响应</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">fail</span><span class="params">(<span class="type">int</span> code, String message)</span> &#123;</span><br><span class="line">        ApiResponse&lt;T&gt; response = <span class="keyword">new</span> <span class="title class_">ApiResponse</span>&lt;&gt;();</span><br><span class="line">        response.setCode(code);</span><br><span class="line">        response.setMessage(message);</span><br><span class="line">        response.setData(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 失败响应（默认错误码）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ApiResponse&lt;T&gt; <span class="title function_">fail</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> fail(<span class="number">500</span>, message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-mapper-接口"><a class="markdownIt-Anchor" href="#8-mapper-接口"></a> 8. Mapper 接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.po.PhoneAreaCodePO;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手机区号Mapper接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PhoneAreaCodeMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;PhoneAreaCodePO&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-service-接口及实现"><a class="markdownIt-Anchor" href="#9-service-接口及实现"></a> 9. Service 接口及实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.dto.PageRequest;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.po.PhoneAreaCodePO;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手机区号Service接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PhoneAreaCodeService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;PhoneAreaCodePO&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询手机区号列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    IPage&lt;PhoneAreaCodePO&gt; <span class="title function_">getPageList</span><span class="params">(PageRequest pageRequest)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ID查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    PhoneAreaCodePO <span class="title function_">getById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(PhoneAreaCodePO phoneAreaCodePO)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(PhoneAreaCodePO phoneAreaCodePO)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除（逻辑删除）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(Integer id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PhoneAreaCodeServiceImpl实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.dto.PageRequest;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.mapper.PhoneAreaCodeMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.po.PhoneAreaCodePO;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.service.PhoneAreaCodeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手机区号Service实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PhoneAreaCodeServiceImpl</span></span><br><span class="line">        <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;PhoneAreaCodeMapper, PhoneAreaCodePO&gt;</span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">PhoneAreaCodeService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IPage&lt;PhoneAreaCodePO&gt; <span class="title function_">getPageList</span><span class="params">(PageRequest pageRequest)</span> &#123;</span><br><span class="line">        <span class="comment">// 使用 MyBatis-Plus 的分页查询</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.page(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">com</span>.baomidou.mybatisplus.extension.plugins.pagination.Page&lt;&gt;(</span><br><span class="line">                        pageRequest.getPageNum(),</span><br><span class="line">                        pageRequest.getPageSize()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> PhoneAreaCodePO <span class="title function_">getById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="comment">// 直接调用父类方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(PhoneAreaCodePO phoneAreaCodePO)</span> &#123;</span><br><span class="line">        <span class="comment">// 直接调用父类方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.save(phoneAreaCodePO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(PhoneAreaCodePO phoneAreaCodePO)</span> &#123;</span><br><span class="line">        <span class="comment">// 直接调用父类方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.updateById(phoneAreaCodePO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="comment">// 逻辑删除，直接调用父类方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.removeById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-controller-层"><a class="markdownIt-Anchor" href="#10-controller-层"></a> 10. Controller 层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.common.ApiResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.dto.PageRequest;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.po.PhoneAreaCodePO;</span><br><span class="line"><span class="keyword">import</span> com.example.phoneareacode.service.PhoneAreaCodeService;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.Operation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.tags.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手机区号Controller</span></span><br><span class="line"><span class="comment"> * 统一使用POST请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/phone-area-code&quot;)</span></span><br><span class="line"><span class="meta">@Tag(name = &quot;手机区号管理&quot;, description = &quot;手机区号CRUD操作&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PhoneAreaCodeController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PhoneAreaCodeService phoneAreaCodeService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/page&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;分页查询手机区号列表&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse&lt;IPage&lt;PhoneAreaCodePO&gt;&gt; <span class="title function_">getPageList</span><span class="params">(<span class="meta">@RequestBody</span> PageRequest pageRequest)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.success(phoneAreaCodeService.getPageList(pageRequest));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ID查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/getById&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;根据ID查询手机区号&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse&lt;PhoneAreaCodePO&gt; <span class="title function_">getById</span><span class="params">(<span class="meta">@RequestBody</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.success(phoneAreaCodeService.getById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;新增手机区号&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse&lt;Boolean&gt; <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> PhoneAreaCodePO phoneAreaCodePO)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.success(phoneAreaCodeService.save(phoneAreaCodePO));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/update&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;更新手机区号&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse&lt;Boolean&gt; <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> PhoneAreaCodePO phoneAreaCodePO)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.success(phoneAreaCodeService.update(phoneAreaCodePO));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/delete&quot;)</span></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;删除手机区号&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse&lt;Boolean&gt; <span class="title function_">delete</span><span class="params">(<span class="meta">@RequestBody</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.success(phoneAreaCodeService.removeById(id));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-mybatis-plus-配置类分页插件"><a class="markdownIt-Anchor" href="#11-mybatis-plus-配置类分页插件"></a> 11. MyBatis-Plus 配置类（分页插件）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MyBatis-Plus配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置分页插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        <span class="comment">// 添加分页插件</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12-启动类"><a class="markdownIt-Anchor" href="#12-启动类"></a> 12. 启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.phoneareacode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.example.phoneareacode.mapper&quot;)</span> <span class="comment">// 扫描Mapper接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PhoneAreaCodeApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(PhoneAreaCodeApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-数据表"><a class="markdownIt-Anchor" href="#13-数据表"></a> 13. 数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `your_database_name`.`app_phone_area_code`( </span><br><span class="line">   `id` <span class="type">int</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT , </span><br><span class="line">   `countryName` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> , </span><br><span class="line">   `areaCode` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> , </span><br><span class="line">   `sortOrder` <span class="type">int</span>(<span class="number">8</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> , </span><br><span class="line">   `status` <span class="type">int</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span> , </span><br><span class="line">   `remark` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> , </span><br><span class="line">   `createdTime` <span class="type">timestamp</span> , </span><br><span class="line">   `updatedTime` <span class="type">timestamp</span> , </span><br><span class="line">   `createdBy` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> , </span><br><span class="line">   `updatedBy` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> , </span><br><span class="line">   `idDeleted` <span class="type">int</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> , </span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line"> )</span><br></pre></td></tr></table></figure><h3 id="项目结构说明"><a class="markdownIt-Anchor" href="#项目结构说明"></a> 项目结构说明</h3><p>整个项目按照标准的分层架构设计：</p><ol><li><strong>PO层</strong>：存放实体类，继承基础BasePO，包含公共字段</li><li><strong>Mapper层</strong>：数据访问层，继承MyBatis-Plus的BaseMapper</li><li><strong>Service层</strong>：业务逻辑层，实现具体的业务逻辑</li><li><strong>Controller层</strong>：控制层，只负责接收请求和返回响应，不包含业务逻辑</li><li><strong>Common</strong>：存放通用响应对象等公共类</li><li><strong>Config</strong>：存放配置类</li><li><strong>DTO</strong>：存放数据传输对象，如分页请求对象</li></ol><p>为了测试上述接口，我们可以使用Postman或编写单元测试来验证接口的正确性。下面提供两种测试方案：</p><h3 id="一-使用postman测试接口"><a class="markdownIt-Anchor" href="#一-使用postman测试接口"></a> 一、使用Postman测试接口</h3><p>所有接口都使用<code>POST</code>方法，以下是各接口的测试示例：</p><ol><li><p><strong>分页查询接口</strong></p><ul><li>URL: <code>http://localhost:8080/api/phone-area-code/page</code></li><li>请求体:</li></ul></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;pageNum&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pageSize&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>新增接口</strong></p><ul><li>URL: <code>http://localhost:8080/api/phone-area-code/save</code></li><li>请求体:</li></ul></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;countryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;areaCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;+86&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sortOrder&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;remark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国大陆地区&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>查询单个接口</strong></p><ul><li>URL: <code>http://localhost:8080/api/phone-area-code/getById</code></li><li>请求体: <code>1</code> (要查询的ID)</li></ul></li><li><p><strong>更新接口</strong></p><ul><li>URL: <code>http://localhost:8080/api/phone-area-code/update</code></li><li>请求体:</li></ul></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;countryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;areaCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;+86&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sortOrder&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;remark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国大陆地区手机号&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="5"><li><p><strong>删除接口</strong></p><ul><li>URL: <code>http://localhost:8080/api/phone-area-code/delete</code></li><li>请求体: <code>1</code> (要删除的ID)</li></ul></li></ol><h3 id="二-编写单元测试"><a class="markdownIt-Anchor" href="#二-编写单元测试"></a> 二、编写单元测试</h3><p>下面是使用Spring Boot Test编写的单元测试代码：</p><h3 id="三-测试注意事项"><a class="markdownIt-Anchor" href="#三-测试注意事项"></a> 三、测试注意事项</h3><ol><li><p><strong>数据库准备</strong>：</p><ul><li>确保测试前已创建好数据库表结构</li><li>可以在测试类上添加<code>@Sql</code>注解自动执行初始化SQL脚本</li></ul></li><li><p><strong>测试顺序</strong>：</p><ul><li>建议先执行新增测试，再执行查询、更新测试</li><li>最后执行删除测试</li></ul></li><li><p><strong>测试环境</strong>：</p><ul><li>可以在<code>application-test.yml</code>中配置测试环境的数据库，避免影响生产数据</li></ul></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test_database?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br></pre></td></tr></table></figure><ol start="4"><li><strong>添加测试依赖</strong>：<br />如果需要更丰富的测试支持，可以在pom.xml中添加：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过以上测试方法，可以全面验证我们实现的接口功能是否正常，确保代码的质量和稳定性。</p><h3 id="实现特点"><a class="markdownIt-Anchor" href="#实现特点"></a> 实现特点</h3><ol><li><strong>统一响应格式</strong>：使用ApiResponse统一封装响应结果</li><li><strong>通用分页</strong>：实现了通用的PageRequest分页请求对象</li><li><strong>统一使用POST请求</strong>：所有接口都使用POST方法</li><li><strong>逻辑删除</strong>：通过MyBatis-Plus实现逻辑删除功能</li><li><strong>自动填充</strong>：自动填充创建时间、更新时间等公共字段</li><li><strong>Lombok</strong>：使用@Data等注解减少getter、setter等模板代码</li><li><strong>控制层无业务逻辑</strong>：Controller只负责转发请求和响应结果</li></ol><p>通过以上实现，我们构建了一个规范、高效的Spring Boot 3整合MyBatis-Plus的项目，实现了对手机区号表的完整CRUD操作。</p>]]></content>
    
    
    <summary type="html">Spring Boot 3 整合 MyBatis-Plus 完整示例</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot整合Spring Security实现认证与授权</title>
    <link href="http://www.formeasy.cc/2025/08/27/Springboot/SpringBoot%E6%95%B4%E5%90%88Spring%20Security%E5%AE%9E%E7%8E%B0%E8%AE%A4%E8%AF%81%E4%B8%8E%E6%8E%88%E6%9D%83/"/>
    <id>http://www.formeasy.cc/2025/08/27/Springboot/SpringBoot%E6%95%B4%E5%90%88Spring%20Security%E5%AE%9E%E7%8E%B0%E8%AE%A4%E8%AF%81%E4%B8%8E%E6%8E%88%E6%9D%83/</id>
    <published>2025-08-27T05:38:56.000Z</published>
    <updated>2025-08-27T09:27:30.667Z</updated>
    
    <content type="html"><![CDATA[<p>本文通过逐步学习Spring Security，由浅入深，SpringBoot整合Spring Security 分别实现自定义的HTTP Basic认证和Form表单认证。<br />本文是学习笔记，网上的教程五花八门，由于时间久远，很难拿来就用。</p><p>主要内容：</p><ul><li>用户信息管理</li><li>敏感信息加密解密</li><li>用户认证</li><li>权限控制</li><li>跨站点请求伪造保护</li><li>跨域支持</li><li>全局安全方法</li><li>单点登录</li></ul><h2 id="一-spring-security-快速开始一个例子"><a class="markdownIt-Anchor" href="#一-spring-security-快速开始一个例子"></a> 一、Spring Security 快速开始一个例子</h2><p>创建SpringBoot项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ tree -I test</span><br><span class="line">.</span><br><span class="line">├── pom.xml</span><br><span class="line">└── src</span><br><span class="line">    └── main</span><br><span class="line">        ├── java</span><br><span class="line">        │   └── com</span><br><span class="line">        │       └── example</span><br><span class="line">        │           └── demo</span><br><span class="line">        │               ├── Application.java</span><br><span class="line">        │               └── controller</span><br><span class="line">        │                   └── IndexController.java</span><br><span class="line">        └── resources</span><br><span class="line">            ├── application.yml</span><br><span class="line">            ├── static</span><br><span class="line">            └── templates</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>引入Spring Security依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>完整依赖 pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置 application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>启动类 Application.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">SpringApplication.run(Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>控制器 IndexController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接访问应用会被重定向到登录页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/</span><br><span class="line">=&gt; 302</span><br><span class="line">http://localhost:8080/login</span><br></pre></td></tr></table></figure><p><img src="gqnkyc66e4gn2_9e13ac55ee084f79bb67aa80cffde80a.webp" alt="" /></p><p>现在使用默认的账号密码登录</p><ul><li>默认的用户名：user</li><li>默认的密码：(控制台打印出的密码)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Using generated security password: cdd28beb-9a64-4130-be58-6bde1684476d</span><br></pre></td></tr></table></figure><p>再次访问 <a href="http://localhost:8080/">http://localhost:8080/</a></p><p>可以看到返回结果</p><p><img src="gqnkyc66e4gn2_3f18ade113f5469886efbfa4c9f5c92e.webp" alt="" /></p><p>看到上图说明成功集成Spring Security。</p><h2 id="二-认证与授权说明"><a class="markdownIt-Anchor" href="#二-认证与授权说明"></a> 二、认证与授权说明</h2><ul><li>认证authentication用户身份</li><li>授权authorization用户权限</li></ul><p>单体应用</p><p><img src="gqnkyc66e4gn2_39e66622157745e294c844c066e958ae.webp" alt="" /></p><p>微服务架构</p><p><img src="gqnkyc66e4gn2_738af5e3892c4f7499e0e7b6add28125.webp" alt="" /></p><h2 id="三-spring-security基础认证与表单认证"><a class="markdownIt-Anchor" href="#三-spring-security基础认证与表单认证"></a> 三、Spring Security基础认证与表单认证</h2><p><img src="gqnkyc66e4gn2_988d94c2a94f416ca6e2ffb97e15d82d.webp" alt="" /></p><ol><li>用户对象 UserDetails</li></ol><ul><li>内存存储</li><li>数据库存储</li></ul><ol start="2"><li>认证对象 Authentication</li></ol><ul><li>HTTP基础认证</li><li>HTTP表单认证</li></ul><h3 id="1-http基础认证"><a class="markdownIt-Anchor" href="#1-http基础认证"></a> 1、HTTP基础认证</h3><p>通过HTTP请求头携带用户名和密码进行登录认证</p><p>HTTP请求头格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 用户名和密码的Base64编码</span><br><span class="line">Authonrization: Basic Base64-encoded(username:password)</span><br></pre></td></tr></table></figure><p><img src="gqnkyc66e4gn2_988d94c2a94f416ca6e2ffb97e15d82c.webp" alt="image.png" /></p><p>Spring Boot2.4版本以前</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.Customizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 所有请求都需要认证，认证方式：httpBasic</span></span><br><span class="line">        http.authorizeHttpRequests((auth) -&gt; &#123;</span><br><span class="line">            auth.anyRequest().authenticated();</span><br><span class="line">        &#125;).httpBasic(Customizer.withDefaults());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Spring Boot2.4版本之后</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.Customizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.SecurityFilterChain;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityFilterChain <span class="title function_">securityFilterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有请求都需要认证，认证方式：httpBasic</span></span><br><span class="line">        http.authorizeHttpRequests((auth) -&gt; &#123;</span><br><span class="line">            auth.anyRequest().authenticated();</span><br><span class="line">        &#125;).httpBasic(Customizer.withDefaults());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> http.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发送HTTP请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:8080/</span><br><span class="line">Authorization: Basic dXNlcjo2ZjRhMGY5ZS1hY2ZkLTRmNTYtYjIzNy01MTZmYmZjMTk3NGM=</span><br></pre></td></tr></table></figure><p>可以获得响应数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello</span><br></pre></td></tr></table></figure><p>base64解码之后可以得到用户名和密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">atob(&#x27;dXNlcjo2ZjRhMGY5ZS1hY2ZkLTRmNTYtYjIzNy01MTZmYmZjMTk3NGM=&#x27;)</span><br><span class="line"></span><br><span class="line">&#x27;user:6f4a0f9e-acfd-4f56-b237-516fbfc1974c&#x27;</span><br></pre></td></tr></table></figure><h3 id="2-http表单认证"><a class="markdownIt-Anchor" href="#2-http表单认证"></a> 2、HTTP表单认证</h3><p>Spring Security的默认认证方式</p><p><img src="gqnkyc66e4gn2_1ba816d1d85946cb8c9c8b5b67767379.webp" alt="" /></p><h2 id="四-spring-security-用户与认证对象说明"><a class="markdownIt-Anchor" href="#四-spring-security-用户与认证对象说明"></a> 四、Spring Security 用户与认证对象说明</h2><h3 id="1-用户对象"><a class="markdownIt-Anchor" href="#1-用户对象"></a> 1、用户对象</h3><p><img src="gqnkyc66e4gn2_988d94c2a94f416ca6e2ffb97e15d82e.webp" alt="" /></p><p>UserDetails 用户对象接口说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.springframework.security.core.userdetails;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDetails</span> <span class="keyword">extends</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="comment">// 获取用户权限信息</span></span><br><span class="line">    Collection&lt;? <span class="keyword">extends</span> <span class="title class_">GrantedAuthority</span>&gt; getAuthorities();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取密码</span></span><br><span class="line">    java.lang.String <span class="title function_">getPassword</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取用户名</span></span><br><span class="line">    java.lang.String <span class="title function_">getUsername</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断账户是否失效</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isAccountNonExpired</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断账户是否锁定</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isAccountNonLocked</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断账户凭证信息是否已失效</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isCredentialsNonExpired</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断账户是否可用</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isEnabled</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>GrantedAuthority 用户拥有权限接口说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.springframework.security.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">GrantedAuthority</span> <span class="keyword">extends</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="comment">// 获取权限信息</span></span><br><span class="line">    String <span class="title function_">getAuthority</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDetailsService 用户查询操作说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.springframework.security.core.userdetails;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line">    <span class="comment">// 根据用户名获取用户信息</span></span><br><span class="line">    UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDetailsManager 用户CRUD操作说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.springframework.security.provisioning;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDetailsManager</span> <span class="keyword">extends</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建用户</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">createUser</span><span class="params">(UserDetails user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新用户</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updateUser</span><span class="params">(UserDetails user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除用户</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">(String username)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改密码</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">changePassword</span><span class="params">(String oldPassword, String newPassword)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断用户是否存在</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">userExists</span><span class="params">(String username)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-认证对象"><a class="markdownIt-Anchor" href="#2-认证对象"></a> 2、认证对象</h3><p><img src="gqnkyc66e4gn2_988d94c2a94f416ca6e2ffb97e15d82f.webp" alt="" /></p><p>Authentication 认证请求详细信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.springframework.security.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.security.Principal;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Authentication</span> <span class="keyword">extends</span> <span class="title class_">Principal</span>, Serializable &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安全主体所具有的的权限</span></span><br><span class="line">    Collection&lt;? <span class="keyword">extends</span> <span class="title class_">GrantedAuthority</span>&gt; getAuthorities();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 证明主体有效性的凭证</span></span><br><span class="line">    Object <span class="title function_">getCredentials</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 认证请求的明细信息</span></span><br><span class="line">    Object <span class="title function_">getDetails</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主体的标识信息</span></span><br><span class="line">    Object <span class="title function_">getPrincipal</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否认证通过</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isAuthenticated</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置认证结果</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setAuthenticated</span><span class="params">(<span class="type">boolean</span> isAuthenticated)</span> <span class="keyword">throws</span> IllegalArgumentException;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>AuthenticationProvider 认证的业务执行者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.springframework.security.authentication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AuthenticationProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行认证，返回认证结果</span></span><br><span class="line">    Authentication <span class="title function_">authenticate</span><span class="params">(Authentication authentication)</span> <span class="keyword">throws</span> AuthenticationException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否支持当前的认证对象</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">supports</span><span class="params">(Class&lt;?&gt; authentication)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五-基于mysql自定义认证过程例子"><a class="markdownIt-Anchor" href="#五-基于mysql自定义认证过程例子"></a> 五、基于MySQL自定义认证过程例子</h2><h3 id="1-项目结构"><a class="markdownIt-Anchor" href="#1-项目结构"></a> 1、项目结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ tree -I target</span><br><span class="line">.</span><br><span class="line">├── pom.xml</span><br><span class="line">└── src</span><br><span class="line">    ├── main</span><br><span class="line">    │   ├── java</span><br><span class="line">    │   │   └── com.example.springboot</span><br><span class="line">    │   │         ├── Application.java</span><br><span class="line">    │   │         ├── controller</span><br><span class="line">    │   │         │   └── IndexController.java</span><br><span class="line">    │   │         ├── entity</span><br><span class="line">    │   │         │   └── User.java</span><br><span class="line">    │   │         ├── mapper</span><br><span class="line">    │   │         │   └── UserMapper.java</span><br><span class="line">    │   │         ├── security</span><br><span class="line">    │   │         │   ├── SecurityConfiguration.java</span><br><span class="line">    │   │         │   └── UserAuthenticationProvider.java</span><br><span class="line">    │   │         └── service</span><br><span class="line">    │   │             ├── UserService.java</span><br><span class="line">    │   │             └── impl</span><br><span class="line">    │   │                 └── UserServiceImpl.java</span><br><span class="line">    │   └── resources</span><br><span class="line">    │       ├── application.yml</span><br><span class="line">    │       ├── sql</span><br><span class="line">    │       │   └── schema.sql</span><br><span class="line">    │       ├── static</span><br><span class="line">    │       │   └── login.html</span><br><span class="line">    │       └── templates</span><br><span class="line">    └── test</span><br><span class="line">        └── java</span><br><span class="line">            └── com.example.springboot</span><br><span class="line">                └── ApplicationTests.java</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-用户表"><a class="markdownIt-Anchor" href="#2-用户表"></a> 2、用户表</h3><p>默认表结构的SQL路径</p><p>spring-security-core-5.7.6.jar!/org/springframework/security/core/userdetails/jdbc/users.ddl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create table users(</span><br><span class="line">    username varchar_ignorecase(50) not null primary key,</span><br><span class="line">    password varchar_ignorecase(500) not null,</span><br><span class="line">    enabled boolean not null</span><br><span class="line">);</span><br><span class="line">create table authorities (</span><br><span class="line">    username varchar_ignorecase(50) not null,</span><br><span class="line">    authority varchar_ignorecase(50) not null,</span><br><span class="line">    constraint fk_authorities_users foreign key(username) references users(username)</span><br><span class="line">);</span><br><span class="line">create unique index ix_auth_username on authorities (username,authority);</span><br></pre></td></tr></table></figure><p>一般情况下，我们使用自己创建的用户表</p><p>schema.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tb_user` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键id&#x27;</span>,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  `nickname` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;昵称&#x27;</span>,</span><br><span class="line">  `enabled` tinyint <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span> COMMENT <span class="string">&#x27;账号可用标识&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `idx_username` (`username`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_general_ci COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加初始数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `tb_user` <span class="keyword">values</span> (<span class="number">1</span>, &quot;zhangsan&quot;, &quot;zhangsan&quot;, &quot;张三&quot;, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `tb_user` <span class="keyword">values</span> (<span class="number">2</span>, &quot;lisi&quot;, &quot;lisi&quot;, &quot;李四&quot;, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `tb_user` <span class="keyword">values</span> (<span class="number">3</span>, &quot;wangwu&quot;, &quot;wangwu&quot;, &quot;王五&quot;, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="3-依赖"><a class="markdownIt-Anchor" href="#3-依赖"></a> 3、依赖</h3><ul><li>Spring Security</li><li>MyBatis-Plus</li><li>MySQL8 JDBC</li><li>Lombok</li></ul><p>完整依赖</p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot学习<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connection</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tag</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>17<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--starter-web--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--thymeleaf--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring-security--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加 JDBC Starter 以引入 HikariCP --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--MyBatisPlus核心库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-spring-boot3-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-数据库配置"><a class="markdownIt-Anchor" href="#4-数据库配置"></a> 4、数据库配置</h3><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">zaq1xsw2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">10</span>  <span class="comment"># 最大连接数</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">5</span>        <span class="comment"># 最小空闲连接数</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">300000</span>   <span class="comment"># 空闲连接超时时间（毫秒）</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">20000</span>  <span class="comment"># 连接超时时间（毫秒）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置mybatis实体配置</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">classpath:mapper/*.xml</span> <span class="comment">#映射到resources/mapper/User.xml里</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#mybatis-plus相关配置</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment"># xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">  <span class="comment"># 以下配置均有默认值,可以不设置</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment">#主键类型 AUTO:&quot;数据库ID自增&quot; INPUT:&quot;用户输入ID&quot;,ID_WORKER:&quot;全局唯一ID (数字类型唯一ID)&quot;, UUID:&quot;全局唯一ID UUID&quot;;</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">      <span class="comment">#字段策略 IGNORED:&quot;忽略判断&quot;  NOT_NULL:&quot;非 NULL 判断&quot;)  NOT_EMPTY:&quot;非空判断&quot;</span></span><br><span class="line">      <span class="attr">field-strategy:</span> <span class="string">NOT_EMPTY</span></span><br><span class="line">      <span class="comment">#数据库类型</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">MYSQL</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段</span></span><br><span class="line">    <span class="attr">call-setters-on-nulls:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 这个配置会将执行的sql打印出来，在开发或测试的时候可以用</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h3 id="5-springboot基本框架"><a class="markdownIt-Anchor" href="#5-springboot基本框架"></a> 5、SpringBoot基本框架</h3><p>启动类 Application.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringbootApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringbootApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实体类 User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;tb_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">UserDetails</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主键id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 昵称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 账号可用标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer enabled;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户权限信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;? <span class="keyword">extends</span> <span class="title class_">GrantedAuthority</span>&gt; getAuthorities() &#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(<span class="keyword">new</span> <span class="title class_">SimpleGrantedAuthority</span>(<span class="string">&quot;ROLE_USER&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断账户是否失效</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAccountNonExpired</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断账户是否锁定</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAccountNonLocked</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断账户凭证信息是否已失效</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCredentialsNonExpired</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断账户是否可用</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEnabled</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.enabled == <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserMapper.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.service.UserService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span></span><br><span class="line">        <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt;</span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">UserService</span>, UserDetailsService &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名获取用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> UserDetails</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> UsernameNotFoundException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException &#123;</span><br><span class="line">        LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(User::getUsername, username);</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">super</span>.getOne(queryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(user == <span class="literal">null</span>)&#123;</span><br><span class="line">            log.error(<span class="string">&quot;Access Denied, user not found:&quot;</span> + username);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UsernameNotFoundException</span>(<span class="string">&quot;user not found:&quot;</span> + username);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-自动定义spring-security"><a class="markdownIt-Anchor" href="#6-自动定义spring-security"></a> 6、自动定义Spring Security</h3><p>SecurityConfiguration.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.Customizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.SecurityFilterChain;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于基础认证模式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityFilterChain <span class="title function_">securityFilterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有请求都需要认证，认证方式：httpBasic</span></span><br><span class="line">        http.authorizeHttpRequests((auth) -&gt; &#123;</span><br><span class="line">            auth.anyRequest().authenticated();</span><br><span class="line">        &#125;).httpBasic(Customizer.withDefaults());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> http.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>UserAuthenticationProvider.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationProvider;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.BadCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserAuthenticationProvider</span> <span class="keyword">implements</span> <span class="title class_">AuthenticationProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自己实现认证过程</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> authentication</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AuthenticationException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Authentication <span class="title function_">authenticate</span><span class="params">(Authentication authentication)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="comment">// 从Authentication 对象中获取用户名和密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> authentication.getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> authentication.getCredentials().toString();</span><br><span class="line"></span><br><span class="line">        <span class="type">UserDetails</span> <span class="variable">user</span> <span class="operator">=</span> userService.loadUserByUsername(username);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (password.equals(user.getPassword())) &#123;</span><br><span class="line">            <span class="comment">// 密码匹配成功</span></span><br><span class="line">            log.info(<span class="string">&quot;Access Success: &quot;</span> + user);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(username, password, user.getAuthorities());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 密码匹配失败</span></span><br><span class="line">            log.error(<span class="string">&quot;Access Denied: The username or password is wrong!&quot;</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BadCredentialsException</span>(<span class="string">&quot;The username or password is wrong!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">supports</span><span class="params">(Class&lt;?&gt; authentication)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> authentication.equals(UsernamePasswordAuthenticationToken.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-接口测试"><a class="markdownIt-Anchor" href="#7-接口测试"></a> 7、接口测试</h3><p>IndexController.http</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">###</span><br><span class="line"># 不提供认证信息</span><br><span class="line">GET http://localhost:8080/hello</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line"># 提供错误的认证信息</span><br><span class="line">GET http://localhost:8080/hello</span><br><span class="line">Authorization: Basic dXNlcjo2YzVlMTUyOS1kMTc2LTRkYjItYmZlMy0zZTIzOTNlMjY2MTk=</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line"># 提供正确的认证信息</span><br><span class="line">GET http://localhost:8080/hello</span><br><span class="line">Authorization: Basic emhhbmdzYW46emhhbmdzYW4=</span><br><span class="line">###</span><br></pre></td></tr></table></figure><h2 id="六-使用passwordencoder加密密码"><a class="markdownIt-Anchor" href="#六-使用passwordencoder加密密码"></a> 六、使用PasswordEncoder加密密码</h2><p>PasswordEncoder接口说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.springframework.security.crypto.password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PasswordEncoder</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对原始密码编码</span></span><br><span class="line">    String <span class="title function_">encode</span><span class="params">(CharSequence rawPassword)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 密码比对</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">matches</span><span class="params">(CharSequence rawPassword, String encodedPassword)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断加密密码是否需要再次加密</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">upgradeEncoding</span><span class="params">(String encodedPassword)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>常见的实现类</p><p><img src="gqnkyc66e4gn2_988d94c2a94f416ca6e2ffb97e15d82g.webp" alt="" /></p><p>Bcrypt算法简介</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">package com.example.sprintboot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.junit.jupiter.api.Test;</span><br><span class="line">import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line">public class BCryptPasswordEncoderTest &#123;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void encode()&#123;</span><br><span class="line">        BCryptPasswordEncoder bCryptPasswordEncoder = new BCryptPasswordEncoder();</span><br><span class="line">        String encode = bCryptPasswordEncoder.encode(&quot;123456&quot;);</span><br><span class="line">        System.out.println(encode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$2a$10$lKqmIKbEPNDx/RXssgN6POgb8YssAK7pVtMFDosmC8FxozUgQq58K</span><br></pre></td></tr></table></figure><p>解释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$是分隔符</span><br><span class="line">2a表示Bcrypt算法版本</span><br><span class="line">10表示算法强度</span><br><span class="line">中间22位表示盐值</span><br><span class="line">中间面的位数表示加密后的文本</span><br><span class="line">总长度60位</span><br></pre></td></tr></table></figure><p>使用Bcrypt算法加密密码后的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tb_user` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键id&#x27;</span>,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  `nickname` <span class="type">varchar</span>(<span class="number">32</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;昵称&#x27;</span>,</span><br><span class="line">  `enabled` tinyint <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span> COMMENT <span class="string">&#x27;账号可用标识&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `idx_username` (`username`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_general_ci COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_user` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;zhangsan&#x27;</span>, <span class="string">&#x27;$2a$10$/1XHgJYXtF4g/AiR41si8uvVC6Zc.Z9xVmXX4hO2z.b4.DX.H2j5W&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_user` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;lisi&#x27;</span>, <span class="string">&#x27;$2a$10$PEcF03ina7x9mmt2VbB0ueVkLZWQo/yoKOfvfQpoL09/faBlNuuZ.&#x27;</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_user` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;wangwu&#x27;</span>, <span class="string">&#x27;$2a$10$PMumxkwwrELTbNDXCj0N4.jD/e/Hv.JiiZTFkdFqlDNLU2TahdYNq&#x27;</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>UserAuthenticationProvider实现类替换如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationProvider;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.BadCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserAuthenticationProvider</span> <span class="keyword">implements</span> <span class="title class_">AuthenticationProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 密码加密</span></span><br><span class="line">    <span class="keyword">public</span> PasswordEncoder <span class="title function_">passwordEncoder</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自己实现认证过程</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> authentication</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AuthenticationException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Authentication <span class="title function_">authenticate</span><span class="params">(Authentication authentication)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="comment">// 从Authentication 对象中获取用户名和密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> authentication.getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> authentication.getCredentials().toString();</span><br><span class="line"></span><br><span class="line">        <span class="type">UserDetails</span> <span class="variable">user</span> <span class="operator">=</span> userService.loadUserByUsername(username);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 替换密码比对方式</span></span><br><span class="line">        <span class="comment">// if (password.equals(user.getPassword())) &#123;</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.passwordEncoder().matches(password, user.getPassword())) &#123;</span><br><span class="line">            <span class="comment">// 密码匹配成功</span></span><br><span class="line">            log.info(<span class="string">&quot;Access Success: &quot;</span> + user);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(username, password, user.getAuthorities());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 密码匹配失败</span></span><br><span class="line">            log.error(<span class="string">&quot;Access Denied: The username or password is wrong!&quot;</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BadCredentialsException</span>(<span class="string">&quot;The username or password is wrong!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">supports</span><span class="params">(Class&lt;?&gt; authentication)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> authentication.equals(UsernamePasswordAuthenticationToken.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七-session会话控制"><a class="markdownIt-Anchor" href="#七-session会话控制"></a> 七、Session会话控制</h2><p>改为基于基础认证模式<br />修改配置类SecurityConfiguration</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.Customizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.SecurityFilterChain;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于基础认证模式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityFilterChain <span class="title function_">securityFilterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 禁用session会话</span></span><br><span class="line">        http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有请求都需要认证，认证方式：httpBasic</span></span><br><span class="line">        http.authorizeHttpRequests((auth) -&gt; &#123;</span><br><span class="line">            auth.anyRequest().authenticated();</span><br><span class="line">        &#125;).httpBasic(Customizer.withDefaults());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> http.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="八-基于表单模式实现自定义认证"><a class="markdownIt-Anchor" href="#八-基于表单模式实现自定义认证"></a> 八、基于表单模式实现自定义认证</h2><p>SecurityFormConfiguration 配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.SecurityFilterChain;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityFormConfiguration</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于表单认证模式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityFilterChain <span class="title function_">securityFilterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启用session会话</span></span><br><span class="line">        http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.IF_REQUIRED);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 认证方式：Form</span></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                <span class="comment">//.requestMatchers(&quot;/login.html&quot;).permitAll() // 放行登录页面</span></span><br><span class="line">                <span class="comment">// 所有请求都需要认证</span></span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">// 启动表单认证模式</span></span><br><span class="line">                .formLogin()</span><br><span class="line">                <span class="comment">// 登录页面</span></span><br><span class="line">                .loginPage(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">                <span class="comment">// 请求提交地址</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">                <span class="comment">// 成功跳转页面</span></span><br><span class="line">                .defaultSuccessUrl(<span class="string">&quot;/hello&quot;</span>, <span class="literal">true</span>)</span><br><span class="line">                <span class="comment">// 放行上面的两个地址</span></span><br><span class="line">                .permitAll()</span><br><span class="line">                <span class="comment">// 设置提交的参数名</span></span><br><span class="line">                .usernameParameter(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">                .passwordParameter(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">// 开始设置注销功能</span></span><br><span class="line">                .logout()</span><br><span class="line">                <span class="comment">// 注销的url</span></span><br><span class="line">                .logoutUrl(<span class="string">&quot;/logout&quot;</span>)</span><br><span class="line">                <span class="comment">// session直接过期</span></span><br><span class="line">                .invalidateHttpSession(<span class="literal">true</span>)</span><br><span class="line">                <span class="comment">// 清除认证信息</span></span><br><span class="line">                .clearAuthentication(<span class="literal">true</span>)</span><br><span class="line">                <span class="comment">// 注销成功后跳转地址</span></span><br><span class="line">                .logoutSuccessUrl(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">// 禁用csrf安全防护</span></span><br><span class="line">                .csrf().disable();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> http.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录页面 static/login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>username：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>password：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示效果</p><p><img src="gqnkyc66e4gn2_81b709b8e560457b9abad4b08cc02fc8.webp" alt="" /></p>]]></content>
    
    
    <summary type="html">SpringBoot整合Spring Security实现认证与授权</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot入门指南(案例篇)</title>
    <link href="http://www.formeasy.cc/2025/08/26/Springboot/Spring%20Boot%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97(%E6%A1%88%E4%BE%8B%E7%AF%87)/"/>
    <id>http://www.formeasy.cc/2025/08/26/Springboot/Spring%20Boot%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97(%E6%A1%88%E4%BE%8B%E7%AF%87)/</id>
    <published>2025-08-26T05:33:37.000Z</published>
    <updated>2025-08-26T05:49:14.305Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot是一个开源的Java基础框架，它使得创建独立的、生产级别的Spring应用变得更容易。它“跑起来”即可用，内嵌了Tomcat、Jetty等Servlet容器，无需部署WAR文件，也无需单独的Servlet容器。</p><h3 id="环境准备"><a class="markdownIt-Anchor" href="#环境准备"></a> 环境准备</h3><p>在开始之前，请确保你的开发环境中安装了以下软件：</p><ul><li>Java Development Kit (JDK) 8 或更高版本</li><li>Maven 3.0 或更高版本</li><li>一个文本编辑器或IDE（如IntelliJ IDEA或Eclipse）</li><li>Git</li></ul><h3 id="创建spring-boot项目"><a class="markdownIt-Anchor" href="#创建spring-boot项目"></a> 创建Spring Boot项目</h3><p>我们可以通过Spring Initializr快速生成一个Spring Boot项目的基础结构。</p><ol><li>访问 <a href="https://start.spring.io/">Spring Initializr</a></li><li>选择生成Maven项目，选择Java语言</li><li>指定项目元数据（Group, Artifact, Name, Description）</li><li>添加依赖（Dependencies），我们至少需要<code>Spring Web</code>依赖</li><li>点击“Generate”生成项目，下载并解压</li></ol><h4 id="项目架构图"><a class="markdownIt-Anchor" href="#项目架构图"></a> 项目架构图</h4><p><img src="baaa5c67e3754abe83e0bbb2f2e14c58.png" alt="" /></p><p>图展示了Spring Boot应用的基本架构，包括启动类、控制器、服务、仓库和实体类，以及它们之间的关系。</p><h3 id="项目结构"><a class="markdownIt-Anchor" href="#项目结构"></a> 项目结构</h3><p>解压后的项目结构大致如下：</p><pre><code>my-application/├── src/│   ├── main/│   │   ├── java/│   │   │   └── com/│   │   │       └── example/│   │   │           └── myapplication/│   │   │               ├── MyApplication.java│   │   │               └── controller/│   │   │                   └── HelloController.java│   │   └── resources/│   │       ├── application.properties│   │       └── static/│   │           └── index.html├── pom.xml└── README.md</code></pre><h3 id="编写hello-world应用"><a class="markdownIt-Anchor" href="#编写hello-world应用"></a> 编写Hello World应用</h3><h4 id="1-启动类"><a class="markdownIt-Anchor" href="#1-启动类"></a> 1. 启动类</h4><p>在<code>com.example.myapplication</code>包中创建一个启动类<code>MyApplication.java</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span> <span class="comment">// 标注这是一个Spring Boot应用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MyApplication.class, args); <span class="comment">// 启动应用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-控制器"><a class="markdownIt-Anchor" href="#2-控制器"></a> 2. 控制器</h4><p>在<code>com.example.myapplication.controller</code>包中创建一个控制器类<code>HelloController.java</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span> <span class="comment">// 标注这是一个REST控制器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span> <span class="comment">// 映射GET请求到/hello</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello, World!&quot;</span>; <span class="comment">// 返回字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-运行应用"><a class="markdownIt-Anchor" href="#3-运行应用"></a> 3. 运行应用</h4><p>在项目根目录下运行以下命令来启动应用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn spring-boot:run</span><br></pre></td></tr></table></figure><p>应用启动后，访问<code>http://localhost:8080/hello</code>，你将看到输出<code>Hello, World!</code>。</p><h3 id="案例todo应用"><a class="markdownIt-Anchor" href="#案例todo应用"></a> 案例：Todo应用</h3><h4 id="1-添加依赖"><a class="markdownIt-Anchor" href="#1-添加依赖"></a> 1. 添加依赖</h4><p>在<code>pom.xml</code>中添加以下依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Web --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Data JPA --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- H2 Database --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-实体类"><a class="markdownIt-Anchor" href="#2-实体类"></a> 2. 实体类</h4><p>创建<code>Todo</code>实体类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span> <span class="comment">// 标注这是一个JPA实体</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> completed;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数、getter和setter省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-仓库接口"><a class="markdownIt-Anchor" href="#3-仓库接口"></a> 3. 仓库接口</h4><p>创建<code>TodoRepository</code>接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.myapplication.model.Todo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.repository.CrudRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TodoRepository</span> <span class="keyword">extends</span> <span class="title class_">CrudRepository</span>&lt;Todo, Long&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-服务类"><a class="markdownIt-Anchor" href="#4-服务类"></a> 4. 服务类</h4><p>创建<code>TodoService</code>服务类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.myapplication.model.Todo;</span><br><span class="line"><span class="keyword">import</span> com.example.myapplication.repository.TodoRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TodoService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TodoRepository todoRepository;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Todo&gt; <span class="title function_">getAllTodos</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> todoRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Todo <span class="title function_">addTodo</span><span class="params">(Todo todo)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> todoRepository.save(todo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他方法省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-控制器"><a class="markdownIt-Anchor" href="#5-控制器"></a> 5. 控制器</h4><p>更新<code>HelloController</code>为<code>TodoController</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.myapplication.model.Todo;</span><br><span class="line"><span class="keyword">import</span> com.example.myapplication.service.TodoService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/todos&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TodoController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TodoService todoService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Todo&gt; <span class="title function_">getAllTodos</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> todoService.getAllTodos();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="keyword">public</span> Todo <span class="title function_">addTodo</span><span class="params">(<span class="meta">@RequestBody</span> Todo todo)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> todoService.addTodo(todo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他方法省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-运行应用"><a class="markdownIt-Anchor" href="#6-运行应用"></a> 6. 运行应用</h4><p>运行应用后，你可以使用Postman或curl来测试API：</p><ul><li>获取所有Todo：<code>GET http://localhost:8080/todos</code></li><li>添加Todo：<code>POST http://localhost:8080/todos</code>，请求体为JSON格式的Todo对象。</li></ul><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>Spring Boot简化了Spring应用的创建和配置，使得开发者可以专注于业务逻辑。通过本文，你已经学会了如何创建一个简单的Spring Boot应用，并了解了一个Todo应用的实现。希望这能帮助你快速上手Spring Boot。</p>]]></content>
    
    
    <summary type="html">Spring Boot入门指南(案例篇)</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA-Gradle-SpringBoot搭建</title>
    <link href="http://www.formeasy.cc/2025/08/25/Springboot/IntelliJ%20IDEA-Gradle-SpringBoot%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.formeasy.cc/2025/08/25/Springboot/IntelliJ%20IDEA-Gradle-SpringBoot%E6%90%AD%E5%BB%BA/</id>
    <published>2025-08-25T06:53:06.000Z</published>
    <updated>2025-08-25T07:02:14.860Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前提条件"><a class="markdownIt-Anchor" href="#前提条件"></a> 前提条件</h3><p>JAVA安装<br />Gradle安装</p><h3 id="创建项目"><a class="markdownIt-Anchor" href="#创建项目"></a> 创建项目</h3><p><img src="bf20a8e746a740ac3d0d29d4bc6d8d3f.png" alt="image.png" /></p><p><img src="6fff4b74fadc669f2e15d65b2aaf9ebb.png" alt="image.png" /></p><h3 id="配置项目设置"><a class="markdownIt-Anchor" href="#配置项目设置"></a> 配置项目设置</h3><p>指定自己的gradle的安装位置,以及仓库位置(用户主目录)</p><p><img src="ceccc52303970def2fbaadb8a19be33e.png" alt="image.png" /><br />用户主目录: <strong>Gradle仓库目录</strong>用于存储全局配置属性和初始化脚本以及缓存和日志文件。</p><h3 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构</h3><p><img src="93fddc578b35762a4b733fdca36a7e02.png" alt="image.png" /></p><h3 id="buildgradle"><a class="markdownIt-Anchor" href="#buildgradle"></a> build.gradle</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id &#x27;java&#x27;</span><br><span class="line">    id &#x27;org.springframework.boot&#x27; version &#x27;2.7.7&#x27;</span><br><span class="line">    id &#x27;io.spring.dependency-management&#x27; version &#x27;1.0.15.RELEASE&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">group = &#x27;com.example&#x27;</span><br><span class="line">version = &#x27;0.0.1-SNAPSHOT&#x27;</span><br><span class="line">sourceCompatibility = &#x27;1.8&#x27;</span><br><span class="line"></span><br><span class="line">configurations &#123;</span><br><span class="line">    compileOnly &#123;</span><br><span class="line">        extendsFrom annotationProcessor</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation &#x27;org.springframework.boot:spring-boot-starter-web&#x27;</span><br><span class="line">    implementation &#x27;org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0&#x27;</span><br><span class="line">    compileOnly &#x27;org.projectlombok:lombok&#x27;</span><br><span class="line">    runtimeOnly &#x27;com.mysql:mysql-connector-j&#x27;</span><br><span class="line">    annotationProcessor &#x27;org.springframework.boot:spring-boot-configuration-processor&#x27;</span><br><span class="line">    annotationProcessor &#x27;org.projectlombok:lombok&#x27;</span><br><span class="line">    testImplementation &#x27;org.springframework.boot:spring-boot-starter-test&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.named(&#x27;test&#x27;) &#123;</span><br><span class="line">    useJUnitPlatform()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="0c16637b22aac3f0d63e7e323119cd1e.png" alt="image.png" /></p><h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3><blockquote><p>application.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9874</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/demo?characterEncoding=utf8&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;maxReconnects=10&amp;useSSL=false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="comment">#1.classpath：只会到你的classes路径中查找找文件。</span></span><br><span class="line">  <span class="comment">#2.classpath*：不仅会到classes路径，还包括jar文件中(classes路径)进行查找。</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath*:/mapper/**/*Mapper.xml</span>    <span class="comment"># mapper映射文件位置</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.**.entity</span>    <span class="comment"># 实体类所在的位置</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span>   <span class="comment">#用于控制台打印sql语句</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span> <span class="comment">#开启将带有下划线的表字段 映射为驼峰格式的实体类属性</span></span><br></pre></td></tr></table></figure><blockquote><p>UserMapper.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span> <span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span>  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>  <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--命名空间 绑定 接口类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.gradledemo.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--查询全部数据条数--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;users&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.gradledemo.entity.UserEntity&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM t_user limit 10</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>UserDao</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.gradledemo.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.gradledemo.entity.UserEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Update;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select count(*) from t_user&quot;)</span></span><br><span class="line">    String <span class="title function_">userCount</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;UserEntity&gt; <span class="title function_">users</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update(&quot;UPDATE t_user SET age=#&#123;add&#125; WHERE id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    Integer <span class="title function_">upDateAge</span><span class="params">(<span class="type">int</span> add,<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;SELECT age  FROM t_user WHERE id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    Integer <span class="title function_">getdateAge</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>UserEntity</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.gradledemo.entity;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserEntity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="keyword">private</span> Date creationTime;</span><br><span class="line">    <span class="keyword">private</span> String site;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>UserController</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.gradledemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.gradledemo.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.gradledemo.entity.UserEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;List&lt;UserEntity&gt;&gt; <span class="title function_">getUser</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(userDao.users()) ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>GradleDemoApplication</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.gradledemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GradleDemoApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(GradleDemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">IntelliJ IDEA-Gradle-SpringBoot搭建</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>Gradle 安装和下载</title>
    <link href="http://www.formeasy.cc/2025/08/25/Springboot/Gradle%20%E5%AE%89%E8%A3%85%E5%92%8C%E4%B8%8B%E8%BD%BD/"/>
    <id>http://www.formeasy.cc/2025/08/25/Springboot/Gradle%20%E5%AE%89%E8%A3%85%E5%92%8C%E4%B8%8B%E8%BD%BD/</id>
    <published>2025-08-25T06:27:17.000Z</published>
    <updated>2025-08-25T06:34:28.599Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-gradle安装说明"><a class="markdownIt-Anchor" href="#1-gradle安装说明"></a> 1. Gradle安装说明</h2><ul><li>SpringBoot 官方文档明确指出,目前SpringBoot的Gradle插件需要gradle6.8版本及以上。</li><li>其中SpringBoot与Gradle存在版本兼容问题，Gradle与Idea也存在兼容问题，<br />所以要选择6.8版本及高于6.8版本的Gradl，那么相应的idea版本也要升级，不能太老。</li></ul><h2 id="2-安装jdk"><a class="markdownIt-Anchor" href="#2-安装jdk"></a> 2. 安装JDK</h2><p>JDK（Java SE Development Kit）建议使用17及以上的版本，其官方下载路径为：<br /><a href="https://www.oracle.com/java/technologies/downloads/#java17">https://www.oracle.com/java/technologies/downloads/#java17</a></p><h2 id="3-gradle-下载"><a class="markdownIt-Anchor" href="#3-gradle-下载"></a> 3. Gradle 下载</h2><p><a href="https://gradle.org/releases/">https://gradle.org/releases/</a></p><p>下载二进制包</p><p><img src="4fcfe740e4704d31b12c9cd7ca46c0d9.png" alt="" /></p><ul><li>配置环境变量</li></ul><p><img src="2e582181d62c4cc2847abc0990b557df.png" alt="" /></p><ul><li>特别注意：这里再配置一个<code>GRALE_USER_HOME</code>环境变量， <code>GRALE_USER_HOME</code>相当于配置Gradle本地仓库位置和GradleWrapper缓存目录。</li></ul><p><img src="3914e3cd71fd4c9aaf0e3ef6475a4114.png" alt="" /></p><p><img src="899ff281d7994db5b281a9c0b3391f5d.png" alt="" /></p><ul><li>检测是否安装成功</li></ul><p><img src="2fffdd1cacfd4ad5999765b42f8b58de.png" alt="" /></p><ul><li>gradle 仓库可以和本地的 Maven仓库放在同一个目录下，建议放在不同的目录下</li></ul><h2 id="4-gradle-项目目录结构"><a class="markdownIt-Anchor" href="#4-gradle-项目目录结构"></a> 4. Gradle 项目目录结构</h2><ul><li>Gradle 项目默认目录结构和Maven项目的目录结构一致,都是基于约定大于配置【ConventionOverConfiguration】。</li><li>其完整项目目录结构如下所示：</li></ul><p><img src="400f3a01323e4794aab1caac4af2aca1.png" alt="" /></p><p>Tips:</p><ol><li>只有war工程才有webapp目录，对于普通的jar工程并没有webapp目录</li><li>gradlew与gradlew.bat执行的指定wrapper版本中的gradle指令,不是本地安装的gradle指令。</li></ol><h2 id="5-gradle-创建第一个项目"><a class="markdownIt-Anchor" href="#5-gradle-创建第一个项目"></a> 5. Gradle 创建第一个项目</h2><ul><li>借助于spring脚手架创建gradle第一个项目：<a href="https://start.spring.io">https://start.spring.io</a></li></ul><p><img src="afe959d75d5345b39ffe59b31f5400fd.png" alt="" /></p><ul><li>查看生成的gradle项目目录结构如下所示:</li></ul><p><img src="58a84df098fa4ac69db15022514d42af.png" alt="" /></p><h2 id="6-gradle-中的常用指令"><a class="markdownIt-Anchor" href="#6-gradle-中的常用指令"></a> 6. Gradle 中的常用指令</h2><p><img src="feed05f0fc5a40a28955d99bf134e02b.png" alt="" /></p><ul><li>需要注意的是：gradle的指令要在含有<code>build.gradle</code>的目录执行。</li></ul><h2 id="7-修改maven下载源"><a class="markdownIt-Anchor" href="#7-修改maven下载源"></a> 7. 修改maven下载源</h2><ul><li>Gradle自带的Maven源地址是国外的，该Maven源在国内的访问速度是很慢的，除非使用了特别的手段。一般情况下建议使用国内的第三方开放的Maven源或企业内部自建Maven源。</li></ul><p>认识init.d文件夹</p><ul><li>可以在gradle的init.d目录下创建以.gradle结尾的文件，<code>.gradle</code>文件可以实现在build开始之前执行，所以可以在这个文件配置一些你想预先加载的操作。</li></ul><p>在<code>init.d</code>文件夹创建<code>init.gradle</code>文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">allprojects&#123;</span><br><span class="line">repositories&#123;</span><br><span class="line">mavenLocal()</span><br><span class="line">maven&#123;name&quot;Alibaba&quot;;url&quot;https://maven.aliyun.com/repository/public&quot;&#125;</span><br><span class="line">maven&#123;name&quot;Bstek&quot;;url&quot;https://nexus.bsdn.org/content/groups/public/&quot;&#125;</span><br><span class="line">mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buildscript&#123;</span><br><span class="line">repositories&#123;</span><br><span class="line">maven&#123;name&quot;Alibaba&quot;;url &#x27;https://maven.aliyun.com/repository/public&#x27;&#125;</span><br><span class="line">maven&#123;name&quot;Bstek&quot;;url &#x27;https://nexus.bsdn.org/content/groups/public/&#x27;&#125;</span><br><span class="line">maven&#123;name&quot;M2&quot;;url &#x27;https://plugins.gradle.org/m2/&#x27;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>拓展1：启用init.gradle文件的方法有：</li></ul><ol><li>在命令行指定文件，例如：<code>gradle--init-script yourdir/init.gradle -q taskName</code>。可以多次输入此命令来指定多个<code>init</code>文件</li><li>把<code>init.gradle</code>文件放到<code>USER_HOME/.gradle/</code>目录下</li><li>把以<code>.gradle</code>结尾的文件放到<code>USER_HOME/.gradle/init.d/</code>目录下</li><li>把以<code>.gradle</code>结尾的文件放到<code>GRADLE_HOME/init.d/</code>目录下<br />如果存在上面的4种方式的2种以上，gradle会按上面的1-4序号依次执行这些文件，如果给定目录下存在多个init脚本，会按拼音a-z顺序执行这些脚本，每个init脚本都存在一个对应的gradle实例，在这个文件中调用的所有方法和属性，都会委托给这个gradle实例，每个init脚本都实现了Script接口。</li></ol><ul><li>拓展2：仓库地址说明</li></ul><ol><li><p><code>mavenLocal()</code>:指定使用maven本地仓库，而本地仓库在配置maven时settings文件指定的仓库位置。如<code>E:/repository</code>，</p></li><li><p>gradle查找jar包顺序如下：<code>USER_HOME/.m2/settings.xml&gt;&gt;M2_HOME/conf/settings.xml&gt;&gt;USER_HOME/.m2/repository</code></p><p>maven{url地址}，指定maven仓库，一般用私有仓库地址或其它的第三方库【比如阿里镜像仓库地址】。<br />mavenCentral()：这是Maven的中央仓库，无需配置，直接声明就可以使用。<br />jcenter():JCenter中央仓库，实际也是是用的maven搭建的，但相比Maven仓库更友好，通过CDN分发，并且支持https访<br />问，在新版本中已经废弃了，替换为了mavenCentral()。</p></li></ol><blockquote><p>总之，gradle可以通过指定仓库地址为本地maven仓库地址和远程仓库地址相结合的方式，避免每次都会去远程仓库下载依赖库。这种方式也有一定的问题，如果本地maven仓库有这个依赖，就会从直接加载本地依赖，如果本地仓库没有该<br />依赖，那么还是会从远程下载。但是下载的jar不是存储在本地maven仓库中，而是放在自己的缓存目录中，默认在<code>USER_HOME/.gradle/caches</code>目录，当然如果我们配置过<code>GRADLE_USER_HOME</code>环境变量，则会放在<code>GRADLE_USER_HOME/caches</code>目录，那么可不可以将<code>gradle caches</code>指向<code>mavenrepository</code>。我们说这是不行的，caches下载<br />文件不是按照maven仓库中存放的方式。</p></blockquote><ul><li>拓展3：阿里云仓库地址请参考：<a href="https://developer.aliyun.com/mvn/guide">https://developer.aliyun.com/mvn/guide</a></li></ul><blockquote><p>在gradle 中的使用说明：</p></blockquote><p><img src="4bbfd15ee99148d19f67091d297e08eb.png" alt="" /></p><h2 id="8-wrapper-包装器"><a class="markdownIt-Anchor" href="#8-wrapper-包装器"></a> 8. Wrapper 包装器</h2><ul><li><p>Gradle Wrapper 实际上就是对Gradle的一层包装，用于解决实际开发中可能会遇到的不同的项目需要不同版本的Gradle问题。例如：把自己的代码共享给其他人使用，可能出现如下情况:</p><p>1.对方电脑没有安装 gradle<br />2.对方电脑安装过 gradle，但是版本太旧了</p></li><li><p>这时候，我们就可以考虑使用<code>Gradle Wrapper</code>了。这也是官方建议使用<code>Gradle Wrapper</code>的原因。实际上有了<code>Gradle Wrapper</code> 之后，我们本地是可以不配置Gradle的，下载Gradle项目后，使用gradle项目自带的wrapper操作也是可以的。</p></li><li><p>那如何使用GradleWrapper呢？</p></li></ul><blockquote><p>项目中的gradlew、gradlew.cmd脚本用的就是wrapper中规定的gradle版本。参见源码<br />而我们上面提到的gradle指令用的是本地gradle，所以gradle指令和gradlew指令所使用的gradle版本有可能是不一样的。<br />gradlew、gradlew.cmd的使用方式与gradle使用方式完全一致，只不过把gradle指令换成了gradlew指令。</p></blockquote><ul><li>当然，我们也可在终端执行 <code>gradlew</code> 指令时，指定指定一些参数，来控制<code>Wrapper</code>的生成，比如依赖的版本等，如下：</li></ul><p><img src="a0bfc4b91b4744d4b03986f0b6f15f53.png" alt="" /></p><ul><li>具体操作如下所示 ：<br />1、<code>gradle wrapper--gradle-version=4.4</code>：升级wrapper版本号，只是修改<code>gradle.properties</code>中<code>wrapper</code>版本，未实际下载<br />2、<code>gradle wrapper--gradle-version 5.2.1--distribution-type all</code> ：关联源码用</li></ul><p><strong>GradleWrapper的执行流程：</strong></p><ol><li>当我们第一次执行 <code>./gradlewbuild</code> 命令的时候，<code>gradlew</code> 会读取 <code>gradle-wrapper.properties</code> 文件的配置信息</li><li>准确的将指定版本的 <code>gradle</code> 下载并解压到指定的位置(<code>GRADLE_USER_HOME</code>目录下的<code>wrapper/dists</code>目录中)</li><li>并构建本地缓存(<code>GRADLE_USER_HOME</code>目录下的<code>caches</code>目录中)，下载再使用相同版本的<code>gradle</code>就不用下载了</li><li>之后执行的 <code>./gradlew</code> 所有命令都是使用指定的 <code>gradle</code> 版本。如下图所示：</li></ol><p><img src="46dc09f055c64badbc1cece4707dca2c.png" alt="" /></p><p><code>gradle-wrapper.properties</code> 文件解读：</p><p><img src="1b69c93804164cbf8f2f1a7d0dd035be.png" alt="" /><br />注意：前面提到的<code>GRALE_USER_HOME</code>环境变量用于这里的<code>Gradle Wrapper</code>下载的特定版本的gradle存储目录。如果我们没有配置过<code>GRALE_USER_HOME</code>环境变量，默认在当前用户家目录下的<code>.gradle</code>文件夹中</p><p><strong>那什么时候选择使用gradlewrapper、什么时候选择使用本地gradle?</strong></p><ul><li>下载别人的项目或者使用操作以前自己写的不同版本的gradle项目时：用<code>Gradle wrapper</code>，也即：<code>gradlew</code></li><li>什么时候使用本地<code>gradle</code>？新建一个项目时: 使用<code>gradle</code>指令即可</li></ul>]]></content>
    
    
    <summary type="html">Gradle 安装和下载</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 部署与打包方式详解（Jar vs War）</title>
    <link href="http://www.formeasy.cc/2025/08/25/Springboot/Spring%20Boot%20%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%89%93%E5%8C%85%E6%96%B9%E5%BC%8F%E8%AF%A6%E8%A7%A3%EF%BC%88Jar%20vs%20War%EF%BC%89/"/>
    <id>http://www.formeasy.cc/2025/08/25/Springboot/Spring%20Boot%20%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%89%93%E5%8C%85%E6%96%B9%E5%BC%8F%E8%AF%A6%E8%A7%A3%EF%BC%88Jar%20vs%20War%EF%BC%89/</id>
    <published>2025-08-25T06:02:41.000Z</published>
    <updated>2025-08-25T06:11:12.304Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot 提供了灵活的打包选项，支持两种主要部署方式：<strong>可执行 JAR</strong> 和 <strong>传统 WAR</strong>。以下是全面的对比与实践指南，帮助你根据项目需求选择最适合的部署方案。</p><hr /><h3 id="一-打包方式对比"><a class="markdownIt-Anchor" href="#一-打包方式对比"></a> 📦 一、打包方式对比</h3><table><thead><tr><th><strong>特性</strong></th><th><strong>可执行 JAR (默认)</strong></th><th><strong>传统 WAR</strong></th></tr></thead><tbody><tr><td><strong>启动方式</strong></td><td><code>java -jar app.jar</code></td><td>部署到外部 Servlet 容器 (如 Tomcat)</td></tr><tr><td><strong>内嵌服务器</strong></td><td>✅ 包含 Tomcat/Jetty/Undertow</td><td>❌ 需外部容器</td></tr><tr><td><strong>部署复杂度</strong></td><td>⭐ 极简 (单文件部署)</td><td>⭐⭐⭐ 需容器环境</td></tr><tr><td><strong>依赖管理</strong></td><td>所有依赖打包进单个 FAT JAR</td><td>依赖由容器管理 (部分依赖可打包进 WAR)</td></tr><tr><td><strong>热更新</strong></td><td>需第三方工具 (JRebel)</td><td>支持容器级热部署</td></tr><tr><td><strong>生产适用场景</strong></td><td>微服务/云原生环境</td><td>传统企业级应用服务器环境</td></tr><tr><td><strong>文件大小</strong></td><td>较大 (包含内嵌容器)</td><td>较小 (仅应用代码)</td></tr></tbody></table><hr /><h3 id="️-二-jar-打包部署-默认方式"><a class="markdownIt-Anchor" href="#️-二-jar-打包部署-默认方式"></a> 🛠️ 二、JAR 打包部署 (默认方式)</h3><h4 id="1-打包配置-maven"><a class="markdownIt-Anchor" href="#1-打包配置-maven"></a> 1. 打包配置 (Maven)</h4><p>确保你的 <code>pom.xml</code> 文件中有如下插件配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-打包命令"><a class="markdownIt-Anchor" href="#2-打包命令"></a> 2. 打包命令</h4><p>使用 Maven 进行构建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package</span><br><span class="line"><span class="comment"># 生成 target/appname-0.0.1-SNAPSHOT.jar</span></span><br></pre></td></tr></table></figure><h4 id="3-运行方式"><a class="markdownIt-Anchor" href="#3-运行方式"></a> 3. 运行方式</h4><p>可以采用多种方式运行 JAR 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标准启动</span></span><br><span class="line">java -jar app.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 带配置文件启动</span></span><br><span class="line">java -jar -Dspring.profiles.active=prod app.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内存限制启动</span></span><br><span class="line">java -Xms512m -Xmx1024m -jar app.jar</span><br></pre></td></tr></table></figure><h4 id="4-生产环境增强"><a class="markdownIt-Anchor" href="#4-生产环境增强"></a> 4. 生产环境增强</h4><p>为了更好地适应生产环境，你可以采取以下措施：</p><ul><li><strong>系统服务化 (Systemd)</strong>:</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Spring Boot Service</span><br><span class="line">After=syslog.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=appuser</span><br><span class="line">ExecStart=/usr/bin/java -jar /opt/app/app.jar</span><br><span class="line">SuccessExitStatus=143</span><br></pre></td></tr></table></figure><ul><li><strong>启动脚本封装 (带日志分割)</strong>:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> java -jar app.jar &gt; app.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><hr /><h3 id="三-war-打包部署-传统方式"><a class="markdownIt-Anchor" href="#三-war-打包部署-传统方式"></a> 🧩 三、WAR 打包部署 (传统方式)</h3><h4 id="1-修改打包类型"><a class="markdownIt-Anchor" href="#1-修改打包类型"></a> 1. 修改打包类型</h4><p>首先，在 <code>pom.xml</code> 中将 <code>&lt;packaging&gt;</code> 修改为 <code>war</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-排除内嵌容器-tomcat"><a class="markdownIt-Anchor" href="#2-排除内嵌容器-tomcat"></a> 2. 排除内嵌容器 (<a href="https://so.csdn.net/so/search?q=Tomcat&amp;spm=1001.2101.3001.7020">Tomcat</a>)</h4><p>由于 WAR 文件需要部署到外部容器中，因此需要排除内置的 Tomcat：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-初始化-servlet-入口"><a class="markdownIt-Anchor" href="#3-初始化-servlet-入口"></a> 3. 初始化 Servlet 入口</h4><p>修改主类以继承 <code>SpringBootServletInitializer</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> <span class="keyword">extends</span> <span class="title class_">SpringBootServletInitializer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> SpringApplicationBuilder <span class="title function_">configure</span><span class="params">(SpringApplicationBuilder builder)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> builder.sources(Application.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-构建与部署"><a class="markdownIt-Anchor" href="#4-构建与部署"></a> 4. 构建与部署</h4><p>完成上述步骤后，执行打包命令并部署到 Tomcat：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package</span><br><span class="line"><span class="comment"># 生成 target/appname-0.0.1-SNAPSHOT.war</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署到 Tomcat</span></span><br><span class="line"><span class="built_in">cp</span> target/app.war <span class="variable">$TOMCAT_HOME</span>/webapps/</span><br></pre></td></tr></table></figure><hr /><h3 id="️-四-云原生部署最佳实践"><a class="markdownIt-Anchor" href="#️-四-云原生部署最佳实践"></a> ☁️ 四、云原生部署最佳实践</h3><h4 id="1-docker-容器化部署-jar-方式"><a class="markdownIt-Anchor" href="#1-docker-容器化部署-jar-方式"></a> 1. Docker 容器化部署 (JAR 方式)</h4><p>编写 Dockerfile 来创建镜像：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> eclipse-temurin:<span class="number">17</span>-jre</span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /tmp</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> target/*.jar app.jar</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>然后构建和运行 Docker 镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t myapp:1.0 .</span><br><span class="line">docker run -d -p 8080:8080 myapp:1.0</span><br></pre></td></tr></table></figure><h4 id="2-多阶段构建优化镜像"><a class="markdownIt-Anchor" href="#2-多阶段构建优化镜像"></a> 2. 多阶段构建优化镜像</h4><p>利用多阶段构建来减小最终镜像体积：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 阶段1：构建应用</span></span><br><span class="line"><span class="keyword">FROM</span> maven:<span class="number">3.8</span>.<span class="number">6</span> AS build</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> src /app/src</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> pom.xml /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> mvn -f /app/pom.xml clean package</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 阶段2：运行镜像</span></span><br><span class="line"><span class="keyword">FROM</span> eclipse-temurin:<span class="number">17</span>-jre-alpine</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=build /app/target/*.jar app.jar</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure><h4 id="3-kubernetes-部署"><a class="markdownIt-Anchor" href="#3-kubernetes-部署"></a> 3. Kubernetes 部署</h4><p>定义 Deployment 和 Service YAML 文件来进行 Kubernetes 部署：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">springboot-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">springboot</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">springboot</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">myregistry/springboot-app:1.0</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_PROFILES_ACTIVE</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">prod</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">springboot-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">springboot</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><hr /><h3 id="️-五-关键注意事项"><a class="markdownIt-Anchor" href="#️-五-关键注意事项"></a> ⚠️ 五、关键注意事项</h3><ol><li><p><strong>静态资源处理</strong><br />JAR 模式：资源放在 <code>src/main/resources/static</code><br />WAR 模式：资源放在 <code>src/main/webapp</code></p></li><li><p><strong>配置文件优先级</strong><br />Spring Boot 加载顺序：</p><ol><li>jar 内部 application.properties</li><li>jar 同级 /config/ 目录</li><li>jar 同级目录</li><li>类路径 /config</li><li>类路径根目录</li></ol></li><li><p><strong>上下文路径设置</strong><br />JAR 模式：<code>server.servlet.context-path=/api</code><br />WAR 模式：通过容器设置或 <code>application.properties</code></p></li><li><p><strong>端口冲突解决</strong></p></li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 避免与容器端口冲突</span><br><span class="line">server.port=8081</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>WAR 部署常见问题</strong><br />类冲突：使用 <code>&lt;scope&gt;provided&lt;/scope&gt;</code> 排除容器已有库<br />路径错误：确保 <code>SpringBootServletInitializer</code> 正确配置</li></ol><hr /><h3 id="六-部署决策树"><a class="markdownIt-Anchor" href="#六-部署决策树"></a> 🔍 六、部署决策树</h3><p><img src="01125e7e4a6a4e15a89621e77e8e69fe.png" alt="" /></p><hr /><h3 id="七-高级部署方案"><a class="markdownIt-Anchor" href="#七-高级部署方案"></a> 🚀 七、高级部署方案</h3><ol><li><strong>性能优化启动</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启 AOT 优化 (Spring Boot 3+)</span></span><br><span class="line">java -Dspring.aot.enabled=<span class="literal">true</span> -jar app.jar</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>GraalVM 原生镜像</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需配置 spring-boot-starter-parent 3.x</span></span><br><span class="line">mvn native:compile -Pnative</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>蓝绿部署方案</strong></li></ol><p><img src="01125e7e4a6a4e15a89621e77e8e69ff.png" alt="" /></p><ol start="4"><li><strong>健康检查端点</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">health:</span></span><br><span class="line">      <span class="attr">probes:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 启用K8s就绪/存活检查</span></span><br><span class="line">  <span class="attr">health:</span></span><br><span class="line">    <span class="attr">livenessstate:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">readinessstate:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><hr /><h3 id="总结建议"><a class="markdownIt-Anchor" href="#总结建议"></a> 💎 总结建议</h3><ul><li><strong>优先选择 JAR</strong>: 对于大多数微服务和云原生应用来说，JAR 是理想的选择。</li><li><strong>选择 WAR 当</strong>: 需要与遗留系统集成或必须在特定应用服务器上运行时考虑使用 WAR。</li></ul>]]></content>
    
    
    <summary type="html">Spring Boot 部署与打包方式详解（Jar vs War）</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>AI探索大模型权重的分类：Chat、Code、Embedding和Rerank</title>
    <link href="http://www.formeasy.cc/2025/08/25/LLM/AI%E6%8E%A2%E7%B4%A2%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%9D%83%E9%87%8D%E7%9A%84%E5%88%86%E7%B1%BB%EF%BC%9AChat%E3%80%81Code%E3%80%81Embedding%E5%92%8CRerank/"/>
    <id>http://www.formeasy.cc/2025/08/25/LLM/AI%E6%8E%A2%E7%B4%A2%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%9D%83%E9%87%8D%E7%9A%84%E5%88%86%E7%B1%BB%EF%BC%9AChat%E3%80%81Code%E3%80%81Embedding%E5%92%8CRerank/</id>
    <published>2025-08-25T02:46:21.000Z</published>
    <updated>2025-08-25T02:51:52.672Z</updated>
    
    <content type="html"><![CDATA[<p>在机器学习和自然语言处理领域，大模型（如GPT-3、BERT等）已经成为了强大且广泛应用的工具。大模型的权重通常可以根据其应用场景分为不同的类别，如Chat、Code、Embedding和Rerank。了解这些分类及其差异对于我们在实际应用中选择合适的模型至关重要。本文将详细讲解这四种权重分类，并说明它们的差异。</p><p><img src="ca10ab6a4e4404fde0c4560c150f4d26.png" alt="" /></p><h5 id="1-chat对话"><a class="markdownIt-Anchor" href="#1-chat对话"></a> 1. Chat（对话）</h5><p>Chat模型专注于对话生成和自然语言理解。这些模型经过专门训练，能够理解并生成连贯、自然的对话。Chat模型通常用于客服机器人、虚拟助手等场景。</p><p>特点：</p><ul><li>自然语言生成：能够生成流畅且有意义的对话。</li><li>上下文理解：能够记住对话的上下文并进行相关的回答。</li><li>人性化交互：与用户进行类人互动，提供友好的用户体验。</li></ul><p>应用场景：</p><ul><li>在线客服</li><li>智能助手（如Siri、Alexa）</li><li>社交媒体聊天机器人</li></ul><h5 id="2-code代码"><a class="markdownIt-Anchor" href="#2-code代码"></a> 2. Code（代码）</h5><p>Code模型专注于代码生成和理解。这些模型可以帮助开发者自动补全代码、生成代码片段、修复代码错误等。Code模型在集成开发环境（IDE）中得到了广泛应用，提高了开发效率。</p><p>特点：</p><ul><li>代码生成：根据自然语言描述生成相应的代码片段。</li><li>错误检测与修复：识别代码中的错误并提供修复建议。</li><li>代码补全：在开发过程中自动补全代码，节省时间。</li></ul><p>应用场景：</p><ul><li>集成开发环境（如VS Code的Copilot）</li><li>代码审查工具</li><li>自动化测试生成</li></ul><h5 id="3-embedding嵌入"><a class="markdownIt-Anchor" href="#3-embedding嵌入"></a> 3. Embedding（嵌入）</h5><p>Embedding模型专注于将文本、图像或其他数据转换为固定长度的向量表示。这些向量表示保留了数据的语义信息，便于后续的相似度计算、分类等任务。</p><p>特点：</p><ul><li>语义表示：将数据转换为保留语义信息的向量。</li><li>高效计算：向量表示便于在大规模数据上进行高效计算。</li><li>通用性：可以应用于多种数据类型，如文本、图像等。</li></ul><p>应用场景：</p><ul><li>文本相似度计算</li><li>图像检索</li><li>聚类分析</li></ul><h5 id="4-rerank重新排序"><a class="markdownIt-Anchor" href="#4-rerank重新排序"></a> 4. Rerank（重新排序）</h5><p>Rerank模型用于对初步检索结果进行重新排序，以提高检索系统的精度。这些模型通常结合上下文信息和用户意图，对初步检索到的结果进行排序优化，提供更相关的结果。</p><p>特点：</p><ul><li>上下文敏感：结合上下文信息进行结果排序。</li><li>用户意图：理解用户意图，提供更相关的结果。</li><li>高精度：显著提高检索结果的相关性和精度。</li></ul><p>应用场景：</p><ul><li>搜索引擎</li><li>推荐系统</li><li>问答系统</li></ul><h4 id="差异分析"><a class="markdownIt-Anchor" href="#差异分析"></a> 差异分析</h4><p>虽然这四种权重分类都属于大模型的范畴，但它们在应用领域和技术特点上有显著差异：</p><ul><li>应用领域：Chat模型用于对话生成，Code模型用于代码生成与理解，Embedding模型用于数据表示，Rerank模型用于结果排序优化。</li><li>技术特点：Chat模型强调上下文理解和自然语言生成，Code模型侧重代码相关任务，Embedding模型关注数据的语义表示，Rerank模型专注于提高检索精度。</li><li>用户体验：Chat模型和Rerank模型直接影响用户交互体验，Embedding模型和Code模型则更多地提高开发效率和技术实现。</li></ul><h4 id="为什么embedding和rerank权重少见"><a class="markdownIt-Anchor" href="#为什么embedding和rerank权重少见"></a> 为什么Embedding和Rerank权重少见</h4><p>尽管Embedding和Rerank模型在自然语言处理和机器学习领域具有重要作用，但它们的开源情况却远不如Chat和Code模型普遍。这主要是由于数据隐私、商业价值、模型专用性以及高昂的数据标注成本等原因所致。</p><h5 id="1-embedding模型权重少见的原因"><a class="markdownIt-Anchor" href="#1-embedding模型权重少见的原因"></a> 1. Embedding模型权重少见的原因</h5><p>数据隐私和安全性 Embedding模型的训练通常涉及大量的用户数据，如文本、图像等。这些数据往往包含敏感信息，出于隐私和安全性考虑，很多机构和公司不愿意公开这些模型的权重，以避免数据泄露的风险。</p><p>商业价值 Embedding模型在推荐系统、搜索引擎和其他需要高效相似度计算的应用中具有巨大的商业价值。许多公司利用这些模型获得竞争优势，因此不愿意将这些权重公开，以保护其商业机密和市场份额。</p><p>模型专用性 Embedding模型通常是高度定制化的，针对特定数据集和应用场景进行训练。公开这些权重可能并不能直接用于其他应用，需要大量的调整和再训练。这使得这些模型的通用性较低，限制了开源的动机。</p><h5 id="2-rerank模型权重少见的原因"><a class="markdownIt-Anchor" href="#2-rerank模型权重少见的原因"></a> 2. Rerank模型权重少见的原因</h5><p>复杂性和专用性 Rerank模型通常是在特定领域和应用场景下进行训练的，结合了大量上下文信息和用户行为数据。这样的模型在其他场景下可能效果不佳，需要重新训练或调整。这种专用性使得它们不适合广泛开源。</p><p>数据稀缺和标注成本 Rerank模型需要大量的标注数据，这些数据需要手动标注并且通常涉及复杂的上下文关系。收集和标注这些数据成本高昂，且标注数据往往具有高度的专用性，公开模型权重的同时也难以提供相应的数据集，限制了其开源的可能性。</p><p>商业和战略考量 像搜索引擎和推荐系统这样的应用，对于Rerank模型有着至关重要的依赖。这些领域的公司往往通过这些模型优化用户体验和提升商业效果。因此，出于商业和战略考虑，这些模型的权重通常不会公开，以保持竞争优势。</p><h4 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h4><p>理解大模型权重的不同分类及其差异，可以帮助我们更好地选择和应用适合的模型，从而在各自的领域中发挥其最大潜力。无论是用于对话生成的Chat模型，还是用于代码生成的Code模型，或是用于数据表示的Embedding模型，以及用于结果排序的Rerank模型，它们都在各自的应用场景中展现了强大的能力和广泛的应用前景。</p><p>未来，随着技术的发展和开源社区的壮大，或许会有更多的Embedding和Rerank模型权重逐渐公开，为广泛的研究和应用提供支持。但在此之前，我们需要理解这些模型权重不公开的合理性，并在现有资源的基础上继续前行。</p>]]></content>
    
    
    <summary type="html">AI探索大模型权重的分类：Chat、Code、Embedding和Rerank</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="LLM" scheme="http://www.formeasy.cc/tags/LLM/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下部署SpringBoot</title>
    <link href="http://www.formeasy.cc/2025/08/22/Springboot/Ubuntu%E4%B8%8B%E9%83%A8%E7%BD%B2SpringBoot/"/>
    <id>http://www.formeasy.cc/2025/08/22/Springboot/Ubuntu%E4%B8%8B%E9%83%A8%E7%BD%B2SpringBoot/</id>
    <published>2025-08-22T06:26:22.000Z</published>
    <updated>2025-08-22T13:51:47.320Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu下部署springboot"><a class="markdownIt-Anchor" href="#ubuntu下部署springboot"></a> Ubuntu下部署SpringBoot</h2><h3 id="第一步-安装java环境"><a class="markdownIt-Anchor" href="#第一步-安装java环境"></a> 第一步： 安装java环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新软件源</span></span><br><span class="line">sudo apt update</span><br><span class="line"><span class="comment"># 安装OpenJDK 17（开源免费，推荐）</span></span><br><span class="line">sudo apt install openjdk-17-jdk</span><br><span class="line"><span class="comment"># 验证安装：输出JDK版本即成功</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h3 id="第二步-安装下载idea并新建springboot项目"><a class="markdownIt-Anchor" href="#第二步-安装下载idea并新建springboot项目"></a> 第二步： 安装下载Idea并新建SpringBoot项目</h3><ul><li><p>到官网下载(<a href="https://www.jetbrains.com/idea/download/?section=windows">https://www.jetbrains.com/idea/download/?section=windows</a>)</p></li><li><p>这里把 <code>pom.xml</code> 文件、包结构、新增的控制器代码贴一下</p><ul><li><code>pom.xml</code></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="8554a3205a1474ed8aaf223d5f530a92.png" alt="在这里插入图片描述" /></p><h3 id="第三步-打包-jar-文件"><a class="markdownIt-Anchor" href="#第三步-打包-jar-文件"></a> 第三步： 打包 .jar 文件</h3><p><img src="a19ef5189506b596bb1c7f613846a870.png" alt="在这里插入图片描述" /></p><blockquote><p>对于Maven 可以使用使令：mvn clean package<br />对于Gradle 可以使用使令：./gradlew clean bootJar</p></blockquote><h3 id="第四步-在-ubuntu-上部署-jar-包"><a class="markdownIt-Anchor" href="#第四步-在-ubuntu-上部署-jar-包"></a> 第四步： 在 Ubuntu 上部署 .jar 包</h3><ul><li><code>mkdir demo</code> 命令创建一个名为 demo 的目录</li><li><code>cd demo</code> 命令进入该目录</li><li><code>nohup java -jar demo-0.0.1-SNAPSHOT.jar</code> 命令启动 jar 包。<ul><li><p><code>nohup xxx &amp;</code> ： 是 <code>no hang up</code> 的缩写，意为不挂起，用于在系统后台不断运行命令，退出终端不会影响程序的运行</p></li><li><p>运行完之后会生成一个 <code>nohup.out</code> 文件，里面是启动过程的一些日志</p></li><li><p>打开 <code>nohup.out</code> 文件，如果正常启动的话，会看到类似这样的输出</p><pre><code>Started DemoApplication in xxx seconds</code></pre></li><li><p>但是，我就没那么幸运了，我遇到的是这样的</p><pre><code>    .   ____          _            __ _ _    /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \    ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \    \\/  ___)| |_)| | | | | || (_| |  ) ) ) )    '  |____| .__|_| |_|_| |_\__, | / / / /    =========|_|==============|___/=/_/_/_/    :: Spring Boot ::                (v2.5.2)    2021-07-14 22:42:22.087  INFO 39193 --- [           main] com.example.demo.DemoApplication         : Starting DemoApplication v0.0.1-SNAPSHOT using Java 1.8.0_291 on iZwz92d94t8mb03s9z327hZ with PID 39193 (/opt/xiaodudu/demo/demo-0.0.1-SNAPSHOT.jar started by root in /opt/xiaodudu/demo)    2021-07-14 22:42:22.090  INFO 39193 --- [           main] com.example.demo.DemoApplication         : No active profile set, falling back to default profiles: default    2021-07-14 22:42:23.276  INFO 39193 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)    2021-07-14 22:42:23.291  INFO 39193 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]    2021-07-14 22:42:23.291  INFO 39193 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]    2021-07-14 22:42:23.345  INFO 39193 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext    2021-07-14 22:42:23.345  INFO 39193 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1141 ms    2021-07-14 22:42:23.673  WARN 39193 --- [           main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use    2021-07-14 22:42:23.677  INFO 39193 --- [           main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]    2021-07-14 22:42:23.691  INFO 39193 --- [           main] ConditionEvaluationReportLoggingListener :     Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.    2021-07-14 22:42:23.713 ERROR 39193 --- [           main] o.s.b.d.LoggingFailureAnalysisReporter   :     ***************************    APPLICATION FAILED TO START    ***************************    Description:    Web server failed to start. Port 8080 was already in use.    Action:    Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.        </code></pre><ul><li><p><code>Port 8080 was already in use.</code> 端口被占用，是比较常见的一个异常。</p></li><li><p>执行 <code>netstat -anp | grep 8080</code> 查看占用端口的程序 pid。（netstat 有很多参数，可以使用 <code>netstat -h</code> 查询）</p><pre><code>root@iZwz92d94t8mb03s9z327hZ:~# netstat -anp | grep 8080tcp6       0      0 :::8080                 :::*                    LISTEN      19032/java</code></pre></li><li><p>执行 <code>kill -9 xxxxx</code> 命令终止该程序</p><pre><code>root@iZwz92d94t8mb03s9z327hZ:~# kill -9 19032</code></pre></li><li><p>重新执行 <code>nohup xxx &amp;</code> 命令部署 jar 程序。(nohup.out 是否删除可以自己决定，删除就是重新生成，不删除就是追加内容)</p><pre><code>root@iZwz92d94t8mb03s9z327hZ:/opt/xiaodudu/demo# nohup java -jar demo-0.0.1-SNAPSHOT.jar &amp;[1] 39342root@iZwz92d94t8mb03s9z327hZ:/opt/xiaodudu/demo# nohup: ignoring input and appending output to 'nohup.out'</code></pre></li><li><p>查看 <code>nohup.out</code> 文件</p><pre><code>     .   ____          _            __ _ _    /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \    ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \    \\/  ___)| |_)| | | | | || (_| |  ) ) ) )    '  |____| .__|_| |_|_| |_\__, | / / / /    =========|_|==============|___/=/_/_/_/    :: Spring Boot ::                (v2.5.2)    2021-07-14 23:05:16.089  INFO 39342 --- [           main] com.example.demo.DemoApplication         : Starting DemoApplication v0.0.1-SNAPSHOT using Java 1.8.0_291 on iZwz92d94t8mb03s9z327hZ with PID 39342 (/opt/xiaodudu/demo/demo-0.0.1-SNAPSHOT.jar started by root in /opt/xiaodudu/demo)    2021-07-14 23:05:16.093  INFO 39342 --- [           main] com.example.demo.DemoApplication         : No active profile set, falling back to default profiles: default    2021-07-14 23:05:17.228  INFO 39342 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)    2021-07-14 23:05:17.239  INFO 39342 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]    2021-07-14 23:05:17.240  INFO 39342 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]    2021-07-14 23:05:17.300  INFO 39342 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext    2021-07-14 23:05:17.300  INFO 39342 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1095 ms    2021-07-14 23:05:17.755  INFO 39342 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''    2021-07-14 23:05:17.764  INFO 39342 --- [           main] com.example.demo.DemoApplication         : Started DemoApplication in 2.338 seconds (JVM running for 2.769)</code></pre></li></ul></li></ul></li></ul><h3 id="远程访问接口"><a class="markdownIt-Anchor" href="#远程访问接口"></a> 远程访问接口</h3><ul><li>访问 <code>Ubuntu 服务器IP: 8080/hello/springboot</code></li></ul><p><img src="7be7cd3fc786c0c1f946bb5b6bc7555d.png" alt="在这里插入图片描述" /></p><h3 id="第五步-在-ubuntu-上使用进程管理"><a class="markdownIt-Anchor" href="#第五步-在-ubuntu-上使用进程管理"></a> 第五步： 在 Ubuntu 上使用进程管理</h3><p>直接用 java -jar 启动的应用在终端关闭后会终止，且意外崩溃后无法自动重启。<br />可使用进程管理工具（systemd）确保应用后台运行并自动恢复，通过系统服务管理 JAR 应用，支持开机自启、状态监控、日志管理。</p><p>1.创建服务文件（如 /etc/systemd/system/myapp.service）：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=My Spring Boot Application</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=formeasy</span><br><span class="line">Group=formeasy</span><br><span class="line"></span><br><span class="line">#WorkingDirectory=/opt/xiaodudu/demo/  # JAR 文件所在目录，建议不注释</span><br><span class="line">ExecStart=/usr/bin/java -jar  /opt/xiaodudu/demo/demo-0.0.1-SNAPSHOT.jar --server.port=8080</span><br><span class="line">SuccessExitStatus=143  # 兼容 Spring Boot 的优雅退出码</span><br><span class="line">Restart=always  # 崩溃后自动重启</span><br><span class="line">RestartSec=5  # 重启间隔（秒）</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>2.启用并启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload  <span class="comment"># 刷新配置</span></span><br><span class="line">sudo systemctl start myapp    <span class="comment"># 启动应用</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> myapp   <span class="comment"># 设置开机自启</span></span><br></pre></td></tr></table></figure><p>3.常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status myapp  <span class="comment"># 查看状态</span></span><br><span class="line">sudo systemctl stop myapp    <span class="comment"># 停止应用</span></span><br><span class="line">journalctl -u myapp -f       <span class="comment"># 实时查看日志</span></span><br></pre></td></tr></table></figure><p>4.如果出错，按照以下排查：</p><ol><li>检查目录和文件是否存在</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查工作目录是否存在</span></span><br><span class="line"><span class="built_in">ls</span> -la /opt/xiaodudu/demo/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 JAR 文件是否存在</span></span><br><span class="line"><span class="built_in">ls</span> -la /opt/xiaodudu/demo/demo-0.0.1-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Java 安装</span></span><br><span class="line"><span class="built_in">which</span> java</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><ol start="2"><li>创建缺失的目录和权限</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建应用目录</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /opt/xiaodudu/demo/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置正确的权限</span></span><br><span class="line">sudo <span class="built_in">chown</span> -R formeasy:formeasy /opt/xiaodudu/demo/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保 JAR 文件在正确的位置</span></span><br><span class="line"><span class="comment"># 如果还没有，上传或复制您的 JAR 文件到这个目录</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Ubuntu下部署SpringBoot</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>手机已安装应用导出apk</title>
    <link href="http://www.formeasy.cc/2025/08/22/Other/%E6%89%8B%E6%9C%BA%E5%B7%B2%E5%AE%89%E8%A3%85%E5%BA%94%E7%94%A8%E5%AF%BC%E5%87%BAapk%E5%AE%A2/"/>
    <id>http://www.formeasy.cc/2025/08/22/Other/%E6%89%8B%E6%9C%BA%E5%B7%B2%E5%AE%89%E8%A3%85%E5%BA%94%E7%94%A8%E5%AF%BC%E5%87%BAapk%E5%AE%A2/</id>
    <published>2025-08-22T06:21:47.000Z</published>
    <updated>2025-08-22T06:25:07.253Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方法一通过应用管理器"><a class="markdownIt-Anchor" href="#方法一通过应用管理器"></a> 方法一：通过应用管理器</h3><p>下载并安装应用管理器：可以使用应用管理器如“ES文件浏览器”或“APK Extractor”。<br />提取APK文件：<br />打开应用管理器。<br />找到已安装的应用程序列表。<br />选择你想要提取的应用程序，然后选择“提取”或“备份”选项。<br />提取的APK文件将保存在指定的文件夹中，通常是在内部存储或SD卡中的“ExtractedApks”文件夹。</p><h3 id="方法二通过adb工具"><a class="markdownIt-Anchor" href="#方法二通过adb工具"></a> 方法二：通过ADB工具</h3><p>安装ADB工具：<br />在电脑上下载并安装ADB工具包。<br />连接手机：<br />在手机上启用“开发者选项”和“USB调试”。<br />使用USB线将手机连接到电脑。</p><p>使用ADB命令提取应用：<br />打开命令行窗口。<br />输入以下命令以查看已安装的应用列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell pm list packages</span><br></pre></td></tr></table></figure><p>找到你想提取的应用的包名，然后运行以下命令提取APK文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell pm path &lt;package-name&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell pm path com.example.app</span><br></pre></td></tr></table></figure><p>该命令会返回APK文件的路径。接着运行以下命令将APK文件复制到电脑：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull &lt;apk-file-path&gt; &lt;destination-path&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull /data/app/com.example.app-1/base.apk C:\Users\YourUsername\Desktop</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">手机已安装应用导出apk</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Other" scheme="http://www.formeasy.cc/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 项目，自动编译，热部署，立刻看到效果</title>
    <link href="http://www.formeasy.cc/2025/08/21/Springboot/SpringBoot%20%E9%A1%B9%E7%9B%AE%EF%BC%8C%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%EF%BC%8C%E7%83%AD%E9%83%A8%E7%BD%B2%EF%BC%8C%E7%AB%8B%E5%88%BB%E7%9C%8B%E5%88%B0%E6%95%88%E6%9E%9C/"/>
    <id>http://www.formeasy.cc/2025/08/21/Springboot/SpringBoot%20%E9%A1%B9%E7%9B%AE%EF%BC%8C%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%EF%BC%8C%E7%83%AD%E9%83%A8%E7%BD%B2%EF%BC%8C%E7%AB%8B%E5%88%BB%E7%9C%8B%E5%88%B0%E6%95%88%E6%9E%9C/</id>
    <published>2025-08-21T08:55:31.000Z</published>
    <updated>2025-08-22T02:29:03.318Z</updated>
    
    <content type="html"><![CDATA[<p>1：在pom.xml 中 配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：并不是pom.xml 的<build>标签中</p><p>2： 如果有页面的话 禁止页面缓存</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: XXX</span><br><span class="line">  aop:</span><br><span class="line">    proxy-target-class: true</span><br><span class="line">  thymeleaf:</span><br><span class="line">      cache: false</span><br><span class="line">      prefix: classpath:/templates/</span><br><span class="line">      mode: LEGACYHTML5</span><br></pre></td></tr></table></figure><p>3：开启idea工具的自动编译功能</p><p><img src="20180211173853621.png" alt="" /></p><p>4：开启idea允许运行时编译</p><p>在 Advanced Settings 中，勾选 Allow auto-make to start even if the application is currently running</p><p><img src="20180211173853622.png" alt="" /></p><p>完成以上步骤 即可实现SpringBoot项目自动编译+热部署，这我们修改后的代码能够立刻看到效果，提高效率！</p>]]></content>
    
    
    <summary type="html">SpringBoot 项目，自动编译，热部署，立刻看到效果</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>Springboot框架的快速搭建和mybatis的整合</title>
    <link href="http://www.formeasy.cc/2025/08/21/Springboot/Springboot%E6%A1%86%E6%9E%B6%E7%9A%84%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%92%8Cmybatis%E7%9A%84%E6%95%B4%E5%90%88/"/>
    <id>http://www.formeasy.cc/2025/08/21/Springboot/Springboot%E6%A1%86%E6%9E%B6%E7%9A%84%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%92%8Cmybatis%E7%9A%84%E6%95%B4%E5%90%88/</id>
    <published>2025-08-21T08:31:20.000Z</published>
    <updated>2025-08-26T07:41:08.356Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境安装"><a class="markdownIt-Anchor" href="#环境安装"></a> 环境安装</h3><p>在开始学习Spring Boot之前，我们需要准备好开发环境。本节将以Windows操作系统为例，介绍如何安装JDK、Intellij IDEA及Apache Maven。如果你的电脑上已经安装了JDK、Intellij IDEA或者Apache Maven，可以跳过本节内容。</p><ol><li>安装JDK</li></ol><p>JDK（Java SE Development Kit）建议使用17及以上的版本，其官方下载路径为：<br /><a href="https://www.oracle.com/java/technologies/downloads/#java17">https://www.oracle.com/java/technologies/downloads/#java17</a></p><p>下载后正常安装，安装完成后，需要配置环境变量JAVA_HOME，具体步骤如下：</p><p>1）在电脑桌面上，右击【我的电脑】→【属性】→【高级系统设置】→【环境变量】→【系统变量(S)】→【新建】出现新建环境变量的窗口。</p><p>2）在【变量名】和【变量值】中分别输入JAVA_HOME和C:\Program Files\Java\jdk-17，单击【确定】按钮。</p><p>3）JAVA_HOME配置好之后，将%JAVA_HOME%\bin加入到【系统变量】的path中。完成后，打开命令行窗口，输入命令java-version，如出现如下所示的提示，即表示安装成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c:\XXX\java -version</span><br><span class="line">java version <span class="string">&quot;17.0.16&quot;</span> 2025-07-15 LTS</span><br><span class="line">Java(TM) SE Runtime Environment (build 17.0.16+12-LTS-247)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 17.0.16+12-LTS-247, mixed mode, sharing)</span><br></pre></td></tr></table></figure><ol start="2"><li><p>安装Intellij IDEA<br />在Intellij IDEA的官方网站<br /><a href="http://www.jetbrains.com/idea/">http://www.jetbrains.com/idea/</a> 上可以免费下载IDEA。下载完IDEA后，运行安装程序，按提示安装即可。</p></li><li><p>安装Apache Maven<br />Apache Maven是目前流行的项目管理和构建自动化工具。虽然IDEA已经包含了Maven插件，但是笔者还是希望大家在工作中能够安装自己的Maven插件，方便以后项目配置需要。大家可以通过Maven的官方网站<br /><a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a> 下载最新版的Maven，本文的Maven版本为apache-maven-3.6.3。</p></li></ol><p>下载完成后解压缩即可，例如，解压到D：盘上，然后将Maven的安装路径D:\apache-maven-3.6.3\bin加入到Windows的环境变量path中。安装完成后，在命令行窗口执行命令：mvn -v，如果输出&quot;Apache Maven 3.6.3&quot;，表示Maven安装成功。</p><h3 id="一-创建一个空的springboot项目工程"><a class="markdownIt-Anchor" href="#一-创建一个空的springboot项目工程"></a> 一、创建一个空的Springboot项目工程</h3><ol><li><p>在一个你喜欢的地方，创建一个springboot项目文件夹.比如我使用：springboot<br /><img src="bd138f2f552e4b68a0c7bde696e657b6.png" alt="在这里插入图片描述" /></p></li><li><p>启动IDEA–&gt;New Project–&gt;spring boot(spring initializr）</p></li></ol><p>按下面的选</p><p><img src="f03737e89d1c48b7b9ce992b43ae00be.png" alt="在这里插入图片描述" /><br />jdk版本不一样，所选的spring boot版本不一样，因为我用的是jdk是17，所以用的是3.0以上的<br /><img src="2389039193aa450bb758ea74270832a8.png" alt="在这里插入图片描述" /></p><h3 id="二-项目工程配置一下maven"><a class="markdownIt-Anchor" href="#二-项目工程配置一下maven"></a> 二、 项目工程配置一下Maven</h3><p><img src="8f7d80e35e6b4f30bdfa1e712c6a7070.png" alt="在这里插入图片描述" /><br /><img src="d8cc6334dd3340ddbf3f6403af2a4dbe.png" alt="在这里插入图片描述" /></p><h3 id="三-创建常见的包"><a class="markdownIt-Anchor" href="#三-创建常见的包"></a> 三、 创建常见的包</h3><p>在com.example下面把每个层的包创建好，用于后续我们在不同的包里创建java文件，后端我们是分层的。</p><blockquote><p>controller调用service<br />service调用dao<br />dao调用entity</p></blockquote><ol><li>controller:后端接口的入口，主要编写各种xxxController,提供接口给前端调用</li><li>service:后端业务层，主要编写一些后端业务逻辑。controller–:service</li><li>dao(mapper):后端持久层，主要映射数据库，操作数据库表数据。service–</li><li>entity:实体类，对应数据库表，实体类的属性对应表的字段信息</li></ol><blockquote><p>结果图:<br /><img src="717227c805124ab4acbb39ea8d23b219.png" alt="在这里插入图片描述" /></p></blockquote><h3 id="四-编写你的第一个hello-word"><a class="markdownIt-Anchor" href="#四-编写你的第一个hello-word"></a> 四、编写你的第一个hello word</h3><blockquote><p>controller是后台接口的入口，这个“接口”与java基础里面的接口不一样，这里的接口是针对前端来说的，前端操作数据会调用后端的接口，是前后台交互的入口</p></blockquote><ol><li>在controller下面新建一个UserController类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表明是接口的入口</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配一个地址,相当于打开家门的钥匙.为了规范，地址最好和类名前几个单词一样</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *     controller里的一个方法，它其实就是我们平常说的web项目里的一个接口的入口</span></span><br><span class="line"><span class="comment"> *     可以在这个方法上再加上一个url</span></span><br><span class="line"><span class="comment"> *     也可以指定请求方式(增删改查)：GET POST PUT DELETE</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;欢迎来到我的第一个Springboot工程：已经启动&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>运行SpingbootApplication,结果如下，可以看到端口为8080<br /><img src="cef494f423d74ba69e67eeb9907db4a7.png" alt="在这里插入图片描述" /></p></li><li><p>去搜<a href="http://localhost:8080/user">http://localhost:8080/user</a><br /><img src="ecaf0cc39cde4dbaa57eb4c99b3009ae.png" alt="在这里插入图片描述" /></p></li><li><p>在entity下面创建User类</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="comment">//    表明Id是主键</span></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    策略,表明主键是递增的</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String id,String name,String sex,String age,String password,String phone )</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.id= Integer.parseInt(id);</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.sex=sex;</span><br><span class="line">        <span class="built_in">this</span>.age= Integer.parseInt(age);</span><br><span class="line">        <span class="built_in">this</span>.password=password;</span><br><span class="line">        <span class="built_in">this</span>.phone=phone;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    mybatis需要</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 无参构造方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSex</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(String sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>搜索<a href="http://localhost:8080/user/start">http://localhost:8080/user/start</a><br /><img src="c427fd9efa8c45b79545f47400e618de.png" alt="在这里插入图片描述" /></p><h3 id="五-整合mybatis"><a class="markdownIt-Anchor" href="#五-整合mybatis"></a> 五、整合MyBatis</h3><blockquote><p>可以去搜mvn repository的官网，在里面搜mysql，可以找到相关依赖的代码</p></blockquote><ol><li>引入依赖：pox.xml里导入mybatis和数据库mysql的依赖(这里的mybatis依赖版本要看清楚，我这个版本不适用3.0，所以后面我换了，可以看第七点的1）</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>例为官方mybatis-spring-boot-starter，建议使用mybatis-plus-spring-boot3-starter替代</p></blockquote><ol start="2"><li>在application.yml里进行数据库配置（若文件后缀不是yml,可看下面第七的2）</li></ol><blockquote><p>注意：冒号“：”后面一定要加空格，不然会报错</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span> <span class="comment">#你本地的数据库用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">cjm2003</span> <span class="comment">#你本地的数据库密码</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=Asia/Shanghai</span></span><br></pre></td></tr></table></figure><p>3.配置mybatis实体和xml映射<br />（1）先如下面结构创建UserMapper.xml用于被mybatis映射<br /><img src="6b78d61941c84746a3a76f7ecba3c563.png" alt="在这里插入图片描述" /></p><p>（2）在application.yml里配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置mybatis实体配置</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span> <span class="comment">#映射到resources/mapper/User.xml里</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.example.springboot.entity</span></span><br></pre></td></tr></table></figure><h3 id="六-结合mybatis将数据库打通"><a class="markdownIt-Anchor" href="#六-结合mybatis将数据库打通"></a> 六、结合MyBatis将数据库打通</h3><ol><li>创建数据库springboot和user表</li></ol><blockquote><p>创建数据库<br /><img src="b9729e82e8af40ec91cc6c0efbd9b2cc.png" alt="在这里插入图片描述" /></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `<span class="keyword">user</span>`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>`  (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  `sex` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `phone` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;电话&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_unicode_ci COMMENT <span class="operator">=</span> <span class="string">&#x27;用户信息表&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br></pre></td></tr></table></figure><p>补充数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;10000000000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">22</span>, <span class="string">&#x27;18888888888&#x27;</span>);</span><br></pre></td></tr></table></figure><p>最终结果：<br /><img src="33876e66d4c845109901d75c028ffef9.png" alt="在这里插入图片描述" /><br />2. 在User类里加映射</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"><span class="comment">//把user表映射到类里面去</span></span><br><span class="line"><span class="meta">@Table(name = &quot;user&quot;)</span></span><br></pre></td></tr></table></figure><ol start="3"><li>修改UserController</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.service.UserService;</span><br><span class="line"><span class="keyword">import</span> jakarta.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表明是接口的入口</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配一个地址,相当于打开家门的钥匙.为了规范，地址最好和类名前几个单词一样</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    controller要调用service</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *     controller里的一个方法，它其实就是我们平常说的web项目里的一个接口的入口</span></span><br><span class="line"><span class="comment">     *     可以在这个方法上再加上一个url</span></span><br><span class="line"><span class="comment">     *     也可以指定请求方式(增删改查)：GET POST PUT DELETE</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;欢迎来到我的第一个Springboot工程：已经启动&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/start&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    导入表的各条信息</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//拿userService的getUser,返回值也是List</span></span><br><span class="line">        <span class="keyword">return</span>  userService.getUser();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>创建其他的类和接口，因为</li></ol><blockquote><p>controller调用service<br />service调用dao<br />dao调用entity</p></blockquote><p><img src="49220368e7484147a6e65993a1b06109.png" alt="在这里插入图片描述" /></p><p>UserService:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springboot.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> jakarta.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表明是service层</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    service调用dao</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (List&lt;User&gt;) userDao.getUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDao接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表示是持久层的</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//继承Mapper里User的实体</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    基于注解的方式,查询user表里的全部信息</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>搜索<a href="http://localhost:8080/user/start">http://localhost:8080/user/start</a> （这里若是打不开，可以看看是否是数据库没启动或者是路径错误，可看第七点3）<br /><img src="4256db6828d84f62808225618fc2085c.png" alt="在这里插入图片描述" /></li></ol><h3 id="七-可能会遇到的问题"><a class="markdownIt-Anchor" href="#七-可能会遇到的问题"></a> 七、可能会遇到的问题</h3><p>1.mybatis版本不兼容，去pom.xml里替换依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 替换旧依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 支持 Spring Boot 3.x --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>方法：通过IDE创建（以IntelliJ IDEA为例）</li></ol><blockquote><p>（1）新建Spring Boot项目 使用 Spring Initializr 创建项目（默认生成 .properties）。</p><p>（2）右键资源目录 定位到 src/main/resources → 右键选择 New → File。</p><p>（3）输入文件名 直接输入 application.yml → 确认创建。</p></blockquote><ol start="3"><li>路径错误或者是数据库没启动<br />（1）检查yml里的mybatis配置路径：是否在对应包的下面<br /><img src="cc6da6b4771147bb9c4ee5307f3ffb5e.png" alt="在这里插入图片描述" /><br />检查数据库配置是否是自己的数据库名称出错<br /><img src="87e9c99d69f74105b349acf780031f40.png" alt="在这里插入图片描述" /><br /><img src="c30bd96d359d41d7a87edd7361bec15d.png" alt="在这里插入图片描述" /><br />（2）去cmd里面查看服务器是否启动</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><p>注意mysql为自己的，一般为mysql,但是我的是mysql8.0,所以我的效果图如下<br /><img src="b7f95039dbc6433b84409b66d267648f.png" alt="在这里插入图片描述" /></p><h3 id="八-打包应用"><a class="markdownIt-Anchor" href="#八-打包应用"></a> 八、打包应用</h3><p>在项目目录下，打开终端并使用以下命令打包应用：</p><p>对于 Maven：</p><blockquote><p>mvn clean package</p></blockquote><p>对于 Gradle：</p><blockquote><p>./gradlew clean bootJar</p></blockquote><p>注释：</p><blockquote><p>mvn clean package 命令会清理项目并构建一个新的 JAR 文件。<br />./gradlew clean bootJar 对于 Gradle 项目同样会完成清理并生成可执行的 JAR 文件。</p></blockquote><p>打包完成后，您可以在以下路径找到生成的 JAR 文件：</p><blockquote><p>Maven：target 目录下，如 target/springboot-0.0.1-SNAPSHOT.jar<br />Gradle：build/libs 目录下，如 build/libs/springboot-0.0.1-SNAPSHOT.jar</p></blockquote><h3 id="九-代码"><a class="markdownIt-Anchor" href="#九-代码"></a> 九、代码</h3><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.service.UserService;</span><br><span class="line"><span class="keyword">import</span> jakarta.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表明是接口的入口</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配一个地址,相当于打开家门的钥匙.为了规范，地址最好和类名前几个单词一样</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    controller要调用service</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *     controller里的一个方法，它其实就是我们平常说的web项目里的一个接口的入口</span></span><br><span class="line"><span class="comment">     *     可以在这个方法上再加上一个url</span></span><br><span class="line"><span class="comment">     *     也可以指定请求方式(增删改查)：GET POST PUT DELETE</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;欢迎来到我的第一个Springboot工程：已经启动&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/start&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    导入表的各条信息</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//拿userService的getUser,返回值也是List</span></span><br><span class="line">        <span class="keyword">return</span>  userService.getUser();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表示是持久层的</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//继承Mapper里User的实体</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    基于注解的方式,查询user表里的全部信息</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"><span class="comment">//把user表映射到类里面去</span></span><br><span class="line"><span class="meta">@Table(name = &quot;user&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="comment">//    表明Id是主键</span></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    策略,表明主键是递增的</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String id,String name,String sex,String age,String password,String phone )</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.id= Integer.parseInt(id);</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.sex=sex;</span><br><span class="line">        <span class="built_in">this</span>.age= Integer.parseInt(age);</span><br><span class="line">        <span class="built_in">this</span>.password=password;</span><br><span class="line">        <span class="built_in">this</span>.phone=phone;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    mybatis需要</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 无参构造方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSex</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(String sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springboot.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> jakarta.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表明是service层</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    service调用dao</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (List&lt;User&gt;) userDao.getUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SpringbootApplication</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//扫描</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.example.springboot.dao&quot;)</span> <span class="comment">// 替换为你的实际 DAO 包路径</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringbootApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringbootApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;.//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span> =<span class="string">&quot;com.example.springboot.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="comment">#application:</span></span><br><span class="line">  <span class="comment">#name: myapp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span> <span class="comment">#你本地的数据库用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">cjm2003</span> <span class="comment">#你本地的数据库密码</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置mybatis实体配置</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span> <span class="comment">#映射到resources/mapper/User.xml里</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.example.springboot.entity</span></span><br><span class="line"><span class="comment">#  configuration:</span></span><br><span class="line"><span class="comment">#    map-underscore-to-camel-case: true  # 自动转换下划线命名到驼峰命名</span></span><br></pre></td></tr></table></figure><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connection</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tag</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>17<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 替换旧依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 支持 Spring Boot 3.x --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Springboot框架的快速搭建和mybatis的整合</summary>
    
    
    
    
    <category term="Springboot" scheme="http://www.formeasy.cc/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>如何快速删除Word文档中的英文内容</title>
    <link href="http://www.formeasy.cc/2025/08/20/Other/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4Word%E6%96%87%E6%A1%A3%E4%B8%AD%E7%9A%84%E8%8B%B1%E6%96%87%E5%86%85%E5%AE%B9/"/>
    <id>http://www.formeasy.cc/2025/08/20/Other/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4Word%E6%96%87%E6%A1%A3%E4%B8%AD%E7%9A%84%E8%8B%B1%E6%96%87%E5%86%85%E5%AE%B9/</id>
    <published>2025-08-20T03:06:13.000Z</published>
    <updated>2025-08-20T03:13:45.768Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何快速删除word文档中的英文内容"><a class="markdownIt-Anchor" href="#如何快速删除word文档中的英文内容"></a> 如何快速删除Word文档中的英文内容</h2><h3 id="打开word文档"><a class="markdownIt-Anchor" href="#打开word文档"></a> ◉ 打开Word文档</h3><p>首先，在电脑中 <strong>启动Word办公软件</strong> ，新建一个空白文档，并在其中输入包含中英文的文本段落。</p><h3 id="使用替换功能"><a class="markdownIt-Anchor" href="#使用替换功能"></a> ◉ 使用替换功能</h3><p>接着，在 <strong>工具栏的“开始”选项</strong> 下，我们可以在文档的右上角找到并点击 <strong>“替换”</strong> 功能。这一操作将触发 <strong>“查找和替换”对话框</strong> 的弹出。</p><h3 id="选择特殊格式"><a class="markdownIt-Anchor" href="#选择特殊格式"></a> ◉ 选择特殊格式</h3><p>在对话框的左下角，我们点击 <strong>“更多”</strong> 以展开更多选项。随后，会出现一个下拉窗口，在其中我们选择 <strong>“特殊格式”</strong> 。在右侧弹出的特殊格式选项中，我们进一步选择 <strong>“任意字母”</strong> 。选定后，查找内容栏中会出现一个 <strong>“^$”</strong> 符号。最后，我们点击 <strong>“全部替换”</strong> 按钮，并返回到文档。此时，原先的英文内容已全部消失。</p>]]></content>
    
    
    <summary type="html">如何快速删除Word文档中的英文内容</summary>
    
    
    
    <category term="技术" scheme="http://www.formeasy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Other" scheme="http://www.formeasy.cc/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>【redis】centos7下安装redis7_centos7安装redis7</title>
    <link href="http://www.formeasy.cc/2025/08/20/Redis/%E3%80%90redis%E3%80%91centos7%E4%B8%8B%E5%AE%89%E8%A3%85redis7_centos7%E5%AE%89%E8%A3%85redis7/"/>
    <id>http://www.formeasy.cc/2025/08/20/Redis/%E3%80%90redis%E3%80%91centos7%E4%B8%8B%E5%AE%89%E8%A3%85redis7_centos7%E5%AE%89%E8%A3%85redis7/</id>
    <published>2025-08-20T01:33:14.000Z</published>
    <updated>2025-08-20T01:52:15.828Z</updated>
    
    <content type="html"><![CDATA[<p>在CentOS 7下安装Redis7可以通过以下两种方法实现：手动编译安装和使用YUM进行安装。</p><p>CentOS 7系统的环境和版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/centos-release</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure><h2 id="手动编译安装"><a class="markdownIt-Anchor" href="#手动编译安装"></a> 手动编译安装</h2><p>参考官方文档：<a href="https://redis.io/docs/latest/operate/oss%5C_and%5C_stack/install/install-redis/install-redis-from-source/">https://redis.io/docs/latest/operate/oss\_and\_stack/install/install-redis/install-redis-from-source/</a></p><ol><li>下载Redis7安装包：<br />从Redis的官方网站下载Redis7的源代码包。例如，下载Redis7.2.0：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /opt/soft</span><br><span class="line">$ sudo wget https://download.redis.io/releases/redis-7.2.0.tar.gz</span><br></pre></td></tr></table></figure><ol start="2"><li>编译并安装Redis7：<br />下载完成后，解压缩源代码包，并进入解压后的目录进行编译和安装：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tar -zxvf redis-7.2.0.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> redis-7.2.0</span><br><span class="line">$ sudo make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure><p>如果编译过程中报错，很有可能是操作系统没有安装如下依赖，Redis的编译依赖于GCC和一些其他开发工具。可以通过以下命令安装这些依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum update -y</span><br><span class="line">$ sudo yum install -y gcc tcl make</span><br></pre></td></tr></table></figure><p>在解压缩源代码包下有一个README.md文件，介绍了如何源码<a href="https://so.csdn.net/so/search?q=%E5%AE%89%E8%A3%85redis&amp;spm=1001.2101.3001.7020">安装redis</a>。</p><ol start="3"><li>配置Redis：<br />编译安装完成后，Redis的可执行文件（如redis-server、redis-cli）会被放置在/usr/local/bin/目录下。<br />Redis的配置文件默认位于源代码目录下的redis.conf。可以将此文件复制到/etc/或其他你喜欢的位置，并对其进行编辑以满足需求。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">cp</span> redis.conf /etc/redis.conf</span><br><span class="line">$ sudo vim /etc/redis.conf</span><br></pre></td></tr></table></figure><p>根据需要修改配置文件，例如：</p><ul><li>将bind 127.0.0.1改为bind 0.0.0.0，允许远程连接（如果需要的话）。</li><li>将daemonize no改为daemonize yes，让Redis在后台运行。</li><li>设置密码（可选），取消requirepass的注释并设置密码。</li><li>设置日志文件路径和数据库持久化方式等（可选）。</li></ul><ol start="4"><li>启动Redis服务：<br />配置完成后，可以使用以下命令启动Redis服务：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server /etc/redis.conf</span><br></pre></td></tr></table></figure><ol start="5"><li>验证Redis服务：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ redis-cli</span><br><span class="line">127.0.0.1:6379&gt; auth redispass</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure><ol start="6"><li>设置Redis开机自启：<br />如果想让Redis在系统启动时自动启动，需要创建一个systemd服务单元文件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/systemd/system/redis.service</span><br></pre></td></tr></table></figure><p>在文件中添加以下内容（注意修改ExecStart的路径以匹配Redis配置文件位置）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Redis In-Memory Data Store</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">ExecStart=/usr/local/bin/redis-server /etc/redis.conf</span><br><span class="line">ExecStop=/usr/local/bin/redis-cli shutdown</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>创建一个redis用户和组（如果它们不存在的话），并将/etc/redis.conf文件的权限设置给这个用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo groupadd redis</span><br><span class="line">$ sudo useradd -g redis redis</span><br></pre></td></tr></table></figure><p>重新加载systemd配置，启动Redis服务，并设置开机自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line">$ sudo systemctl start redis</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> redis</span><br></pre></td></tr></table></figure><h2 id="使用yum进行安装"><a class="markdownIt-Anchor" href="#使用yum进行安装"></a> 使用YUM进行安装</h2><ol><li>更新YUM源：<br />由于CentOS 7官方镜像已经被下单，官方的镜像地址<code>mirrorlist.centos.org</code>无法找到所需的文件，这里使用阿里云的镜像地址：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><p>在进行任何安装之前，首先要确保YUM源是最新的。运行以下命令来更新YUM源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum update -y</span><br></pre></td></tr></table></figure><p>如果不更改镜像地址，执行上面的命令会抛出如下错误：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Could not retrieve mirrorlist http://mirrorlist.centos.org/?release=7&amp;arch=x86_64&amp;repo=os&amp;infra=stock error was</span><br><span class="line">14: curl#6 - &quot;Could not resolve host: mirrorlist.centos.org; Unknown error&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>添加EPEL和Remi Repository：<br />Redis7不在CentOS 7的默认仓库中，因此需要添加EPEL（Extra Packages for Enterprise Linux）和Remi Repository。</li></ol><p>安装EPEL：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install epel-release -y</span><br></pre></td></tr></table></figure><p>安装Remi repository：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y https://mirrors.tuna.tsinghua.edu.cn/remi/enterprise/remi-release-7.rpm</span><br></pre></td></tr></table></figure><p>启用Remi仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum-config-manager --<span class="built_in">enable</span> remi</span><br></pre></td></tr></table></figure><ol start="3"><li>安装Redis 7：<br />使用YUM命令从Remi仓库中下载并安装Redis 7：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install redis -y</span><br></pre></td></tr></table></figure><p>配置文件默认位置在/etc/redis.conf。</p><ol start="4"><li>启动Redis服务：<br />安装完成后，启动Redis服务：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start redis</span><br></pre></td></tr></table></figure><ol start="5"><li>设置Redis服务为开机启动：<br />使用以下命令确保Redis在系统重启时自动启动：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">enable</span> redis</span><br></pre></td></tr></table></figure><ol start="6"><li>验证Redis安装：<br />使用以下命令检查Redis服务的状态：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl status redis</span><br></pre></td></tr></table></figure><p>如果Redis服务正在运行，应能看到“active (running)”的状态。</p><h2 id="redisconf常用配置"><a class="markdownIt-Anchor" href="#redisconf常用配置"></a> redis.conf常用配置</h2><p>开启守护进程模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">daemonize <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>daemonize设置yes或者no区别：</p><ul><li><p>yes：代表开启守护进程模式，redis会在后台运行，并将进程pid号写入至redis.conf选项pidfile设置的文件中。</p></li><li><p>no：启动将进入redis的命令行界面，exit或者关闭连接工具(putty，xshell等)都会导致redis进程退出。</p></li></ul><p>bind配置项用于指定Redis服务器监听的IP地址，默认是使用的本地回环地址，也就是本地才能连接，可以注释掉这一行或者改为bind 0.0.0.0放开所有的外部网络访问。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#bind 127.0.0.1</span><br><span class="line">bind 0.0.0.0</span><br></pre></td></tr></table></figure><p>protected-mode用来限制对Redis服务器的访问。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protected-mode yes</span><br></pre></td></tr></table></figure><p>外部想要访问redis服务，除了需要修改bind的IP地址，还需要满足以下两个条件之一：</p><ul><li>protected-mode设置为no，将允许Redis接受来自任何网络接口的连接请求，只要这些接口被Redis监听。</li><li>protected-mode设置为yes，同时设置密码（requirepass）</li></ul>]]></content>
    
    
    <summary type="html">【redis】centos7下安装redis7_centos7安装redis7</summary>
    
    
    
    <category term="数据库" scheme="http://www.formeasy.cc/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="Redis" scheme="http://www.formeasy.cc/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis深度解析：特性、缓存策略、持久化与集群实战</title>
    <link href="http://www.formeasy.cc/2025/08/20/Redis/Redis%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%9A%E7%89%B9%E6%80%A7%E3%80%81%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5%E3%80%81%E6%8C%81%E4%B9%85%E5%8C%96%E4%B8%8E%E9%9B%86%E7%BE%A4%E5%AE%9E%E6%88%98/"/>
    <id>http://www.formeasy.cc/2025/08/20/Redis/Redis%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%9A%E7%89%B9%E6%80%A7%E3%80%81%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5%E3%80%81%E6%8C%81%E4%B9%85%E5%8C%96%E4%B8%8E%E9%9B%86%E7%BE%A4%E5%AE%9E%E6%88%98/</id>
    <published>2025-08-20T01:22:19.000Z</published>
    <updated>2025-08-20T01:51:48.183Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-redis-是什么"><a class="markdownIt-Anchor" href="#一-redis-是什么"></a> 一、Redis 是什么</h2><p>Redis 是Remote Dictionary Server(Redis) 的缩写，是一个使用 C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型的Key-Value数据库，并提供多种语言的API。</p><p>它是一种 NoSQL（not-only sql，泛指非关系型数据库）的数据库，可以用作数据库、缓存、消息中间件、分布式锁等。</p><h2 id="二-redis-的特点和功能"><a class="markdownIt-Anchor" href="#二-redis-的特点和功能"></a> 二、Redis 的特点和功能</h2><ul><li><p>性能优秀，数据在内存中，读写速度非常快，支持并发 10W QPS（每秒查询量）。</p></li><li><p>单进程单线程，是线程安全的，采用 IO 多路复用机制。</p></li><li><p>丰富的数据类型，支持字符串（strings）、散列（hashes）、列表（lists）、集合（sets）、有序集合（sorted sets）等。</p></li><li><p>支持数据持久化。</p><p>可以将内存中数据保存在磁盘中，重启时加载。</p></li><li><p>主从复制，哨兵，高可用。</p></li><li><p>可以用作分布式锁。</p></li><li><p>可以作为消息中间件使用，支持发布订阅</p></li></ul><h2 id="三-缓存和数据库数据一致性问题"><a class="markdownIt-Anchor" href="#三-缓存和数据库数据一致性问题"></a> 三、缓存和数据库数据一致性问题</h2><p>分布式环境下非常容易出现缓存和数据库间数据一致性问题，针对这一点，如果项目对缓存的要求是强一致性的，那么就不要使用缓存。</p><p>我们只能采取合适的策略来降低缓存和数据库间数据不一致的概率，而无法保证两者间的强一致性。</p><h2 id="四-缓存选型redis-和-memcached-的区别"><a class="markdownIt-Anchor" href="#四-缓存选型redis-和-memcached-的区别"></a> 四、缓存选型（Redis 和 Memcached 的区别）</h2><p>Redis 和 Memcached 的区别</p><ul><li><p>**存储方式上：**Memcache 会把数据全部存在内存之中，断电后会挂掉，数据不能超过内存大小。Redis 有部分数据存在硬盘上，这样能保证数据的持久性。</p></li><li><p>**数据支持类型上：**Memcache 对数据类型的支持简单，只支持简单的 key-value，，而 Redis 支持五种数据类型。</p></li><li><p>**使用底层模型不同：**它们之间底层实现方式以及与客户端之间通信的应用协议不一样。Redis 直接自己构建了 VM 机制，因为一般的系统调用系统函数的话，会浪费一定的时间去移动和请求。</p></li><li><p>**Value 的大小：**Redis 可以达到 1GB，而 Memcache 只有 1MB</p></li></ul><h2 id="五-redis-为什么能这么快"><a class="markdownIt-Anchor" href="#五-redis-为什么能这么快"></a> 五、Redis 为什么能这么快</h2><p>官方提供的数据可以达到 100000+ 的 QPS（每秒内的查询次数），这个数据不比 Memcached 差。</p><ul><li><p>Redis 完全基于内存，绝大部分请求是纯粹的内存操作，非常迅速，数据存在内存中，类似于 HashMap，HashMap 的优势就是查找和操作的时间复杂度是 O(1)。</p></li><li><p>数据结构简单，对数据操作也简单。</p></li><li><p>采用单线程，避免了不必要的上下文切换和竞争条件，不存在多线程导致的 CPU 切换，不用去考虑各种锁的问题，不存在加锁释放锁操作，没有死锁问题导致的性能消耗。</p></li><li><p>使用多路复用 IO 模型，非阻塞 IO。</p></li></ul><h2 id="六-redis-缓存的淘汰策略"><a class="markdownIt-Anchor" href="#六-redis-缓存的淘汰策略"></a> 六、Redis 缓存的淘汰策略</h2><p>Redis 有六种淘汰策略，如下图：</p><p><img src="3c9b78d0ad34dd35dfc885222b799e02.png" alt="" /></p><p>Redis 4.0 加入了 LFU（least frequency use）淘汰策略，包括 volatile-lfu 和 allkeys-lfu，通过统计访问频率，将访问频率最少，即最不经常使用的 KV 淘汰</p><h2 id="七-redis-持久化"><a class="markdownIt-Anchor" href="#七-redis-持久化"></a> 七、Redis 持久化</h2><h3 id="1为什么需要持久化"><a class="markdownIt-Anchor" href="#1为什么需要持久化"></a> <strong>1.为什么需要持久化</strong></h3><p>比如redis里有10gb数据，突然停电或者意外宕机了，再启动的时候10gb都没了！所以需要持久化，宕机后再通过持久化文件将数据恢复。</p><h3 id="2redis-的持久化策略的两种方式"><a class="markdownIt-Anchor" href="#2redis-的持久化策略的两种方式"></a> 2.Redis 的持久化策略的两种方式</h3><ul><li><p>**RDB（默认）：**快照形式是直接把内存中的数据保存到 dump.rdb 文件中，定时全量保存，保存的是数据。</p></li><li><p>**AOF：**把所有的对 Redis 的服务器进行修改的命令都保存到 appendonly.aof 文件中，定时向文件中追加，保存的是命令。</p></li></ul><h3 id="3rdb的特点"><a class="markdownIt-Anchor" href="#3rdb的特点"></a> 3.RDB的特点</h3><p>RDB性能高，速率快，全量持久化，但数据可靠性低。</p><p>(1)rdb文件</p><p>RDB(Redis DataBase)：基于时间的快照，Redis默认是会以快照&quot;RDB&quot;的形式将数据持久化到磁盘的一个二进制文件 dump.rdb中，其默认只保留当前最新的一次快照，特点是执行速度比较快，缺点是可能会丢失从上次快照到当前时间点之间未做快照的数据。</p><p>但是我们可以通过配置文件配置多个时间点的备份,这样就可以保留多个备份,当出现问题时候方便恢复到不同时间节点,很适合备份,并且此文件格式支持不少第三方工具可以进行后续的数据分析。比如:可以在最近24小时内,每小时进行一次备份RDB文件，并且在每个月的每一天，也备份一个RDB文件，这样的话，即便遇上问题，也可以随时将数据集还原到不同的版本，所以RDB 非常适合灾难恢复。</p><p>(2)优点</p><p>由于rdb文件都是二进制文件，所以很小，在灾难恢复的时候会快些。</p><p>他的效率（宕机恢复的效率，而不是持久化的效率）相对于aof要高（bgsave而不是save），因为每来个请求他都不会处理任何事，只是bgsave的时候他会fork()子进程且可能copyonwrite，但copyonwrite只是一个寻址的过程，纳秒级别的。而aof每次都是写盘操作，毫秒级别。没法比。</p><p>注：fork()子进程以及copyonwrite（写时复制）的详解可见文末的参考“RDB原理”</p><p>(3)缺点</p><p>数据可靠性比aof低，也就是会丢失的多。因为aof可以配置每秒都持久化或者每个命令处理完就持久化一次这种高频率的操作，而rdb的话虽然也是靠配置进行bgsave，但是没有aof配置那么灵活，也没aof持久化快，因为rdb每次全量，aof每次只追加。</p><h3 id="4aof的特点"><a class="markdownIt-Anchor" href="#4aof的特点"></a> 4.AOF的特点</h3><p>AOF数据可靠性高，增量持久化，但宕机恢复的效率相比于RDB还是略低。</p><p>(1)aof文件</p><p>AOF(Append Only File)：只追加文件，使用 AOF 做持久化，每一个写命令都通过 write 函数追加到 appendonly.aof 中。而RDB是压缩成二进制等时机开子进程去干这件事。</p><p>(2)优点</p><p>①持久化的速度快，因为每次都只是追加，rdb每次都全量持久化。</p><p>②全程持久化，只需要在配置中开启 appendonly yes。这样 Redis 每执行一个修改数据的命令，都会把它添加到 AOF 文件中，当 Redis 重启时，将会读取 AOF 文件进行重放，恢复到 Redis 关闭前的最后时刻。</p><p>③数据相对更可靠，丢失少，使用 AOF 的优点是会让 Redis 变得非常耐久。可以设置不同的 Fsync 策略，AOF的默认策略是每秒钟 Fsync 一次，在这种配置下，就算发生故障停机，也最多丢失一秒钟的数据。</p><p>(3)缺点</p><p>灾难性恢复的时候过慢，因为aof每次都只追加原命令，导致aof文件过大，但是后面会rewrite，但是相对于rdb也是慢的。</p><h3 id="5项目中如何选择这两种方式"><a class="markdownIt-Anchor" href="#5项目中如何选择这两种方式"></a> 5.项目中如何选择这两种方式</h3><p>如果你追求性能，同时仍然可以承受数分钟内的数据丢失的话，那么可以使用 RDB 持久化。</p><p>如果你非常关心你的数据，并且性能对性能要求不是那么高的话，那么可以使用 AOF 持久化。</p><p>注：Redis 支持同时开启 RDB 和 AOF，系统重启后，Redis 会优先使用 AOF 来恢复数据，这样丢失的数据会最少。</p><h2 id="八-redis-集群模式选择"><a class="markdownIt-Anchor" href="#八-redis-集群模式选择"></a> 八、Redis 集群模式选择</h2><p>redis集群有三种模式   1.主从复制   2.哨兵模式   3.Cluster集群模式</p><p>主从复制：选取有三台（奇数）服务器，一主两从，主节点负责写入，从节点负责读取，达到读写分离，此时三台集群上的数据一致，但是有个不好的点在于 当主节点挂了的话，就需要人为操作，来重启主节点。</p><p>哨兵模式：哨兵模式在原有主从复制的基础上加了哨兵机制，简单理解就是监测各个节点活性，假如主节点挂了，还可以自动重启主节点。</p><p>Cluster集群模式：将数据均分到所有主节点上。与主从复制不同，集群中的节点不存储全量数据，而是分片存储。这种方式适合数据量较大的场景，可以均摊服务器压力</p><h2 id="九-redis-哨兵的基本原理"><a class="markdownIt-Anchor" href="#九-redis-哨兵的基本原理"></a> 九、Redis 哨兵的基本原理</h2><p><img src="470bac817637351a0240be4294be8f4b.jpeg" alt="图片" /></p><p>如图，是 Redis Sentinel（哨兵）的架构图。Redis Sentinel（哨兵）主要功能包括主节点存活检测、主从运行情况检测、自动故障转移、主从切换。</p><p>Redis Sentinel 最小配置是一主一从。Redis 的 Sentinel 系统可以用来管理多个 Redis 服务器。</p><p>该系统可以执行以下四个任务：</p><ul><li><p>**监控：**不断检查主服务器和从服务器是否正常运行。</p></li><li><p>**通知：**当被监控的某个 Redis 服务器出现问题，Sentinel 通过 API 脚本向管理员或者其他应用程序发出通知。</p></li><li><p>**自动故障转移：**当主节点不能正常工作时，Sentinel 会开始一次自动的故障转移操作，它会将与失效主节点是主从关系的其中一个从节点升级为新的主节点，并且将其他的从节点指向新的主节点，这样人工干预就可以免了。</p></li><li><p>**配置提供者：**在 Redis Sentinel 模式下，客户端应用在初始化时连接的是 Sentinel 节点集合，从中获取主节点的信息。</p></li></ul><p>哨兵的工作原理：</p><p><img src="ffb3a31699849f207318312704875795.jpeg" alt="图片" /></p><p>①每个 Sentinel 节点都需要定期执行以下任务：每个 Sentinel 以每秒一次的频率，向它所知的主服务器、从服务器以及其他的 Sentinel 实例发送一个 PING 命令。（如上图）</p><p><img src="2c3e23d30640c78d9e979e30271f2aec.jpeg" alt="图片" /></p><p>②如果一个实例距离最后一次有效回复 PING 命令的时间超过 down-after-milliseconds 所指定的值，那么这个实例会被 Sentinel 标记为主观下线。（如上图）</p><p><img src="7bffd1f46d77e42a2a693a6798623090.jpeg" alt="图片" /></p><p>③如果一个主服务器被标记为主观下线，那么正在监视这个服务器的所有 Sentinel 节点，要以每秒一次的频率确认主服务器的确进入了主观下线状态。</p><p><img src="772194763db4a8ef9b863643906d8670.jpeg" alt="图片" /></p><p>④如果一个主服务器被标记为主观下线，并且有足够数量的 Sentinel（至少要达到配置文件指定的数量）在指定的时间范围内同意这一判断，那么这个主服务器被标记为客观下线。</p><p><img src="b4682bde082521063221016e22b3ff37.jpeg" alt="图片" /></p><p>⑤一般情况下，每个 Sentinel 会以每 10 秒一次的频率向它已知的所有主服务器和从服务器发送 INFO 命令。</p><p>当一个主服务器被标记为客观下线时，Sentinel 向下线主服务器的所有从服务器发送 INFO 命令的频率，会从 10 秒一次改为每秒一次。</p><p><img src="307d347ba48f473e8e957fc735932186.jpeg" alt="图片" /></p><p>⑥Sentinel 和其他 Sentinel 协商客观下线的主节点的状态，如果处于 SDOWN 状态，则投票自动选出新的主节点，将剩余从节点指向新的主节点进行数据复制。</p><p><img src="a3af2976aff3ddb91e0ef0aac7893923.jpeg" alt="图片" /></p><p>⑦当没有足够数量的 Sentinel 同意主服务器下线时，主服务器的客观下线状态就会被移除。</p><p>当主服务器重新向 Sentinel 的 PING 命令返回有效回复时，主服务器的主观下线状态就会被移除。</p><h2 id="十-redis缓存雪崩-穿透-击穿概念及解决办法"><a class="markdownIt-Anchor" href="#十-redis缓存雪崩-穿透-击穿概念及解决办法"></a> 十、Redis缓存雪崩、穿透、击穿概念及解决办法</h2><p><strong>雪崩场景：</strong></p><p>如果首页所有 Key 的失效时间都是 12 小时，中午 12 点刷新的，我零点有个大促活动大量用户涌入，假设每秒 6000 个请求，本来缓存可以抗住每秒 5000 个请求，但是缓存中所有 Key 都失效了，此时 6000 个/秒的请求全部落在了数据库上，数据库必然扛不住，真实情况可能 数据库都没反应过来直接挂了，此时，如果没什么特别的方案来处理，DBA 很着急，重启数据库，但是数据库立马又被新流量给打死了。这就是我理解的缓存雪崩。</p><p><strong>雪崩解决方案：</strong></p><p>在批量往 Redis 存数据的时候，把每个 Key 的失效时间都加个随机值就好了，这样可以保证数据不会再同一时间大面积失效，或者设置热点数据永不过期。</p><p><strong>穿透场景：</strong></p><p>缓存穿透是指缓存和数据库中都没有的数据，而用户（黑客）不断发起请求，这样的不断攻击导致数据库压力很大，严重会击垮数据库</p><p><strong>穿透解决方案：</strong></p><p>缓存穿透我会在接口层增加校验，比如用户鉴权，参数做校验，不合法的校验直接 return，或者 使用高级用法布隆过滤器（Bloom Filter）这个也能很好的预防缓存穿透的发生。</p><p><strong>击穿场景：</strong></p><p>缓存击穿，这个跟缓存雪崩有点像，但是又有一点不一样，缓存雪崩是因为大面积的缓存失效，打崩了 DB。而缓存击穿不同的是缓存击穿是指一个 Key 非常热点，在不停地扛着大量的请求，大并发集中对这一个点进行访问，当这个 Key 在失效的瞬间，持续的大并发直接落到了数据库上，就在这个 Key 的点上击穿了缓存。</p><p><strong>击穿解决方案：</strong></p><p>使用互斥锁或者分布式锁来对并发请求进行控制，避免对同一资源的并发读写竞争，另外也可以使用热点数据预加载等机制来提前将热点数据加入缓存，在其失效时快速刷新缓存</p><p>参考：<a href="https://mp.weixin.qq.com/s/G0PUOOD9_IgTJEVUKsTOmg" title="2W 字图解 Redis，面试必过必杀技！！">2W 字图解 Redis，面试必过必杀技！！</a></p><p><a href="https://mp.weixin.qq.com/s/1TYKqtpo59HhliZtqcBQiw" title="JAVA架构 | Redis分布式缓存原理分析">JAVA架构 | Redis分布式缓存原理分析</a></p><p><a href="https://blog.csdn.net/ymb615ymb/article/details/123392106" title="          十三、Redis持久化之RDB原理_会飞的IT蜗牛的博客-CSDN博客_rdb">十三、Redis持久化之RDB原理_会飞的IT蜗牛的博客-CSDN博客_rdb</a></p>]]></content>
    
    
    <summary type="html">Redis深度解析：特性、缓存策略、持久化与集群实战</summary>
    
    
    
    <category term="数据库" scheme="http://www.formeasy.cc/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="Redis" scheme="http://www.formeasy.cc/tags/Redis/"/>
    
  </entry>
  
</feed>
